/*
Carbon

Connect external data to LLMs, no matter the source.

The version of the OpenAPI document: 1.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { AutoSyncedSourceTypesPropertyInner } from './auto-synced-source-types-property-inner';
import { ParsedTextFormatsNullable } from './parsed-text-formats-nullable';
import { TranscriptionServiceNullable } from './transcription-service-nullable';

/**
 * 
 * @export
 * @interface FileSyncConfig
 */
export interface FileSyncConfig {
    /**
     * File types to automatically sync when the data source connects. Only a subset of file types can be          controlled. If not supported, then they will always be synced
     * @type {Array<AutoSyncedSourceTypesPropertyInner>}
     * @memberof FileSyncConfig
     */
    'auto_synced_source_types'?: Array<AutoSyncedSourceTypesPropertyInner>;
    /**
     * Automatically sync attachments from files where supported. Currently applies to Helpdesk Tickets
     * @type {boolean}
     * @memberof FileSyncConfig
     */
    'sync_attachments'?: boolean;
    /**
     * Detect audio language before transcription for audio files
     * @type {boolean}
     * @memberof FileSyncConfig
     */
    'detect_audio_language'?: boolean;
    /**
     * 
     * @type {TranscriptionServiceNullable}
     * @memberof FileSyncConfig
     */
    'transcription_service'?: TranscriptionServiceNullable | null;
    /**
     * Detect multiple speakers and label segments of speech by speaker for audio files.
     * @type {boolean}
     * @memberof FileSyncConfig
     */
    'include_speaker_labels'?: boolean;
    /**
     * Whether to split tabular rows into chunks. Currently only valid for CSV, TSV, and XLSX files.
     * @type {boolean}
     * @memberof FileSyncConfig
     */
    'split_rows'?: boolean;
    /**
     * If this flag is enabled, the file will be chunked and stored with Carbon,           but no embeddings will be generated. This overrides the skip_embedding_generation flag.
     * @type {boolean}
     * @memberof FileSyncConfig
     */
    'generate_chunks_only'?: boolean;
    /**
     * If this flag is enabled, the file will be stored with Carbon, but no chunks or embeddings will be generated.            This overrides the skip_embedding_generation and generate_chunks_only flags.
     * @type {boolean}
     * @memberof FileSyncConfig
     */
    'store_file_only'?: boolean;
    /**
     * Setting this flag will create a new file record with Carbon but skip any and all processing.          This means that we do not download the remote file content or generate any chunks or embeddings. We will store         some metadata like name, external id, and external URL depending on the source you are syncing from. Note that this          flag overrides both skip_embedding_generation and generate_chunks_only flags. The file will be moved to          READY_TO_SYNC status.
     * @type {boolean}
     * @memberof FileSyncConfig
     */
    'skip_file_processing'?: boolean;
    /**
     * The format in which the text content of the file should be parsed. Notion files are the only files         that support this feature. The default parsed text format is plain text.
     * @type {ParsedTextFormatsNullable}
     * @memberof FileSyncConfig
     */
    'parsed_text_format'?: ParsedTextFormatsNullable | null;
}

