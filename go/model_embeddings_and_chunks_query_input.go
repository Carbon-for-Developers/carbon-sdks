/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// EmbeddingsAndChunksQueryInput struct for EmbeddingsAndChunksQueryInput
type EmbeddingsAndChunksQueryInput struct {
	Pagination *Pagination `json:"pagination,omitempty"`
	OrderBy *EmbeddingsAndChunksOrderByColumns `json:"order_by,omitempty"`
	OrderDir *OrderDir `json:"order_dir,omitempty"`
	Filters EmbeddingsAndChunksFilters `json:"filters"`
	IncludeVectors *bool `json:"include_vectors,omitempty"`
}

// NewEmbeddingsAndChunksQueryInput instantiates a new EmbeddingsAndChunksQueryInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbeddingsAndChunksQueryInput(filters EmbeddingsAndChunksFilters) *EmbeddingsAndChunksQueryInput {
	this := EmbeddingsAndChunksQueryInput{}
	this.Filters = filters
	var includeVectors bool = false
	this.IncludeVectors = &includeVectors
	return &this
}

// NewEmbeddingsAndChunksQueryInputWithDefaults instantiates a new EmbeddingsAndChunksQueryInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbeddingsAndChunksQueryInputWithDefaults() *EmbeddingsAndChunksQueryInput {
	this := EmbeddingsAndChunksQueryInput{}
	var includeVectors bool = false
	this.IncludeVectors = &includeVectors
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *EmbeddingsAndChunksQueryInput) GetPagination() Pagination {
	if o == nil || isNil(o.Pagination) {
		var ret Pagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddingsAndChunksQueryInput) GetPaginationOk() (*Pagination, bool) {
	if o == nil || isNil(o.Pagination) {
    return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *EmbeddingsAndChunksQueryInput) HasPagination() bool {
	if o != nil && !isNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given Pagination and assigns it to the Pagination field.
func (o *EmbeddingsAndChunksQueryInput) SetPagination(v Pagination) {
	o.Pagination = &v
}

// GetOrderBy returns the OrderBy field value if set, zero value otherwise.
func (o *EmbeddingsAndChunksQueryInput) GetOrderBy() EmbeddingsAndChunksOrderByColumns {
	if o == nil || isNil(o.OrderBy) {
		var ret EmbeddingsAndChunksOrderByColumns
		return ret
	}
	return *o.OrderBy
}

// GetOrderByOk returns a tuple with the OrderBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddingsAndChunksQueryInput) GetOrderByOk() (*EmbeddingsAndChunksOrderByColumns, bool) {
	if o == nil || isNil(o.OrderBy) {
    return nil, false
	}
	return o.OrderBy, true
}

// HasOrderBy returns a boolean if a field has been set.
func (o *EmbeddingsAndChunksQueryInput) HasOrderBy() bool {
	if o != nil && !isNil(o.OrderBy) {
		return true
	}

	return false
}

// SetOrderBy gets a reference to the given EmbeddingsAndChunksOrderByColumns and assigns it to the OrderBy field.
func (o *EmbeddingsAndChunksQueryInput) SetOrderBy(v EmbeddingsAndChunksOrderByColumns) {
	o.OrderBy = &v
}

// GetOrderDir returns the OrderDir field value if set, zero value otherwise.
func (o *EmbeddingsAndChunksQueryInput) GetOrderDir() OrderDir {
	if o == nil || isNil(o.OrderDir) {
		var ret OrderDir
		return ret
	}
	return *o.OrderDir
}

// GetOrderDirOk returns a tuple with the OrderDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddingsAndChunksQueryInput) GetOrderDirOk() (*OrderDir, bool) {
	if o == nil || isNil(o.OrderDir) {
    return nil, false
	}
	return o.OrderDir, true
}

// HasOrderDir returns a boolean if a field has been set.
func (o *EmbeddingsAndChunksQueryInput) HasOrderDir() bool {
	if o != nil && !isNil(o.OrderDir) {
		return true
	}

	return false
}

// SetOrderDir gets a reference to the given OrderDir and assigns it to the OrderDir field.
func (o *EmbeddingsAndChunksQueryInput) SetOrderDir(v OrderDir) {
	o.OrderDir = &v
}

// GetFilters returns the Filters field value
func (o *EmbeddingsAndChunksQueryInput) GetFilters() EmbeddingsAndChunksFilters {
	if o == nil {
		var ret EmbeddingsAndChunksFilters
		return ret
	}

	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value
// and a boolean to check if the value has been set.
func (o *EmbeddingsAndChunksQueryInput) GetFiltersOk() (*EmbeddingsAndChunksFilters, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Filters, true
}

// SetFilters sets field value
func (o *EmbeddingsAndChunksQueryInput) SetFilters(v EmbeddingsAndChunksFilters) {
	o.Filters = v
}

// GetIncludeVectors returns the IncludeVectors field value if set, zero value otherwise.
func (o *EmbeddingsAndChunksQueryInput) GetIncludeVectors() bool {
	if o == nil || isNil(o.IncludeVectors) {
		var ret bool
		return ret
	}
	return *o.IncludeVectors
}

// GetIncludeVectorsOk returns a tuple with the IncludeVectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddingsAndChunksQueryInput) GetIncludeVectorsOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeVectors) {
    return nil, false
	}
	return o.IncludeVectors, true
}

// HasIncludeVectors returns a boolean if a field has been set.
func (o *EmbeddingsAndChunksQueryInput) HasIncludeVectors() bool {
	if o != nil && !isNil(o.IncludeVectors) {
		return true
	}

	return false
}

// SetIncludeVectors gets a reference to the given bool and assigns it to the IncludeVectors field.
func (o *EmbeddingsAndChunksQueryInput) SetIncludeVectors(v bool) {
	o.IncludeVectors = &v
}

func (o EmbeddingsAndChunksQueryInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if !isNil(o.OrderBy) {
		toSerialize["order_by"] = o.OrderBy
	}
	if !isNil(o.OrderDir) {
		toSerialize["order_dir"] = o.OrderDir
	}
	if true {
		toSerialize["filters"] = o.Filters
	}
	if !isNil(o.IncludeVectors) {
		toSerialize["include_vectors"] = o.IncludeVectors
	}
	return json.Marshal(toSerialize)
}

type NullableEmbeddingsAndChunksQueryInput struct {
	value *EmbeddingsAndChunksQueryInput
	isSet bool
}

func (v NullableEmbeddingsAndChunksQueryInput) Get() *EmbeddingsAndChunksQueryInput {
	return v.value
}

func (v *NullableEmbeddingsAndChunksQueryInput) Set(val *EmbeddingsAndChunksQueryInput) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbeddingsAndChunksQueryInput) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbeddingsAndChunksQueryInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbeddingsAndChunksQueryInput(val *EmbeddingsAndChunksQueryInput) *NullableEmbeddingsAndChunksQueryInput {
	return &NullableEmbeddingsAndChunksQueryInput{value: val, isSet: true}
}

func (v NullableEmbeddingsAndChunksQueryInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbeddingsAndChunksQueryInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


