/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
	"time"
)

// WebhookNoKey struct for WebhookNoKey
type WebhookNoKey struct {
	Id int32 `json:"id"`
	OrganizationId int32 `json:"organization_id"`
	Url string `json:"url"`
	Status WebhookStatus `json:"status"`
	StatusReason NullableString `json:"status_reason,omitempty"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// NewWebhookNoKey instantiates a new WebhookNoKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookNoKey(id int32, organizationId int32, url string, status WebhookStatus, createdAt time.Time, updatedAt time.Time) *WebhookNoKey {
	this := WebhookNoKey{}
	this.Id = id
	this.OrganizationId = organizationId
	this.Url = url
	this.Status = status
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewWebhookNoKeyWithDefaults instantiates a new WebhookNoKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookNoKeyWithDefaults() *WebhookNoKey {
	this := WebhookNoKey{}
	return &this
}

// GetId returns the Id field value
func (o *WebhookNoKey) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WebhookNoKey) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WebhookNoKey) SetId(v int32) {
	o.Id = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *WebhookNoKey) GetOrganizationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *WebhookNoKey) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *WebhookNoKey) SetOrganizationId(v int32) {
	o.OrganizationId = v
}

// GetUrl returns the Url field value
func (o *WebhookNoKey) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WebhookNoKey) GetUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WebhookNoKey) SetUrl(v string) {
	o.Url = v
}

// GetStatus returns the Status field value
func (o *WebhookNoKey) GetStatus() WebhookStatus {
	if o == nil {
		var ret WebhookStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *WebhookNoKey) GetStatusOk() (*WebhookStatus, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *WebhookNoKey) SetStatus(v WebhookStatus) {
	o.Status = v
}

// GetStatusReason returns the StatusReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebhookNoKey) GetStatusReason() string {
	if o == nil || isNil(o.StatusReason.Get()) {
		var ret string
		return ret
	}
	return *o.StatusReason.Get()
}

// GetStatusReasonOk returns a tuple with the StatusReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookNoKey) GetStatusReasonOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.StatusReason.Get(), o.StatusReason.IsSet()
}

// HasStatusReason returns a boolean if a field has been set.
func (o *WebhookNoKey) HasStatusReason() bool {
	if o != nil && o.StatusReason.IsSet() {
		return true
	}

	return false
}

// SetStatusReason gets a reference to the given NullableString and assigns it to the StatusReason field.
func (o *WebhookNoKey) SetStatusReason(v string) {
	o.StatusReason.Set(&v)
}
// SetStatusReasonNil sets the value for StatusReason to be an explicit nil
func (o *WebhookNoKey) SetStatusReasonNil() {
	o.StatusReason.Set(nil)
}

// UnsetStatusReason ensures that no value is present for StatusReason, not even an explicit nil
func (o *WebhookNoKey) UnsetStatusReason() {
	o.StatusReason.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *WebhookNoKey) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *WebhookNoKey) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *WebhookNoKey) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *WebhookNoKey) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *WebhookNoKey) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *WebhookNoKey) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o WebhookNoKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.StatusReason.IsSet() {
		toSerialize["status_reason"] = o.StatusReason.Get()
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookNoKey struct {
	value *WebhookNoKey
	isSet bool
}

func (v NullableWebhookNoKey) Get() *WebhookNoKey {
	return v.value
}

func (v *NullableWebhookNoKey) Set(val *WebhookNoKey) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookNoKey) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookNoKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookNoKey(val *WebhookNoKey) *NullableWebhookNoKey {
	return &NullableWebhookNoKey{value: val, isSet: true}
}

func (v NullableWebhookNoKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookNoKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


