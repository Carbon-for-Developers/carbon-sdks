/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
	"fmt"
)

// DataSourceLastSyncActions the model 'DataSourceLastSyncActions'
type DataSourceLastSyncActions string

// List of DataSourceLastSyncActions
const (
	DATASOURCELASTSYNCACTIONS_ADD DataSourceLastSyncActions = "ADD"
	DATASOURCELASTSYNCACTIONS_UPDATE DataSourceLastSyncActions = "UPDATE"
	DATASOURCELASTSYNCACTIONS_CANCEL DataSourceLastSyncActions = "CANCEL"
	DATASOURCELASTSYNCACTIONS_REVOKE DataSourceLastSyncActions = "REVOKE"
)

// All allowed values of DataSourceLastSyncActions enum
var AllowedDataSourceLastSyncActionsEnumValues = []DataSourceLastSyncActions{
	"ADD",
	"UPDATE",
	"CANCEL",
	"REVOKE",
}

func (v *DataSourceLastSyncActions) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DataSourceLastSyncActions(value)
	for _, existing := range AllowedDataSourceLastSyncActionsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DataSourceLastSyncActions", value)
}

// NewDataSourceLastSyncActionsFromValue returns a pointer to a valid DataSourceLastSyncActions
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDataSourceLastSyncActionsFromValue(v string) (*DataSourceLastSyncActions, error) {
	ev := DataSourceLastSyncActions(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DataSourceLastSyncActions: valid values are %v", v, AllowedDataSourceLastSyncActionsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DataSourceLastSyncActions) IsValid() bool {
	for _, existing := range AllowedDataSourceLastSyncActionsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DataSourceLastSyncActions value
func (v DataSourceLastSyncActions) Ptr() *DataSourceLastSyncActions {
	return &v
}

type NullableDataSourceLastSyncActions struct {
	value *DataSourceLastSyncActions
	isSet bool
}

func (v NullableDataSourceLastSyncActions) Get() *DataSourceLastSyncActions {
	return v.value
}

func (v *NullableDataSourceLastSyncActions) Set(val *DataSourceLastSyncActions) {
	v.value = val
	v.isSet = true
}

func (v NullableDataSourceLastSyncActions) IsSet() bool {
	return v.isSet
}

func (v *NullableDataSourceLastSyncActions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataSourceLastSyncActions(val *DataSourceLastSyncActions) *NullableDataSourceLastSyncActions {
	return &NullableDataSourceLastSyncActions{value: val, isSet: true}
}

func (v NullableDataSourceLastSyncActions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataSourceLastSyncActions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

