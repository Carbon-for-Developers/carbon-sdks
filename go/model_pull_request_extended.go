/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// PullRequestExtended struct for PullRequestExtended
type PullRequestExtended struct {
	Title string `json:"title"`
	Id int32 `json:"id"`
	Url string `json:"url"`
	Number int32 `json:"number"`
	State PRState `json:"state"`
	User User `json:"user"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	ClosedAt NullableString `json:"closed_at"`
	MergedAt NullableString `json:"merged_at"`
	RequestedReviewers []User `json:"requested_reviewers"`
	RequestedTeams []Team `json:"requested_teams"`
	Labels []Label `json:"labels"`
	Draft bool `json:"draft"`
	Head HeadOrBase `json:"head"`
	Base HeadOrBase `json:"base"`
	RemoteData map[string]interface{} `json:"remote_data"`
	Merged bool `json:"merged"`
	NumComments int32 `json:"num_comments"`
	NumReviewComments int32 `json:"num_review_comments"`
	NumCommits int32 `json:"num_commits"`
	NumAdditions int32 `json:"num_additions"`
	NumDeletions int32 `json:"num_deletions"`
	NumChangedFiles int32 `json:"num_changed_files"`
}

// NewPullRequestExtended instantiates a new PullRequestExtended object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPullRequestExtended(title string, id int32, url string, number int32, state PRState, user User, createdAt string, updatedAt string, closedAt NullableString, mergedAt NullableString, requestedReviewers []User, requestedTeams []Team, labels []Label, draft bool, head HeadOrBase, base HeadOrBase, remoteData map[string]interface{}, merged bool, numComments int32, numReviewComments int32, numCommits int32, numAdditions int32, numDeletions int32, numChangedFiles int32) *PullRequestExtended {
	this := PullRequestExtended{}
	this.Title = title
	this.Id = id
	this.Url = url
	this.Number = number
	this.State = state
	this.User = user
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.ClosedAt = closedAt
	this.MergedAt = mergedAt
	this.RequestedReviewers = requestedReviewers
	this.RequestedTeams = requestedTeams
	this.Labels = labels
	this.Draft = draft
	this.Head = head
	this.Base = base
	this.RemoteData = remoteData
	this.Merged = merged
	this.NumComments = numComments
	this.NumReviewComments = numReviewComments
	this.NumCommits = numCommits
	this.NumAdditions = numAdditions
	this.NumDeletions = numDeletions
	this.NumChangedFiles = numChangedFiles
	return &this
}

// NewPullRequestExtendedWithDefaults instantiates a new PullRequestExtended object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPullRequestExtendedWithDefaults() *PullRequestExtended {
	this := PullRequestExtended{}
	return &this
}

// GetTitle returns the Title field value
func (o *PullRequestExtended) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *PullRequestExtended) SetTitle(v string) {
	o.Title = v
}

// GetId returns the Id field value
func (o *PullRequestExtended) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PullRequestExtended) SetId(v int32) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *PullRequestExtended) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *PullRequestExtended) SetUrl(v string) {
	o.Url = v
}

// GetNumber returns the Number field value
func (o *PullRequestExtended) GetNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetNumberOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *PullRequestExtended) SetNumber(v int32) {
	o.Number = v
}

// GetState returns the State field value
func (o *PullRequestExtended) GetState() PRState {
	if o == nil {
		var ret PRState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetStateOk() (*PRState, bool) {
	if o == nil {
    return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *PullRequestExtended) SetState(v PRState) {
	o.State = v
}

// GetUser returns the User field value
func (o *PullRequestExtended) GetUser() User {
	if o == nil {
		var ret User
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetUserOk() (*User, bool) {
	if o == nil {
    return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *PullRequestExtended) SetUser(v User) {
	o.User = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PullRequestExtended) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetCreatedAtOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PullRequestExtended) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PullRequestExtended) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PullRequestExtended) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetClosedAt returns the ClosedAt field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PullRequestExtended) GetClosedAt() string {
	if o == nil || o.ClosedAt.Get() == nil {
		var ret string
		return ret
	}

	return *o.ClosedAt.Get()
}

// GetClosedAtOk returns a tuple with the ClosedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PullRequestExtended) GetClosedAtOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ClosedAt.Get(), o.ClosedAt.IsSet()
}

// SetClosedAt sets field value
func (o *PullRequestExtended) SetClosedAt(v string) {
	o.ClosedAt.Set(&v)
}

// GetMergedAt returns the MergedAt field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PullRequestExtended) GetMergedAt() string {
	if o == nil || o.MergedAt.Get() == nil {
		var ret string
		return ret
	}

	return *o.MergedAt.Get()
}

// GetMergedAtOk returns a tuple with the MergedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PullRequestExtended) GetMergedAtOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.MergedAt.Get(), o.MergedAt.IsSet()
}

// SetMergedAt sets field value
func (o *PullRequestExtended) SetMergedAt(v string) {
	o.MergedAt.Set(&v)
}

// GetRequestedReviewers returns the RequestedReviewers field value
func (o *PullRequestExtended) GetRequestedReviewers() []User {
	if o == nil {
		var ret []User
		return ret
	}

	return o.RequestedReviewers
}

// GetRequestedReviewersOk returns a tuple with the RequestedReviewers field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetRequestedReviewersOk() ([]User, bool) {
	if o == nil {
    return nil, false
	}
	return o.RequestedReviewers, true
}

// SetRequestedReviewers sets field value
func (o *PullRequestExtended) SetRequestedReviewers(v []User) {
	o.RequestedReviewers = v
}

// GetRequestedTeams returns the RequestedTeams field value
func (o *PullRequestExtended) GetRequestedTeams() []Team {
	if o == nil {
		var ret []Team
		return ret
	}

	return o.RequestedTeams
}

// GetRequestedTeamsOk returns a tuple with the RequestedTeams field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetRequestedTeamsOk() ([]Team, bool) {
	if o == nil {
    return nil, false
	}
	return o.RequestedTeams, true
}

// SetRequestedTeams sets field value
func (o *PullRequestExtended) SetRequestedTeams(v []Team) {
	o.RequestedTeams = v
}

// GetLabels returns the Labels field value
func (o *PullRequestExtended) GetLabels() []Label {
	if o == nil {
		var ret []Label
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetLabelsOk() ([]Label, bool) {
	if o == nil {
    return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *PullRequestExtended) SetLabels(v []Label) {
	o.Labels = v
}

// GetDraft returns the Draft field value
func (o *PullRequestExtended) GetDraft() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Draft
}

// GetDraftOk returns a tuple with the Draft field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetDraftOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Draft, true
}

// SetDraft sets field value
func (o *PullRequestExtended) SetDraft(v bool) {
	o.Draft = v
}

// GetHead returns the Head field value
func (o *PullRequestExtended) GetHead() HeadOrBase {
	if o == nil {
		var ret HeadOrBase
		return ret
	}

	return o.Head
}

// GetHeadOk returns a tuple with the Head field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetHeadOk() (*HeadOrBase, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Head, true
}

// SetHead sets field value
func (o *PullRequestExtended) SetHead(v HeadOrBase) {
	o.Head = v
}

// GetBase returns the Base field value
func (o *PullRequestExtended) GetBase() HeadOrBase {
	if o == nil {
		var ret HeadOrBase
		return ret
	}

	return o.Base
}

// GetBaseOk returns a tuple with the Base field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetBaseOk() (*HeadOrBase, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Base, true
}

// SetBase sets field value
func (o *PullRequestExtended) SetBase(v HeadOrBase) {
	o.Base = v
}

// GetRemoteData returns the RemoteData field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *PullRequestExtended) GetRemoteData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.RemoteData
}

// GetRemoteDataOk returns a tuple with the RemoteData field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PullRequestExtended) GetRemoteDataOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.RemoteData) {
    return map[string]interface{}{}, false
	}
	return o.RemoteData, true
}

// SetRemoteData sets field value
func (o *PullRequestExtended) SetRemoteData(v map[string]interface{}) {
	o.RemoteData = v
}

// GetMerged returns the Merged field value
func (o *PullRequestExtended) GetMerged() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Merged
}

// GetMergedOk returns a tuple with the Merged field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetMergedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Merged, true
}

// SetMerged sets field value
func (o *PullRequestExtended) SetMerged(v bool) {
	o.Merged = v
}

// GetNumComments returns the NumComments field value
func (o *PullRequestExtended) GetNumComments() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumComments
}

// GetNumCommentsOk returns a tuple with the NumComments field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetNumCommentsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NumComments, true
}

// SetNumComments sets field value
func (o *PullRequestExtended) SetNumComments(v int32) {
	o.NumComments = v
}

// GetNumReviewComments returns the NumReviewComments field value
func (o *PullRequestExtended) GetNumReviewComments() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumReviewComments
}

// GetNumReviewCommentsOk returns a tuple with the NumReviewComments field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetNumReviewCommentsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NumReviewComments, true
}

// SetNumReviewComments sets field value
func (o *PullRequestExtended) SetNumReviewComments(v int32) {
	o.NumReviewComments = v
}

// GetNumCommits returns the NumCommits field value
func (o *PullRequestExtended) GetNumCommits() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumCommits
}

// GetNumCommitsOk returns a tuple with the NumCommits field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetNumCommitsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NumCommits, true
}

// SetNumCommits sets field value
func (o *PullRequestExtended) SetNumCommits(v int32) {
	o.NumCommits = v
}

// GetNumAdditions returns the NumAdditions field value
func (o *PullRequestExtended) GetNumAdditions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumAdditions
}

// GetNumAdditionsOk returns a tuple with the NumAdditions field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetNumAdditionsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NumAdditions, true
}

// SetNumAdditions sets field value
func (o *PullRequestExtended) SetNumAdditions(v int32) {
	o.NumAdditions = v
}

// GetNumDeletions returns the NumDeletions field value
func (o *PullRequestExtended) GetNumDeletions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumDeletions
}

// GetNumDeletionsOk returns a tuple with the NumDeletions field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetNumDeletionsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NumDeletions, true
}

// SetNumDeletions sets field value
func (o *PullRequestExtended) SetNumDeletions(v int32) {
	o.NumDeletions = v
}

// GetNumChangedFiles returns the NumChangedFiles field value
func (o *PullRequestExtended) GetNumChangedFiles() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumChangedFiles
}

// GetNumChangedFilesOk returns a tuple with the NumChangedFiles field value
// and a boolean to check if the value has been set.
func (o *PullRequestExtended) GetNumChangedFilesOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NumChangedFiles, true
}

// SetNumChangedFiles sets field value
func (o *PullRequestExtended) SetNumChangedFiles(v int32) {
	o.NumChangedFiles = v
}

func (o PullRequestExtended) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["number"] = o.Number
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["user"] = o.User
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["closed_at"] = o.ClosedAt.Get()
	}
	if true {
		toSerialize["merged_at"] = o.MergedAt.Get()
	}
	if true {
		toSerialize["requested_reviewers"] = o.RequestedReviewers
	}
	if true {
		toSerialize["requested_teams"] = o.RequestedTeams
	}
	if true {
		toSerialize["labels"] = o.Labels
	}
	if true {
		toSerialize["draft"] = o.Draft
	}
	if true {
		toSerialize["head"] = o.Head
	}
	if true {
		toSerialize["base"] = o.Base
	}
	if o.RemoteData != nil {
		toSerialize["remote_data"] = o.RemoteData
	}
	if true {
		toSerialize["merged"] = o.Merged
	}
	if true {
		toSerialize["num_comments"] = o.NumComments
	}
	if true {
		toSerialize["num_review_comments"] = o.NumReviewComments
	}
	if true {
		toSerialize["num_commits"] = o.NumCommits
	}
	if true {
		toSerialize["num_additions"] = o.NumAdditions
	}
	if true {
		toSerialize["num_deletions"] = o.NumDeletions
	}
	if true {
		toSerialize["num_changed_files"] = o.NumChangedFiles
	}
	return json.Marshal(toSerialize)
}

type NullablePullRequestExtended struct {
	value *PullRequestExtended
	isSet bool
}

func (v NullablePullRequestExtended) Get() *PullRequestExtended {
	return v.value
}

func (v *NullablePullRequestExtended) Set(val *PullRequestExtended) {
	v.value = val
	v.isSet = true
}

func (v NullablePullRequestExtended) IsSet() bool {
	return v.isSet
}

func (v *NullablePullRequestExtended) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePullRequestExtended(val *PullRequestExtended) *NullablePullRequestExtended {
	return &NullablePullRequestExtended{value: val, isSet: true}
}

func (v NullablePullRequestExtended) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePullRequestExtended) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


