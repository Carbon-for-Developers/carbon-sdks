/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// PhoneNumber struct for PhoneNumber
type PhoneNumber struct {
	PhoneNumber string `json:"phone_number"`
	PhoneNumberType NullableString `json:"phone_number_type"`
}

// NewPhoneNumber instantiates a new PhoneNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhoneNumber(phoneNumber string, phoneNumberType NullableString) *PhoneNumber {
	this := PhoneNumber{}
	this.PhoneNumber = phoneNumber
	this.PhoneNumberType = phoneNumberType
	return &this
}

// NewPhoneNumberWithDefaults instantiates a new PhoneNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhoneNumberWithDefaults() *PhoneNumber {
	this := PhoneNumber{}
	return &this
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *PhoneNumber) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *PhoneNumber) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *PhoneNumber) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

// GetPhoneNumberType returns the PhoneNumberType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PhoneNumber) GetPhoneNumberType() string {
	if o == nil || o.PhoneNumberType.Get() == nil {
		var ret string
		return ret
	}

	return *o.PhoneNumberType.Get()
}

// GetPhoneNumberTypeOk returns a tuple with the PhoneNumberType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhoneNumber) GetPhoneNumberTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.PhoneNumberType.Get(), o.PhoneNumberType.IsSet()
}

// SetPhoneNumberType sets field value
func (o *PhoneNumber) SetPhoneNumberType(v string) {
	o.PhoneNumberType.Set(&v)
}

func (o PhoneNumber) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if true {
		toSerialize["phone_number_type"] = o.PhoneNumberType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePhoneNumber struct {
	value *PhoneNumber
	isSet bool
}

func (v NullablePhoneNumber) Get() *PhoneNumber {
	return v.value
}

func (v *NullablePhoneNumber) Set(val *PhoneNumber) {
	v.value = val
	v.isSet = true
}

func (v NullablePhoneNumber) IsSet() bool {
	return v.isSet
}

func (v *NullablePhoneNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhoneNumber(val *PhoneNumber) *NullablePhoneNumber {
	return &NullablePhoneNumber{value: val, isSet: true}
}

func (v NullablePhoneNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhoneNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


