/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// AzureBlobAuthRequest struct for AzureBlobAuthRequest
type AzureBlobAuthRequest struct {
	AccountName string `json:"account_name"`
	AccountKey string `json:"account_key"`
	SyncSourceItems *bool `json:"sync_source_items,omitempty"`
	// Tags to be associated with the data source. If the data source already has tags set, then an upsert will be performed.
	DataSourceTags map[string]interface{} `json:"data_source_tags,omitempty"`
}

// NewAzureBlobAuthRequest instantiates a new AzureBlobAuthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureBlobAuthRequest(accountName string, accountKey string) *AzureBlobAuthRequest {
	this := AzureBlobAuthRequest{}
	this.AccountName = accountName
	this.AccountKey = accountKey
	var syncSourceItems bool = true
	this.SyncSourceItems = &syncSourceItems
	return &this
}

// NewAzureBlobAuthRequestWithDefaults instantiates a new AzureBlobAuthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureBlobAuthRequestWithDefaults() *AzureBlobAuthRequest {
	this := AzureBlobAuthRequest{}
	var syncSourceItems bool = true
	this.SyncSourceItems = &syncSourceItems
	return &this
}

// GetAccountName returns the AccountName field value
func (o *AzureBlobAuthRequest) GetAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value
// and a boolean to check if the value has been set.
func (o *AzureBlobAuthRequest) GetAccountNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AccountName, true
}

// SetAccountName sets field value
func (o *AzureBlobAuthRequest) SetAccountName(v string) {
	o.AccountName = v
}

// GetAccountKey returns the AccountKey field value
func (o *AzureBlobAuthRequest) GetAccountKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountKey
}

// GetAccountKeyOk returns a tuple with the AccountKey field value
// and a boolean to check if the value has been set.
func (o *AzureBlobAuthRequest) GetAccountKeyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AccountKey, true
}

// SetAccountKey sets field value
func (o *AzureBlobAuthRequest) SetAccountKey(v string) {
	o.AccountKey = v
}

// GetSyncSourceItems returns the SyncSourceItems field value if set, zero value otherwise.
func (o *AzureBlobAuthRequest) GetSyncSourceItems() bool {
	if o == nil || isNil(o.SyncSourceItems) {
		var ret bool
		return ret
	}
	return *o.SyncSourceItems
}

// GetSyncSourceItemsOk returns a tuple with the SyncSourceItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureBlobAuthRequest) GetSyncSourceItemsOk() (*bool, bool) {
	if o == nil || isNil(o.SyncSourceItems) {
    return nil, false
	}
	return o.SyncSourceItems, true
}

// HasSyncSourceItems returns a boolean if a field has been set.
func (o *AzureBlobAuthRequest) HasSyncSourceItems() bool {
	if o != nil && !isNil(o.SyncSourceItems) {
		return true
	}

	return false
}

// SetSyncSourceItems gets a reference to the given bool and assigns it to the SyncSourceItems field.
func (o *AzureBlobAuthRequest) SetSyncSourceItems(v bool) {
	o.SyncSourceItems = &v
}

// GetDataSourceTags returns the DataSourceTags field value if set, zero value otherwise.
func (o *AzureBlobAuthRequest) GetDataSourceTags() map[string]interface{} {
	if o == nil || isNil(o.DataSourceTags) {
		var ret map[string]interface{}
		return ret
	}
	return o.DataSourceTags
}

// GetDataSourceTagsOk returns a tuple with the DataSourceTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureBlobAuthRequest) GetDataSourceTagsOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.DataSourceTags) {
    return map[string]interface{}{}, false
	}
	return o.DataSourceTags, true
}

// HasDataSourceTags returns a boolean if a field has been set.
func (o *AzureBlobAuthRequest) HasDataSourceTags() bool {
	if o != nil && !isNil(o.DataSourceTags) {
		return true
	}

	return false
}

// SetDataSourceTags gets a reference to the given map[string]interface{} and assigns it to the DataSourceTags field.
func (o *AzureBlobAuthRequest) SetDataSourceTags(v map[string]interface{}) {
	o.DataSourceTags = v
}

func (o AzureBlobAuthRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_name"] = o.AccountName
	}
	if true {
		toSerialize["account_key"] = o.AccountKey
	}
	if !isNil(o.SyncSourceItems) {
		toSerialize["sync_source_items"] = o.SyncSourceItems
	}
	if !isNil(o.DataSourceTags) {
		toSerialize["data_source_tags"] = o.DataSourceTags
	}
	return json.Marshal(toSerialize)
}

type NullableAzureBlobAuthRequest struct {
	value *AzureBlobAuthRequest
	isSet bool
}

func (v NullableAzureBlobAuthRequest) Get() *AzureBlobAuthRequest {
	return v.value
}

func (v *NullableAzureBlobAuthRequest) Set(val *AzureBlobAuthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureBlobAuthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureBlobAuthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureBlobAuthRequest(val *AzureBlobAuthRequest) *NullableAzureBlobAuthRequest {
	return &NullableAzureBlobAuthRequest{value: val, isSet: true}
}

func (v NullableAzureBlobAuthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureBlobAuthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


