/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// GitbookAuthetication struct for GitbookAuthetication
type GitbookAuthetication struct {
	Source interface{} `json:"source"`
	AccessToken string `json:"access_token"`
	OrganizationName string `json:"organization_name"`
}

// NewGitbookAuthetication instantiates a new GitbookAuthetication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGitbookAuthetication(source interface{}, accessToken string, organizationName string) *GitbookAuthetication {
	this := GitbookAuthetication{}
	this.Source = source
	this.AccessToken = accessToken
	this.OrganizationName = organizationName
	return &this
}

// NewGitbookAutheticationWithDefaults instantiates a new GitbookAuthetication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGitbookAutheticationWithDefaults() *GitbookAuthetication {
	this := GitbookAuthetication{}
	return &this
}

// GetSource returns the Source field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *GitbookAuthetication) GetSource() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GitbookAuthetication) GetSourceOk() (*interface{}, bool) {
	if o == nil || isNil(o.Source) {
    return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *GitbookAuthetication) SetSource(v interface{}) {
	o.Source = v
}

// GetAccessToken returns the AccessToken field value
func (o *GitbookAuthetication) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *GitbookAuthetication) GetAccessTokenOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *GitbookAuthetication) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetOrganizationName returns the OrganizationName field value
func (o *GitbookAuthetication) GetOrganizationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value
// and a boolean to check if the value has been set.
func (o *GitbookAuthetication) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.OrganizationName, true
}

// SetOrganizationName sets field value
func (o *GitbookAuthetication) SetOrganizationName(v string) {
	o.OrganizationName = v
}

func (o GitbookAuthetication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if true {
		toSerialize["access_token"] = o.AccessToken
	}
	if true {
		toSerialize["organization_name"] = o.OrganizationName
	}
	return json.Marshal(toSerialize)
}

type NullableGitbookAuthetication struct {
	value *GitbookAuthetication
	isSet bool
}

func (v NullableGitbookAuthetication) Get() *GitbookAuthetication {
	return v.value
}

func (v *NullableGitbookAuthetication) Set(val *GitbookAuthetication) {
	v.value = val
	v.isSet = true
}

func (v NullableGitbookAuthetication) IsSet() bool {
	return v.isSet
}

func (v *NullableGitbookAuthetication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGitbookAuthetication(val *GitbookAuthetication) *NullableGitbookAuthetication {
	return &NullableGitbookAuthetication{value: val, isSet: true}
}

func (v NullableGitbookAuthetication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGitbookAuthetication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


