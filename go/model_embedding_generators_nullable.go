/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
	"fmt"
)

// EmbeddingGeneratorsNullable the model 'EmbeddingGeneratorsNullable'
type EmbeddingGeneratorsNullable string

// List of EmbeddingGeneratorsNullable
const (
	EMBEDDINGGENERATORSNULLABLE_OPENAI EmbeddingGeneratorsNullable = "OPENAI"
	EMBEDDINGGENERATORSNULLABLE_AZURE_OPENAI EmbeddingGeneratorsNullable = "AZURE_OPENAI"
	EMBEDDINGGENERATORSNULLABLE_COHERE_MULTILINGUAL_V3 EmbeddingGeneratorsNullable = "COHERE_MULTILINGUAL_V3"
	EMBEDDINGGENERATORSNULLABLE_VERTEX_MULTIMODAL EmbeddingGeneratorsNullable = "VERTEX_MULTIMODAL"
	EMBEDDINGGENERATORSNULLABLE_OPENAI_ADA_LARGE_256 EmbeddingGeneratorsNullable = "OPENAI_ADA_LARGE_256"
	EMBEDDINGGENERATORSNULLABLE_OPENAI_ADA_LARGE_1024 EmbeddingGeneratorsNullable = "OPENAI_ADA_LARGE_1024"
	EMBEDDINGGENERATORSNULLABLE_OPENAI_ADA_LARGE_3072 EmbeddingGeneratorsNullable = "OPENAI_ADA_LARGE_3072"
	EMBEDDINGGENERATORSNULLABLE_OPENAI_ADA_SMALL_512 EmbeddingGeneratorsNullable = "OPENAI_ADA_SMALL_512"
	EMBEDDINGGENERATORSNULLABLE_OPENAI_ADA_SMALL_1536 EmbeddingGeneratorsNullable = "OPENAI_ADA_SMALL_1536"
)

// All allowed values of EmbeddingGeneratorsNullable enum
var AllowedEmbeddingGeneratorsNullableEnumValues = []EmbeddingGeneratorsNullable{
	"OPENAI",
	"AZURE_OPENAI",
	"COHERE_MULTILINGUAL_V3",
	"VERTEX_MULTIMODAL",
	"OPENAI_ADA_LARGE_256",
	"OPENAI_ADA_LARGE_1024",
	"OPENAI_ADA_LARGE_3072",
	"OPENAI_ADA_SMALL_512",
	"OPENAI_ADA_SMALL_1536",
}

func (v *EmbeddingGeneratorsNullable) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EmbeddingGeneratorsNullable(value)
	for _, existing := range AllowedEmbeddingGeneratorsNullableEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EmbeddingGeneratorsNullable", value)
}

// NewEmbeddingGeneratorsNullableFromValue returns a pointer to a valid EmbeddingGeneratorsNullable
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEmbeddingGeneratorsNullableFromValue(v string) (*EmbeddingGeneratorsNullable, error) {
	ev := EmbeddingGeneratorsNullable(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EmbeddingGeneratorsNullable: valid values are %v", v, AllowedEmbeddingGeneratorsNullableEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EmbeddingGeneratorsNullable) IsValid() bool {
	for _, existing := range AllowedEmbeddingGeneratorsNullableEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EmbeddingGeneratorsNullable value
func (v EmbeddingGeneratorsNullable) Ptr() *EmbeddingGeneratorsNullable {
	return &v
}

type NullableEmbeddingGeneratorsNullable struct {
	value *EmbeddingGeneratorsNullable
	isSet bool
}

func (v NullableEmbeddingGeneratorsNullable) Get() *EmbeddingGeneratorsNullable {
	return v.value
}

func (v *NullableEmbeddingGeneratorsNullable) Set(val *EmbeddingGeneratorsNullable) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbeddingGeneratorsNullable) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbeddingGeneratorsNullable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbeddingGeneratorsNullable(val *EmbeddingGeneratorsNullable) *NullableEmbeddingGeneratorsNullable {
	return &NullableEmbeddingGeneratorsNullable{value: val, isSet: true}
}

func (v NullableEmbeddingGeneratorsNullable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbeddingGeneratorsNullable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

