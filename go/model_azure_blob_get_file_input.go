/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// AzureBlobGetFileInput struct for AzureBlobGetFileInput
type AzureBlobGetFileInput struct {
	Id NullableString `json:"id,omitempty"`
	Container NullableString `json:"container,omitempty"`
}

// NewAzureBlobGetFileInput instantiates a new AzureBlobGetFileInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureBlobGetFileInput() *AzureBlobGetFileInput {
	this := AzureBlobGetFileInput{}
	return &this
}

// NewAzureBlobGetFileInputWithDefaults instantiates a new AzureBlobGetFileInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureBlobGetFileInputWithDefaults() *AzureBlobGetFileInput {
	this := AzureBlobGetFileInput{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureBlobGetFileInput) GetId() string {
	if o == nil || isNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureBlobGetFileInput) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *AzureBlobGetFileInput) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *AzureBlobGetFileInput) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *AzureBlobGetFileInput) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *AzureBlobGetFileInput) UnsetId() {
	o.Id.Unset()
}

// GetContainer returns the Container field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureBlobGetFileInput) GetContainer() string {
	if o == nil || isNil(o.Container.Get()) {
		var ret string
		return ret
	}
	return *o.Container.Get()
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureBlobGetFileInput) GetContainerOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Container.Get(), o.Container.IsSet()
}

// HasContainer returns a boolean if a field has been set.
func (o *AzureBlobGetFileInput) HasContainer() bool {
	if o != nil && o.Container.IsSet() {
		return true
	}

	return false
}

// SetContainer gets a reference to the given NullableString and assigns it to the Container field.
func (o *AzureBlobGetFileInput) SetContainer(v string) {
	o.Container.Set(&v)
}
// SetContainerNil sets the value for Container to be an explicit nil
func (o *AzureBlobGetFileInput) SetContainerNil() {
	o.Container.Set(nil)
}

// UnsetContainer ensures that no value is present for Container, not even an explicit nil
func (o *AzureBlobGetFileInput) UnsetContainer() {
	o.Container.Unset()
}

func (o AzureBlobGetFileInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Container.IsSet() {
		toSerialize["container"] = o.Container.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAzureBlobGetFileInput struct {
	value *AzureBlobGetFileInput
	isSet bool
}

func (v NullableAzureBlobGetFileInput) Get() *AzureBlobGetFileInput {
	return v.value
}

func (v *NullableAzureBlobGetFileInput) Set(val *AzureBlobGetFileInput) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureBlobGetFileInput) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureBlobGetFileInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureBlobGetFileInput(val *AzureBlobGetFileInput) *NullableAzureBlobGetFileInput {
	return &NullableAzureBlobGetFileInput{value: val, isSet: true}
}

func (v NullableAzureBlobGetFileInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureBlobGetFileInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


