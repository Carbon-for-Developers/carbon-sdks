/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// UserWebPagesRequest struct for UserWebPagesRequest
type UserWebPagesRequest struct {
	Filters *UserWebPagesFilters `json:"filters,omitempty"`
	Pagination *Pagination `json:"pagination,omitempty"`
	OrderBy *UserWebPageOrderByTypes `json:"order_by,omitempty"`
	OrderDir *OrderDirV2 `json:"order_dir,omitempty"`
}

// NewUserWebPagesRequest instantiates a new UserWebPagesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserWebPagesRequest() *UserWebPagesRequest {
	this := UserWebPagesRequest{}
	return &this
}

// NewUserWebPagesRequestWithDefaults instantiates a new UserWebPagesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWebPagesRequestWithDefaults() *UserWebPagesRequest {
	this := UserWebPagesRequest{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *UserWebPagesRequest) GetFilters() UserWebPagesFilters {
	if o == nil || isNil(o.Filters) {
		var ret UserWebPagesFilters
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserWebPagesRequest) GetFiltersOk() (*UserWebPagesFilters, bool) {
	if o == nil || isNil(o.Filters) {
    return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *UserWebPagesRequest) HasFilters() bool {
	if o != nil && !isNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given UserWebPagesFilters and assigns it to the Filters field.
func (o *UserWebPagesRequest) SetFilters(v UserWebPagesFilters) {
	o.Filters = &v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *UserWebPagesRequest) GetPagination() Pagination {
	if o == nil || isNil(o.Pagination) {
		var ret Pagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserWebPagesRequest) GetPaginationOk() (*Pagination, bool) {
	if o == nil || isNil(o.Pagination) {
    return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *UserWebPagesRequest) HasPagination() bool {
	if o != nil && !isNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given Pagination and assigns it to the Pagination field.
func (o *UserWebPagesRequest) SetPagination(v Pagination) {
	o.Pagination = &v
}

// GetOrderBy returns the OrderBy field value if set, zero value otherwise.
func (o *UserWebPagesRequest) GetOrderBy() UserWebPageOrderByTypes {
	if o == nil || isNil(o.OrderBy) {
		var ret UserWebPageOrderByTypes
		return ret
	}
	return *o.OrderBy
}

// GetOrderByOk returns a tuple with the OrderBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserWebPagesRequest) GetOrderByOk() (*UserWebPageOrderByTypes, bool) {
	if o == nil || isNil(o.OrderBy) {
    return nil, false
	}
	return o.OrderBy, true
}

// HasOrderBy returns a boolean if a field has been set.
func (o *UserWebPagesRequest) HasOrderBy() bool {
	if o != nil && !isNil(o.OrderBy) {
		return true
	}

	return false
}

// SetOrderBy gets a reference to the given UserWebPageOrderByTypes and assigns it to the OrderBy field.
func (o *UserWebPagesRequest) SetOrderBy(v UserWebPageOrderByTypes) {
	o.OrderBy = &v
}

// GetOrderDir returns the OrderDir field value if set, zero value otherwise.
func (o *UserWebPagesRequest) GetOrderDir() OrderDirV2 {
	if o == nil || isNil(o.OrderDir) {
		var ret OrderDirV2
		return ret
	}
	return *o.OrderDir
}

// GetOrderDirOk returns a tuple with the OrderDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserWebPagesRequest) GetOrderDirOk() (*OrderDirV2, bool) {
	if o == nil || isNil(o.OrderDir) {
    return nil, false
	}
	return o.OrderDir, true
}

// HasOrderDir returns a boolean if a field has been set.
func (o *UserWebPagesRequest) HasOrderDir() bool {
	if o != nil && !isNil(o.OrderDir) {
		return true
	}

	return false
}

// SetOrderDir gets a reference to the given OrderDirV2 and assigns it to the OrderDir field.
func (o *UserWebPagesRequest) SetOrderDir(v OrderDirV2) {
	o.OrderDir = &v
}

func (o UserWebPagesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !isNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if !isNil(o.OrderBy) {
		toSerialize["order_by"] = o.OrderBy
	}
	if !isNil(o.OrderDir) {
		toSerialize["order_dir"] = o.OrderDir
	}
	return json.Marshal(toSerialize)
}

type NullableUserWebPagesRequest struct {
	value *UserWebPagesRequest
	isSet bool
}

func (v NullableUserWebPagesRequest) Get() *UserWebPagesRequest {
	return v.value
}

func (v *NullableUserWebPagesRequest) Set(val *UserWebPagesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserWebPagesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserWebPagesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserWebPagesRequest(val *UserWebPagesRequest) *NullableUserWebPagesRequest {
	return &NullableUserWebPagesRequest{value: val, isSet: true}
}

func (v NullableUserWebPagesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserWebPagesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


