/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
	"time"
)

// OrganizationResponse struct for OrganizationResponse
type OrganizationResponse struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	Nickname NullableString `json:"nickname"`
	RemoveBranding bool `json:"remove_branding"`
	CustomBranding map[string]interface{} `json:"custom_branding"`
	CustomLimits map[string]interface{} `json:"custom_limits"`
	AggregateFileSize map[string]interface{} `json:"aggregate_file_size"`
	AggregateNumCharacters map[string]interface{} `json:"aggregate_num_characters"`
	AggregateNumTokens map[string]interface{} `json:"aggregate_num_tokens"`
	AggregateNumEmbeddings map[string]interface{} `json:"aggregate_num_embeddings"`
	PeriodEndsAt NullableTime `json:"period_ends_at"`
	CancelAtPeriodEnd NullableBool `json:"cancel_at_period_end"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// NewOrganizationResponse instantiates a new OrganizationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationResponse(id int32, name string, nickname NullableString, removeBranding bool, customBranding map[string]interface{}, customLimits map[string]interface{}, aggregateFileSize map[string]interface{}, aggregateNumCharacters map[string]interface{}, aggregateNumTokens map[string]interface{}, aggregateNumEmbeddings map[string]interface{}, periodEndsAt NullableTime, cancelAtPeriodEnd NullableBool, createdAt time.Time, updatedAt time.Time) *OrganizationResponse {
	this := OrganizationResponse{}
	this.Id = id
	this.Name = name
	this.Nickname = nickname
	this.RemoveBranding = removeBranding
	this.CustomBranding = customBranding
	this.CustomLimits = customLimits
	this.AggregateFileSize = aggregateFileSize
	this.AggregateNumCharacters = aggregateNumCharacters
	this.AggregateNumTokens = aggregateNumTokens
	this.AggregateNumEmbeddings = aggregateNumEmbeddings
	this.PeriodEndsAt = periodEndsAt
	this.CancelAtPeriodEnd = cancelAtPeriodEnd
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewOrganizationResponseWithDefaults instantiates a new OrganizationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationResponseWithDefaults() *OrganizationResponse {
	this := OrganizationResponse{}
	return &this
}

// GetId returns the Id field value
func (o *OrganizationResponse) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrganizationResponse) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *OrganizationResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OrganizationResponse) SetName(v string) {
	o.Name = v
}

// GetNickname returns the Nickname field value
// If the value is explicit nil, the zero value for string will be returned
func (o *OrganizationResponse) GetNickname() string {
	if o == nil || o.Nickname.Get() == nil {
		var ret string
		return ret
	}

	return *o.Nickname.Get()
}

// GetNicknameOk returns a tuple with the Nickname field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationResponse) GetNicknameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Nickname.Get(), o.Nickname.IsSet()
}

// SetNickname sets field value
func (o *OrganizationResponse) SetNickname(v string) {
	o.Nickname.Set(&v)
}

// GetRemoveBranding returns the RemoveBranding field value
func (o *OrganizationResponse) GetRemoveBranding() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RemoveBranding
}

// GetRemoveBrandingOk returns a tuple with the RemoveBranding field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetRemoveBrandingOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RemoveBranding, true
}

// SetRemoveBranding sets field value
func (o *OrganizationResponse) SetRemoveBranding(v bool) {
	o.RemoveBranding = v
}

// GetCustomBranding returns the CustomBranding field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *OrganizationResponse) GetCustomBranding() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.CustomBranding
}

// GetCustomBrandingOk returns a tuple with the CustomBranding field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationResponse) GetCustomBrandingOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.CustomBranding) {
    return map[string]interface{}{}, false
	}
	return o.CustomBranding, true
}

// SetCustomBranding sets field value
func (o *OrganizationResponse) SetCustomBranding(v map[string]interface{}) {
	o.CustomBranding = v
}

// GetCustomLimits returns the CustomLimits field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *OrganizationResponse) GetCustomLimits() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.CustomLimits
}

// GetCustomLimitsOk returns a tuple with the CustomLimits field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationResponse) GetCustomLimitsOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.CustomLimits) {
    return map[string]interface{}{}, false
	}
	return o.CustomLimits, true
}

// SetCustomLimits sets field value
func (o *OrganizationResponse) SetCustomLimits(v map[string]interface{}) {
	o.CustomLimits = v
}

// GetAggregateFileSize returns the AggregateFileSize field value
func (o *OrganizationResponse) GetAggregateFileSize() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.AggregateFileSize
}

// GetAggregateFileSizeOk returns a tuple with the AggregateFileSize field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetAggregateFileSizeOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.AggregateFileSize, true
}

// SetAggregateFileSize sets field value
func (o *OrganizationResponse) SetAggregateFileSize(v map[string]interface{}) {
	o.AggregateFileSize = v
}

// GetAggregateNumCharacters returns the AggregateNumCharacters field value
func (o *OrganizationResponse) GetAggregateNumCharacters() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.AggregateNumCharacters
}

// GetAggregateNumCharactersOk returns a tuple with the AggregateNumCharacters field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetAggregateNumCharactersOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.AggregateNumCharacters, true
}

// SetAggregateNumCharacters sets field value
func (o *OrganizationResponse) SetAggregateNumCharacters(v map[string]interface{}) {
	o.AggregateNumCharacters = v
}

// GetAggregateNumTokens returns the AggregateNumTokens field value
func (o *OrganizationResponse) GetAggregateNumTokens() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.AggregateNumTokens
}

// GetAggregateNumTokensOk returns a tuple with the AggregateNumTokens field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetAggregateNumTokensOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.AggregateNumTokens, true
}

// SetAggregateNumTokens sets field value
func (o *OrganizationResponse) SetAggregateNumTokens(v map[string]interface{}) {
	o.AggregateNumTokens = v
}

// GetAggregateNumEmbeddings returns the AggregateNumEmbeddings field value
func (o *OrganizationResponse) GetAggregateNumEmbeddings() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.AggregateNumEmbeddings
}

// GetAggregateNumEmbeddingsOk returns a tuple with the AggregateNumEmbeddings field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetAggregateNumEmbeddingsOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.AggregateNumEmbeddings, true
}

// SetAggregateNumEmbeddings sets field value
func (o *OrganizationResponse) SetAggregateNumEmbeddings(v map[string]interface{}) {
	o.AggregateNumEmbeddings = v
}

// GetPeriodEndsAt returns the PeriodEndsAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *OrganizationResponse) GetPeriodEndsAt() time.Time {
	if o == nil || o.PeriodEndsAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.PeriodEndsAt.Get()
}

// GetPeriodEndsAtOk returns a tuple with the PeriodEndsAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationResponse) GetPeriodEndsAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.PeriodEndsAt.Get(), o.PeriodEndsAt.IsSet()
}

// SetPeriodEndsAt sets field value
func (o *OrganizationResponse) SetPeriodEndsAt(v time.Time) {
	o.PeriodEndsAt.Set(&v)
}

// GetCancelAtPeriodEnd returns the CancelAtPeriodEnd field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *OrganizationResponse) GetCancelAtPeriodEnd() bool {
	if o == nil || o.CancelAtPeriodEnd.Get() == nil {
		var ret bool
		return ret
	}

	return *o.CancelAtPeriodEnd.Get()
}

// GetCancelAtPeriodEndOk returns a tuple with the CancelAtPeriodEnd field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationResponse) GetCancelAtPeriodEndOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.CancelAtPeriodEnd.Get(), o.CancelAtPeriodEnd.IsSet()
}

// SetCancelAtPeriodEnd sets field value
func (o *OrganizationResponse) SetCancelAtPeriodEnd(v bool) {
	o.CancelAtPeriodEnd.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *OrganizationResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *OrganizationResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *OrganizationResponse) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *OrganizationResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o OrganizationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["nickname"] = o.Nickname.Get()
	}
	if true {
		toSerialize["remove_branding"] = o.RemoveBranding
	}
	if o.CustomBranding != nil {
		toSerialize["custom_branding"] = o.CustomBranding
	}
	if o.CustomLimits != nil {
		toSerialize["custom_limits"] = o.CustomLimits
	}
	if true {
		toSerialize["aggregate_file_size"] = o.AggregateFileSize
	}
	if true {
		toSerialize["aggregate_num_characters"] = o.AggregateNumCharacters
	}
	if true {
		toSerialize["aggregate_num_tokens"] = o.AggregateNumTokens
	}
	if true {
		toSerialize["aggregate_num_embeddings"] = o.AggregateNumEmbeddings
	}
	if true {
		toSerialize["period_ends_at"] = o.PeriodEndsAt.Get()
	}
	if true {
		toSerialize["cancel_at_period_end"] = o.CancelAtPeriodEnd.Get()
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationResponse struct {
	value *OrganizationResponse
	isSet bool
}

func (v NullableOrganizationResponse) Get() *OrganizationResponse {
	return v.value
}

func (v *NullableOrganizationResponse) Set(val *OrganizationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationResponse(val *OrganizationResponse) *NullableOrganizationResponse {
	return &NullableOrganizationResponse{value: val, isSet: true}
}

func (v NullableOrganizationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


