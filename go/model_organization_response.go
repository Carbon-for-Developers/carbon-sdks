/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
	"time"
)

// OrganizationResponse struct for OrganizationResponse
type OrganizationResponse struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	Nickname NullableString `json:"nickname,omitempty"`
	RemoveBranding bool `json:"remove_branding"`
	CustomBranding map[string]interface{} `json:"custom_branding,omitempty"`
	CustomLimits map[string]interface{} `json:"custom_limits,omitempty"`
	AggregateFileSize map[string]interface{} `json:"aggregate_file_size"`
	AggregateNumCharacters map[string]interface{} `json:"aggregate_num_characters"`
	AggregateNumTokens map[string]interface{} `json:"aggregate_num_tokens"`
	AggregateNumEmbeddings map[string]interface{} `json:"aggregate_num_embeddings"`
	AggregateNumFilesBySource map[string]interface{} `json:"aggregate_num_files_by_source"`
	AggregateNumFilesByFileFormat map[string]interface{} `json:"aggregate_num_files_by_file_format"`
	FileStatisticsAggregatedAt NullableTime `json:"file_statistics_aggregated_at"`
	PeriodEndsAt NullableTime `json:"period_ends_at,omitempty"`
	CancelAtPeriodEnd NullableBool `json:"cancel_at_period_end,omitempty"`
	ConnectorSettings map[string]interface{} `json:"connector_settings,omitempty"`
	GlobalUserConfig map[string]interface{} `json:"global_user_config,omitempty"`
	FileSyncUsage map[string]interface{} `json:"file_sync_usage,omitempty"`
	LoggingSettings map[string]interface{} `json:"logging_settings,omitempty"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// NewOrganizationResponse instantiates a new OrganizationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationResponse(id int32, name string, removeBranding bool, aggregateFileSize map[string]interface{}, aggregateNumCharacters map[string]interface{}, aggregateNumTokens map[string]interface{}, aggregateNumEmbeddings map[string]interface{}, aggregateNumFilesBySource map[string]interface{}, aggregateNumFilesByFileFormat map[string]interface{}, fileStatisticsAggregatedAt NullableTime, createdAt time.Time, updatedAt time.Time) *OrganizationResponse {
	this := OrganizationResponse{}
	this.Id = id
	this.Name = name
	this.RemoveBranding = removeBranding
	this.AggregateFileSize = aggregateFileSize
	this.AggregateNumCharacters = aggregateNumCharacters
	this.AggregateNumTokens = aggregateNumTokens
	this.AggregateNumEmbeddings = aggregateNumEmbeddings
	this.AggregateNumFilesBySource = aggregateNumFilesBySource
	this.AggregateNumFilesByFileFormat = aggregateNumFilesByFileFormat
	this.FileStatisticsAggregatedAt = fileStatisticsAggregatedAt
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewOrganizationResponseWithDefaults instantiates a new OrganizationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationResponseWithDefaults() *OrganizationResponse {
	this := OrganizationResponse{}
	return &this
}

// GetId returns the Id field value
func (o *OrganizationResponse) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrganizationResponse) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *OrganizationResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OrganizationResponse) SetName(v string) {
	o.Name = v
}

// GetNickname returns the Nickname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationResponse) GetNickname() string {
	if o == nil || isNil(o.Nickname.Get()) {
		var ret string
		return ret
	}
	return *o.Nickname.Get()
}

// GetNicknameOk returns a tuple with the Nickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationResponse) GetNicknameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Nickname.Get(), o.Nickname.IsSet()
}

// HasNickname returns a boolean if a field has been set.
func (o *OrganizationResponse) HasNickname() bool {
	if o != nil && o.Nickname.IsSet() {
		return true
	}

	return false
}

// SetNickname gets a reference to the given NullableString and assigns it to the Nickname field.
func (o *OrganizationResponse) SetNickname(v string) {
	o.Nickname.Set(&v)
}
// SetNicknameNil sets the value for Nickname to be an explicit nil
func (o *OrganizationResponse) SetNicknameNil() {
	o.Nickname.Set(nil)
}

// UnsetNickname ensures that no value is present for Nickname, not even an explicit nil
func (o *OrganizationResponse) UnsetNickname() {
	o.Nickname.Unset()
}

// GetRemoveBranding returns the RemoveBranding field value
func (o *OrganizationResponse) GetRemoveBranding() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RemoveBranding
}

// GetRemoveBrandingOk returns a tuple with the RemoveBranding field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetRemoveBrandingOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RemoveBranding, true
}

// SetRemoveBranding sets field value
func (o *OrganizationResponse) SetRemoveBranding(v bool) {
	o.RemoveBranding = v
}

// GetCustomBranding returns the CustomBranding field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationResponse) GetCustomBranding() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomBranding
}

// GetCustomBrandingOk returns a tuple with the CustomBranding field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationResponse) GetCustomBrandingOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.CustomBranding) {
    return map[string]interface{}{}, false
	}
	return o.CustomBranding, true
}

// HasCustomBranding returns a boolean if a field has been set.
func (o *OrganizationResponse) HasCustomBranding() bool {
	if o != nil && isNil(o.CustomBranding) {
		return true
	}

	return false
}

// SetCustomBranding gets a reference to the given map[string]interface{} and assigns it to the CustomBranding field.
func (o *OrganizationResponse) SetCustomBranding(v map[string]interface{}) {
	o.CustomBranding = v
}

// GetCustomLimits returns the CustomLimits field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationResponse) GetCustomLimits() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomLimits
}

// GetCustomLimitsOk returns a tuple with the CustomLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationResponse) GetCustomLimitsOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.CustomLimits) {
    return map[string]interface{}{}, false
	}
	return o.CustomLimits, true
}

// HasCustomLimits returns a boolean if a field has been set.
func (o *OrganizationResponse) HasCustomLimits() bool {
	if o != nil && isNil(o.CustomLimits) {
		return true
	}

	return false
}

// SetCustomLimits gets a reference to the given map[string]interface{} and assigns it to the CustomLimits field.
func (o *OrganizationResponse) SetCustomLimits(v map[string]interface{}) {
	o.CustomLimits = v
}

// GetAggregateFileSize returns the AggregateFileSize field value
func (o *OrganizationResponse) GetAggregateFileSize() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.AggregateFileSize
}

// GetAggregateFileSizeOk returns a tuple with the AggregateFileSize field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetAggregateFileSizeOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.AggregateFileSize, true
}

// SetAggregateFileSize sets field value
func (o *OrganizationResponse) SetAggregateFileSize(v map[string]interface{}) {
	o.AggregateFileSize = v
}

// GetAggregateNumCharacters returns the AggregateNumCharacters field value
func (o *OrganizationResponse) GetAggregateNumCharacters() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.AggregateNumCharacters
}

// GetAggregateNumCharactersOk returns a tuple with the AggregateNumCharacters field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetAggregateNumCharactersOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.AggregateNumCharacters, true
}

// SetAggregateNumCharacters sets field value
func (o *OrganizationResponse) SetAggregateNumCharacters(v map[string]interface{}) {
	o.AggregateNumCharacters = v
}

// GetAggregateNumTokens returns the AggregateNumTokens field value
func (o *OrganizationResponse) GetAggregateNumTokens() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.AggregateNumTokens
}

// GetAggregateNumTokensOk returns a tuple with the AggregateNumTokens field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetAggregateNumTokensOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.AggregateNumTokens, true
}

// SetAggregateNumTokens sets field value
func (o *OrganizationResponse) SetAggregateNumTokens(v map[string]interface{}) {
	o.AggregateNumTokens = v
}

// GetAggregateNumEmbeddings returns the AggregateNumEmbeddings field value
func (o *OrganizationResponse) GetAggregateNumEmbeddings() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.AggregateNumEmbeddings
}

// GetAggregateNumEmbeddingsOk returns a tuple with the AggregateNumEmbeddings field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetAggregateNumEmbeddingsOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.AggregateNumEmbeddings, true
}

// SetAggregateNumEmbeddings sets field value
func (o *OrganizationResponse) SetAggregateNumEmbeddings(v map[string]interface{}) {
	o.AggregateNumEmbeddings = v
}

// GetAggregateNumFilesBySource returns the AggregateNumFilesBySource field value
func (o *OrganizationResponse) GetAggregateNumFilesBySource() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.AggregateNumFilesBySource
}

// GetAggregateNumFilesBySourceOk returns a tuple with the AggregateNumFilesBySource field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetAggregateNumFilesBySourceOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.AggregateNumFilesBySource, true
}

// SetAggregateNumFilesBySource sets field value
func (o *OrganizationResponse) SetAggregateNumFilesBySource(v map[string]interface{}) {
	o.AggregateNumFilesBySource = v
}

// GetAggregateNumFilesByFileFormat returns the AggregateNumFilesByFileFormat field value
func (o *OrganizationResponse) GetAggregateNumFilesByFileFormat() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.AggregateNumFilesByFileFormat
}

// GetAggregateNumFilesByFileFormatOk returns a tuple with the AggregateNumFilesByFileFormat field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetAggregateNumFilesByFileFormatOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.AggregateNumFilesByFileFormat, true
}

// SetAggregateNumFilesByFileFormat sets field value
func (o *OrganizationResponse) SetAggregateNumFilesByFileFormat(v map[string]interface{}) {
	o.AggregateNumFilesByFileFormat = v
}

// GetFileStatisticsAggregatedAt returns the FileStatisticsAggregatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *OrganizationResponse) GetFileStatisticsAggregatedAt() time.Time {
	if o == nil || o.FileStatisticsAggregatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.FileStatisticsAggregatedAt.Get()
}

// GetFileStatisticsAggregatedAtOk returns a tuple with the FileStatisticsAggregatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationResponse) GetFileStatisticsAggregatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.FileStatisticsAggregatedAt.Get(), o.FileStatisticsAggregatedAt.IsSet()
}

// SetFileStatisticsAggregatedAt sets field value
func (o *OrganizationResponse) SetFileStatisticsAggregatedAt(v time.Time) {
	o.FileStatisticsAggregatedAt.Set(&v)
}

// GetPeriodEndsAt returns the PeriodEndsAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationResponse) GetPeriodEndsAt() time.Time {
	if o == nil || isNil(o.PeriodEndsAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PeriodEndsAt.Get()
}

// GetPeriodEndsAtOk returns a tuple with the PeriodEndsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationResponse) GetPeriodEndsAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.PeriodEndsAt.Get(), o.PeriodEndsAt.IsSet()
}

// HasPeriodEndsAt returns a boolean if a field has been set.
func (o *OrganizationResponse) HasPeriodEndsAt() bool {
	if o != nil && o.PeriodEndsAt.IsSet() {
		return true
	}

	return false
}

// SetPeriodEndsAt gets a reference to the given NullableTime and assigns it to the PeriodEndsAt field.
func (o *OrganizationResponse) SetPeriodEndsAt(v time.Time) {
	o.PeriodEndsAt.Set(&v)
}
// SetPeriodEndsAtNil sets the value for PeriodEndsAt to be an explicit nil
func (o *OrganizationResponse) SetPeriodEndsAtNil() {
	o.PeriodEndsAt.Set(nil)
}

// UnsetPeriodEndsAt ensures that no value is present for PeriodEndsAt, not even an explicit nil
func (o *OrganizationResponse) UnsetPeriodEndsAt() {
	o.PeriodEndsAt.Unset()
}

// GetCancelAtPeriodEnd returns the CancelAtPeriodEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationResponse) GetCancelAtPeriodEnd() bool {
	if o == nil || isNil(o.CancelAtPeriodEnd.Get()) {
		var ret bool
		return ret
	}
	return *o.CancelAtPeriodEnd.Get()
}

// GetCancelAtPeriodEndOk returns a tuple with the CancelAtPeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationResponse) GetCancelAtPeriodEndOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.CancelAtPeriodEnd.Get(), o.CancelAtPeriodEnd.IsSet()
}

// HasCancelAtPeriodEnd returns a boolean if a field has been set.
func (o *OrganizationResponse) HasCancelAtPeriodEnd() bool {
	if o != nil && o.CancelAtPeriodEnd.IsSet() {
		return true
	}

	return false
}

// SetCancelAtPeriodEnd gets a reference to the given NullableBool and assigns it to the CancelAtPeriodEnd field.
func (o *OrganizationResponse) SetCancelAtPeriodEnd(v bool) {
	o.CancelAtPeriodEnd.Set(&v)
}
// SetCancelAtPeriodEndNil sets the value for CancelAtPeriodEnd to be an explicit nil
func (o *OrganizationResponse) SetCancelAtPeriodEndNil() {
	o.CancelAtPeriodEnd.Set(nil)
}

// UnsetCancelAtPeriodEnd ensures that no value is present for CancelAtPeriodEnd, not even an explicit nil
func (o *OrganizationResponse) UnsetCancelAtPeriodEnd() {
	o.CancelAtPeriodEnd.Unset()
}

// GetConnectorSettings returns the ConnectorSettings field value if set, zero value otherwise.
func (o *OrganizationResponse) GetConnectorSettings() map[string]interface{} {
	if o == nil || isNil(o.ConnectorSettings) {
		var ret map[string]interface{}
		return ret
	}
	return o.ConnectorSettings
}

// GetConnectorSettingsOk returns a tuple with the ConnectorSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetConnectorSettingsOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.ConnectorSettings) {
    return map[string]interface{}{}, false
	}
	return o.ConnectorSettings, true
}

// HasConnectorSettings returns a boolean if a field has been set.
func (o *OrganizationResponse) HasConnectorSettings() bool {
	if o != nil && !isNil(o.ConnectorSettings) {
		return true
	}

	return false
}

// SetConnectorSettings gets a reference to the given map[string]interface{} and assigns it to the ConnectorSettings field.
func (o *OrganizationResponse) SetConnectorSettings(v map[string]interface{}) {
	o.ConnectorSettings = v
}

// GetGlobalUserConfig returns the GlobalUserConfig field value if set, zero value otherwise.
func (o *OrganizationResponse) GetGlobalUserConfig() map[string]interface{} {
	if o == nil || isNil(o.GlobalUserConfig) {
		var ret map[string]interface{}
		return ret
	}
	return o.GlobalUserConfig
}

// GetGlobalUserConfigOk returns a tuple with the GlobalUserConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetGlobalUserConfigOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.GlobalUserConfig) {
    return map[string]interface{}{}, false
	}
	return o.GlobalUserConfig, true
}

// HasGlobalUserConfig returns a boolean if a field has been set.
func (o *OrganizationResponse) HasGlobalUserConfig() bool {
	if o != nil && !isNil(o.GlobalUserConfig) {
		return true
	}

	return false
}

// SetGlobalUserConfig gets a reference to the given map[string]interface{} and assigns it to the GlobalUserConfig field.
func (o *OrganizationResponse) SetGlobalUserConfig(v map[string]interface{}) {
	o.GlobalUserConfig = v
}

// GetFileSyncUsage returns the FileSyncUsage field value if set, zero value otherwise.
func (o *OrganizationResponse) GetFileSyncUsage() map[string]interface{} {
	if o == nil || isNil(o.FileSyncUsage) {
		var ret map[string]interface{}
		return ret
	}
	return o.FileSyncUsage
}

// GetFileSyncUsageOk returns a tuple with the FileSyncUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetFileSyncUsageOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FileSyncUsage) {
    return map[string]interface{}{}, false
	}
	return o.FileSyncUsage, true
}

// HasFileSyncUsage returns a boolean if a field has been set.
func (o *OrganizationResponse) HasFileSyncUsage() bool {
	if o != nil && !isNil(o.FileSyncUsage) {
		return true
	}

	return false
}

// SetFileSyncUsage gets a reference to the given map[string]interface{} and assigns it to the FileSyncUsage field.
func (o *OrganizationResponse) SetFileSyncUsage(v map[string]interface{}) {
	o.FileSyncUsage = v
}

// GetLoggingSettings returns the LoggingSettings field value if set, zero value otherwise.
func (o *OrganizationResponse) GetLoggingSettings() map[string]interface{} {
	if o == nil || isNil(o.LoggingSettings) {
		var ret map[string]interface{}
		return ret
	}
	return o.LoggingSettings
}

// GetLoggingSettingsOk returns a tuple with the LoggingSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetLoggingSettingsOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LoggingSettings) {
    return map[string]interface{}{}, false
	}
	return o.LoggingSettings, true
}

// HasLoggingSettings returns a boolean if a field has been set.
func (o *OrganizationResponse) HasLoggingSettings() bool {
	if o != nil && !isNil(o.LoggingSettings) {
		return true
	}

	return false
}

// SetLoggingSettings gets a reference to the given map[string]interface{} and assigns it to the LoggingSettings field.
func (o *OrganizationResponse) SetLoggingSettings(v map[string]interface{}) {
	o.LoggingSettings = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *OrganizationResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *OrganizationResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *OrganizationResponse) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *OrganizationResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o OrganizationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Nickname.IsSet() {
		toSerialize["nickname"] = o.Nickname.Get()
	}
	if true {
		toSerialize["remove_branding"] = o.RemoveBranding
	}
	if o.CustomBranding != nil {
		toSerialize["custom_branding"] = o.CustomBranding
	}
	if o.CustomLimits != nil {
		toSerialize["custom_limits"] = o.CustomLimits
	}
	if true {
		toSerialize["aggregate_file_size"] = o.AggregateFileSize
	}
	if true {
		toSerialize["aggregate_num_characters"] = o.AggregateNumCharacters
	}
	if true {
		toSerialize["aggregate_num_tokens"] = o.AggregateNumTokens
	}
	if true {
		toSerialize["aggregate_num_embeddings"] = o.AggregateNumEmbeddings
	}
	if true {
		toSerialize["aggregate_num_files_by_source"] = o.AggregateNumFilesBySource
	}
	if true {
		toSerialize["aggregate_num_files_by_file_format"] = o.AggregateNumFilesByFileFormat
	}
	if true {
		toSerialize["file_statistics_aggregated_at"] = o.FileStatisticsAggregatedAt.Get()
	}
	if o.PeriodEndsAt.IsSet() {
		toSerialize["period_ends_at"] = o.PeriodEndsAt.Get()
	}
	if o.CancelAtPeriodEnd.IsSet() {
		toSerialize["cancel_at_period_end"] = o.CancelAtPeriodEnd.Get()
	}
	if !isNil(o.ConnectorSettings) {
		toSerialize["connector_settings"] = o.ConnectorSettings
	}
	if !isNil(o.GlobalUserConfig) {
		toSerialize["global_user_config"] = o.GlobalUserConfig
	}
	if !isNil(o.FileSyncUsage) {
		toSerialize["file_sync_usage"] = o.FileSyncUsage
	}
	if !isNil(o.LoggingSettings) {
		toSerialize["logging_settings"] = o.LoggingSettings
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationResponse struct {
	value *OrganizationResponse
	isSet bool
}

func (v NullableOrganizationResponse) Get() *OrganizationResponse {
	return v.value
}

func (v *NullableOrganizationResponse) Set(val *OrganizationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationResponse(val *OrganizationResponse) *NullableOrganizationResponse {
	return &NullableOrganizationResponse{value: val, isSet: true}
}

func (v NullableOrganizationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


