/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// Account struct for Account
type Account struct {
	Description NullableString `json:"description"`
	Id string `json:"id"`
	Owner NullablePartialOwnerNullable `json:"owner"`
	Name NullableString `json:"name"`
	Industry NullableString `json:"industry"`
	Website NullableString `json:"website"`
	NumberOfEmployees NullableInt32 `json:"number_of_employees"`
	Addresses []Address `json:"addresses"`
	PhoneNumbers []PhoneNumber `json:"phone_numbers"`
	LastActivityAt NullableString `json:"last_activity_at"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	IsDeleted bool `json:"is_deleted"`
	Tasks []Task `json:"tasks"`
	Events []Event `json:"events"`
	RemoteData map[string]interface{} `json:"remote_data"`
}

// NewAccount instantiates a new Account object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccount(description NullableString, id string, owner NullablePartialOwnerNullable, name NullableString, industry NullableString, website NullableString, numberOfEmployees NullableInt32, addresses []Address, phoneNumbers []PhoneNumber, lastActivityAt NullableString, createdAt string, updatedAt string, isDeleted bool, tasks []Task, events []Event, remoteData map[string]interface{}) *Account {
	this := Account{}
	this.Description = description
	this.Id = id
	this.Owner = owner
	this.Name = name
	this.Industry = industry
	this.Website = website
	this.NumberOfEmployees = numberOfEmployees
	this.Addresses = addresses
	this.PhoneNumbers = phoneNumbers
	this.LastActivityAt = lastActivityAt
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.IsDeleted = isDeleted
	this.Tasks = tasks
	this.Events = events
	this.RemoteData = remoteData
	return &this
}

// NewAccountWithDefaults instantiates a new Account object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountWithDefaults() *Account {
	this := Account{}
	return &this
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *Account) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetId returns the Id field value
func (o *Account) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Account) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Account) SetId(v string) {
	o.Id = v
}

// GetOwner returns the Owner field value
// If the value is explicit nil, the zero value for PartialOwnerNullable will be returned
func (o *Account) GetOwner() PartialOwnerNullable {
	if o == nil || o.Owner.Get() == nil {
		var ret PartialOwnerNullable
		return ret
	}

	return *o.Owner.Get()
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetOwnerOk() (*PartialOwnerNullable, bool) {
	if o == nil {
    return nil, false
	}
	return o.Owner.Get(), o.Owner.IsSet()
}

// SetOwner sets field value
func (o *Account) SetOwner(v PartialOwnerNullable) {
	o.Owner.Set(&v)
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *Account) SetName(v string) {
	o.Name.Set(&v)
}

// GetIndustry returns the Industry field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetIndustry() string {
	if o == nil || o.Industry.Get() == nil {
		var ret string
		return ret
	}

	return *o.Industry.Get()
}

// GetIndustryOk returns a tuple with the Industry field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetIndustryOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Industry.Get(), o.Industry.IsSet()
}

// SetIndustry sets field value
func (o *Account) SetIndustry(v string) {
	o.Industry.Set(&v)
}

// GetWebsite returns the Website field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetWebsite() string {
	if o == nil || o.Website.Get() == nil {
		var ret string
		return ret
	}

	return *o.Website.Get()
}

// GetWebsiteOk returns a tuple with the Website field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetWebsiteOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Website.Get(), o.Website.IsSet()
}

// SetWebsite sets field value
func (o *Account) SetWebsite(v string) {
	o.Website.Set(&v)
}

// GetNumberOfEmployees returns the NumberOfEmployees field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Account) GetNumberOfEmployees() int32 {
	if o == nil || o.NumberOfEmployees.Get() == nil {
		var ret int32
		return ret
	}

	return *o.NumberOfEmployees.Get()
}

// GetNumberOfEmployeesOk returns a tuple with the NumberOfEmployees field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetNumberOfEmployeesOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.NumberOfEmployees.Get(), o.NumberOfEmployees.IsSet()
}

// SetNumberOfEmployees sets field value
func (o *Account) SetNumberOfEmployees(v int32) {
	o.NumberOfEmployees.Set(&v)
}

// GetAddresses returns the Addresses field value
func (o *Account) GetAddresses() []Address {
	if o == nil {
		var ret []Address
		return ret
	}

	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value
// and a boolean to check if the value has been set.
func (o *Account) GetAddressesOk() ([]Address, bool) {
	if o == nil {
    return nil, false
	}
	return o.Addresses, true
}

// SetAddresses sets field value
func (o *Account) SetAddresses(v []Address) {
	o.Addresses = v
}

// GetPhoneNumbers returns the PhoneNumbers field value
func (o *Account) GetPhoneNumbers() []PhoneNumber {
	if o == nil {
		var ret []PhoneNumber
		return ret
	}

	return o.PhoneNumbers
}

// GetPhoneNumbersOk returns a tuple with the PhoneNumbers field value
// and a boolean to check if the value has been set.
func (o *Account) GetPhoneNumbersOk() ([]PhoneNumber, bool) {
	if o == nil {
    return nil, false
	}
	return o.PhoneNumbers, true
}

// SetPhoneNumbers sets field value
func (o *Account) SetPhoneNumbers(v []PhoneNumber) {
	o.PhoneNumbers = v
}

// GetLastActivityAt returns the LastActivityAt field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Account) GetLastActivityAt() string {
	if o == nil || o.LastActivityAt.Get() == nil {
		var ret string
		return ret
	}

	return *o.LastActivityAt.Get()
}

// GetLastActivityAtOk returns a tuple with the LastActivityAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetLastActivityAtOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.LastActivityAt.Get(), o.LastActivityAt.IsSet()
}

// SetLastActivityAt sets field value
func (o *Account) SetLastActivityAt(v string) {
	o.LastActivityAt.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *Account) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Account) GetCreatedAtOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Account) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Account) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Account) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Account) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetIsDeleted returns the IsDeleted field value
func (o *Account) GetIsDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value
// and a boolean to check if the value has been set.
func (o *Account) GetIsDeletedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsDeleted, true
}

// SetIsDeleted sets field value
func (o *Account) SetIsDeleted(v bool) {
	o.IsDeleted = v
}

// GetTasks returns the Tasks field value
// If the value is explicit nil, the zero value for []Task will be returned
func (o *Account) GetTasks() []Task {
	if o == nil {
		var ret []Task
		return ret
	}

	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetTasksOk() ([]Task, bool) {
	if o == nil || isNil(o.Tasks) {
    return nil, false
	}
	return o.Tasks, true
}

// SetTasks sets field value
func (o *Account) SetTasks(v []Task) {
	o.Tasks = v
}

// GetEvents returns the Events field value
// If the value is explicit nil, the zero value for []Event will be returned
func (o *Account) GetEvents() []Event {
	if o == nil {
		var ret []Event
		return ret
	}

	return o.Events
}

// GetEventsOk returns a tuple with the Events field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetEventsOk() ([]Event, bool) {
	if o == nil || isNil(o.Events) {
    return nil, false
	}
	return o.Events, true
}

// SetEvents sets field value
func (o *Account) SetEvents(v []Event) {
	o.Events = v
}

// GetRemoteData returns the RemoteData field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *Account) GetRemoteData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.RemoteData
}

// GetRemoteDataOk returns a tuple with the RemoteData field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetRemoteDataOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.RemoteData) {
    return map[string]interface{}{}, false
	}
	return o.RemoteData, true
}

// SetRemoteData sets field value
func (o *Account) SetRemoteData(v map[string]interface{}) {
	o.RemoteData = v
}

func (o Account) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["description"] = o.Description.Get()
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["owner"] = o.Owner.Get()
	}
	if true {
		toSerialize["name"] = o.Name.Get()
	}
	if true {
		toSerialize["industry"] = o.Industry.Get()
	}
	if true {
		toSerialize["website"] = o.Website.Get()
	}
	if true {
		toSerialize["number_of_employees"] = o.NumberOfEmployees.Get()
	}
	if true {
		toSerialize["addresses"] = o.Addresses
	}
	if true {
		toSerialize["phone_numbers"] = o.PhoneNumbers
	}
	if true {
		toSerialize["last_activity_at"] = o.LastActivityAt.Get()
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	if o.RemoteData != nil {
		toSerialize["remote_data"] = o.RemoteData
	}
	return json.Marshal(toSerialize)
}

type NullableAccount struct {
	value *Account
	isSet bool
}

func (v NullableAccount) Get() *Account {
	return v.value
}

func (v *NullableAccount) Set(val *Account) {
	v.value = val
	v.isSet = true
}

func (v NullableAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccount(val *Account) *NullableAccount {
	return &NullableAccount{value: val, isSet: true}
}

func (v NullableAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


