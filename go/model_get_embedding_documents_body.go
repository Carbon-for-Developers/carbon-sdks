/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// GetEmbeddingDocumentsBody struct for GetEmbeddingDocumentsBody
type GetEmbeddingDocumentsBody struct {
	// A set of tags to limit the search to. Deprecated and may be removed in the future.
	Tags map[string]Tags1 `json:"tags,omitempty"`
	// Query for which to get related chunks and embeddings.
	Query string `json:"query"`
	// Optional query vector for which to get related chunks and embeddings. It must have been         generated by the same model used to generate the embeddings across which the search is being conducted. Cannot         provide both `query` and `query_vector`.
	QueryVector []float32 `json:"query_vector,omitempty"`
	// Number of related chunks to return.
	K int32 `json:"k"`
	// Optional list of file IDs to limit the search to
	FileIds []int32 `json:"file_ids,omitempty"`
	// Optional list of parent file IDs to limit the search to. A parent file describes a file to which         another file belongs (e.g. a folder)
	ParentFileIds []int32 `json:"parent_file_ids,omitempty"`
	// A set of tags to limit the search to. Use this instead of `tags`, which is deprecated.
	TagsV2 map[string]interface{} `json:"tags_v2,omitempty"`
	// Flag to control whether or not to include tags for each chunk in the response.
	IncludeTags NullableBool `json:"include_tags,omitempty"`
	// Flag to control whether or not to include embedding vectors in the response.
	IncludeVectors NullableBool `json:"include_vectors,omitempty"`
	// Flag to control whether or not to include a signed URL to the raw file containing each chunk         in the response.
	IncludeRawFile NullableBool `json:"include_raw_file,omitempty"`
	// Flag to control whether or not to perform hybrid search.
	HybridSearch NullableBool `json:"hybrid_search,omitempty"`
	HybridSearchTuningParameters NullableHybridSearchTuningParamsNullable `json:"hybrid_search_tuning_parameters,omitempty"`
	MediaType NullableFileContentTypesNullable `json:"media_type,omitempty"`
	EmbeddingModel NullableEmbeddingGeneratorsNullable `json:"embedding_model,omitempty"`
}

// NewGetEmbeddingDocumentsBody instantiates a new GetEmbeddingDocumentsBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEmbeddingDocumentsBody(query string, k int32) *GetEmbeddingDocumentsBody {
	this := GetEmbeddingDocumentsBody{}
	this.Query = query
	this.K = k
	var mediaType FileContentTypesNullable = FILECONTENTTYPESNULLABLE_TEXT
	this.MediaType = *NewNullableFileContentTypesNullable(&mediaType)
	var embeddingModel EmbeddingGeneratorsNullable = EMBEDDINGGENERATORSNULLABLE_OPENAI
	this.EmbeddingModel = *NewNullableEmbeddingGeneratorsNullable(&embeddingModel)
	return &this
}

// NewGetEmbeddingDocumentsBodyWithDefaults instantiates a new GetEmbeddingDocumentsBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEmbeddingDocumentsBodyWithDefaults() *GetEmbeddingDocumentsBody {
	this := GetEmbeddingDocumentsBody{}
	var mediaType FileContentTypesNullable = FILECONTENTTYPESNULLABLE_TEXT
	this.MediaType = *NewNullableFileContentTypesNullable(&mediaType)
	var embeddingModel EmbeddingGeneratorsNullable = EMBEDDINGGENERATORSNULLABLE_OPENAI
	this.EmbeddingModel = *NewNullableEmbeddingGeneratorsNullable(&embeddingModel)
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetEmbeddingDocumentsBody) GetTags() map[string]Tags1 {
	if o == nil {
		var ret map[string]Tags1
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetEmbeddingDocumentsBody) GetTagsOk() (*map[string]Tags1, bool) {
	if o == nil || isNil(o.Tags) {
    return nil, false
	}
	return &o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GetEmbeddingDocumentsBody) HasTags() bool {
	if o != nil && isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]Tags1 and assigns it to the Tags field.
func (o *GetEmbeddingDocumentsBody) SetTags(v map[string]Tags1) {
	o.Tags = v
}

// GetQuery returns the Query field value
func (o *GetEmbeddingDocumentsBody) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *GetEmbeddingDocumentsBody) GetQueryOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *GetEmbeddingDocumentsBody) SetQuery(v string) {
	o.Query = v
}

// GetQueryVector returns the QueryVector field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetEmbeddingDocumentsBody) GetQueryVector() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}
	return o.QueryVector
}

// GetQueryVectorOk returns a tuple with the QueryVector field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetEmbeddingDocumentsBody) GetQueryVectorOk() ([]float32, bool) {
	if o == nil || isNil(o.QueryVector) {
    return nil, false
	}
	return o.QueryVector, true
}

// HasQueryVector returns a boolean if a field has been set.
func (o *GetEmbeddingDocumentsBody) HasQueryVector() bool {
	if o != nil && isNil(o.QueryVector) {
		return true
	}

	return false
}

// SetQueryVector gets a reference to the given []float32 and assigns it to the QueryVector field.
func (o *GetEmbeddingDocumentsBody) SetQueryVector(v []float32) {
	o.QueryVector = v
}

// GetK returns the K field value
func (o *GetEmbeddingDocumentsBody) GetK() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.K
}

// GetKOk returns a tuple with the K field value
// and a boolean to check if the value has been set.
func (o *GetEmbeddingDocumentsBody) GetKOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.K, true
}

// SetK sets field value
func (o *GetEmbeddingDocumentsBody) SetK(v int32) {
	o.K = v
}

// GetFileIds returns the FileIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetEmbeddingDocumentsBody) GetFileIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}
	return o.FileIds
}

// GetFileIdsOk returns a tuple with the FileIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetEmbeddingDocumentsBody) GetFileIdsOk() ([]int32, bool) {
	if o == nil || isNil(o.FileIds) {
    return nil, false
	}
	return o.FileIds, true
}

// HasFileIds returns a boolean if a field has been set.
func (o *GetEmbeddingDocumentsBody) HasFileIds() bool {
	if o != nil && isNil(o.FileIds) {
		return true
	}

	return false
}

// SetFileIds gets a reference to the given []int32 and assigns it to the FileIds field.
func (o *GetEmbeddingDocumentsBody) SetFileIds(v []int32) {
	o.FileIds = v
}

// GetParentFileIds returns the ParentFileIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetEmbeddingDocumentsBody) GetParentFileIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}
	return o.ParentFileIds
}

// GetParentFileIdsOk returns a tuple with the ParentFileIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetEmbeddingDocumentsBody) GetParentFileIdsOk() ([]int32, bool) {
	if o == nil || isNil(o.ParentFileIds) {
    return nil, false
	}
	return o.ParentFileIds, true
}

// HasParentFileIds returns a boolean if a field has been set.
func (o *GetEmbeddingDocumentsBody) HasParentFileIds() bool {
	if o != nil && isNil(o.ParentFileIds) {
		return true
	}

	return false
}

// SetParentFileIds gets a reference to the given []int32 and assigns it to the ParentFileIds field.
func (o *GetEmbeddingDocumentsBody) SetParentFileIds(v []int32) {
	o.ParentFileIds = v
}

// GetTagsV2 returns the TagsV2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetEmbeddingDocumentsBody) GetTagsV2() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.TagsV2
}

// GetTagsV2Ok returns a tuple with the TagsV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetEmbeddingDocumentsBody) GetTagsV2Ok() (map[string]interface{}, bool) {
	if o == nil || isNil(o.TagsV2) {
    return map[string]interface{}{}, false
	}
	return o.TagsV2, true
}

// HasTagsV2 returns a boolean if a field has been set.
func (o *GetEmbeddingDocumentsBody) HasTagsV2() bool {
	if o != nil && isNil(o.TagsV2) {
		return true
	}

	return false
}

// SetTagsV2 gets a reference to the given map[string]interface{} and assigns it to the TagsV2 field.
func (o *GetEmbeddingDocumentsBody) SetTagsV2(v map[string]interface{}) {
	o.TagsV2 = v
}

// GetIncludeTags returns the IncludeTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetEmbeddingDocumentsBody) GetIncludeTags() bool {
	if o == nil || isNil(o.IncludeTags.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeTags.Get()
}

// GetIncludeTagsOk returns a tuple with the IncludeTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetEmbeddingDocumentsBody) GetIncludeTagsOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.IncludeTags.Get(), o.IncludeTags.IsSet()
}

// HasIncludeTags returns a boolean if a field has been set.
func (o *GetEmbeddingDocumentsBody) HasIncludeTags() bool {
	if o != nil && o.IncludeTags.IsSet() {
		return true
	}

	return false
}

// SetIncludeTags gets a reference to the given NullableBool and assigns it to the IncludeTags field.
func (o *GetEmbeddingDocumentsBody) SetIncludeTags(v bool) {
	o.IncludeTags.Set(&v)
}
// SetIncludeTagsNil sets the value for IncludeTags to be an explicit nil
func (o *GetEmbeddingDocumentsBody) SetIncludeTagsNil() {
	o.IncludeTags.Set(nil)
}

// UnsetIncludeTags ensures that no value is present for IncludeTags, not even an explicit nil
func (o *GetEmbeddingDocumentsBody) UnsetIncludeTags() {
	o.IncludeTags.Unset()
}

// GetIncludeVectors returns the IncludeVectors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetEmbeddingDocumentsBody) GetIncludeVectors() bool {
	if o == nil || isNil(o.IncludeVectors.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeVectors.Get()
}

// GetIncludeVectorsOk returns a tuple with the IncludeVectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetEmbeddingDocumentsBody) GetIncludeVectorsOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.IncludeVectors.Get(), o.IncludeVectors.IsSet()
}

// HasIncludeVectors returns a boolean if a field has been set.
func (o *GetEmbeddingDocumentsBody) HasIncludeVectors() bool {
	if o != nil && o.IncludeVectors.IsSet() {
		return true
	}

	return false
}

// SetIncludeVectors gets a reference to the given NullableBool and assigns it to the IncludeVectors field.
func (o *GetEmbeddingDocumentsBody) SetIncludeVectors(v bool) {
	o.IncludeVectors.Set(&v)
}
// SetIncludeVectorsNil sets the value for IncludeVectors to be an explicit nil
func (o *GetEmbeddingDocumentsBody) SetIncludeVectorsNil() {
	o.IncludeVectors.Set(nil)
}

// UnsetIncludeVectors ensures that no value is present for IncludeVectors, not even an explicit nil
func (o *GetEmbeddingDocumentsBody) UnsetIncludeVectors() {
	o.IncludeVectors.Unset()
}

// GetIncludeRawFile returns the IncludeRawFile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetEmbeddingDocumentsBody) GetIncludeRawFile() bool {
	if o == nil || isNil(o.IncludeRawFile.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeRawFile.Get()
}

// GetIncludeRawFileOk returns a tuple with the IncludeRawFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetEmbeddingDocumentsBody) GetIncludeRawFileOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.IncludeRawFile.Get(), o.IncludeRawFile.IsSet()
}

// HasIncludeRawFile returns a boolean if a field has been set.
func (o *GetEmbeddingDocumentsBody) HasIncludeRawFile() bool {
	if o != nil && o.IncludeRawFile.IsSet() {
		return true
	}

	return false
}

// SetIncludeRawFile gets a reference to the given NullableBool and assigns it to the IncludeRawFile field.
func (o *GetEmbeddingDocumentsBody) SetIncludeRawFile(v bool) {
	o.IncludeRawFile.Set(&v)
}
// SetIncludeRawFileNil sets the value for IncludeRawFile to be an explicit nil
func (o *GetEmbeddingDocumentsBody) SetIncludeRawFileNil() {
	o.IncludeRawFile.Set(nil)
}

// UnsetIncludeRawFile ensures that no value is present for IncludeRawFile, not even an explicit nil
func (o *GetEmbeddingDocumentsBody) UnsetIncludeRawFile() {
	o.IncludeRawFile.Unset()
}

// GetHybridSearch returns the HybridSearch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetEmbeddingDocumentsBody) GetHybridSearch() bool {
	if o == nil || isNil(o.HybridSearch.Get()) {
		var ret bool
		return ret
	}
	return *o.HybridSearch.Get()
}

// GetHybridSearchOk returns a tuple with the HybridSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetEmbeddingDocumentsBody) GetHybridSearchOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.HybridSearch.Get(), o.HybridSearch.IsSet()
}

// HasHybridSearch returns a boolean if a field has been set.
func (o *GetEmbeddingDocumentsBody) HasHybridSearch() bool {
	if o != nil && o.HybridSearch.IsSet() {
		return true
	}

	return false
}

// SetHybridSearch gets a reference to the given NullableBool and assigns it to the HybridSearch field.
func (o *GetEmbeddingDocumentsBody) SetHybridSearch(v bool) {
	o.HybridSearch.Set(&v)
}
// SetHybridSearchNil sets the value for HybridSearch to be an explicit nil
func (o *GetEmbeddingDocumentsBody) SetHybridSearchNil() {
	o.HybridSearch.Set(nil)
}

// UnsetHybridSearch ensures that no value is present for HybridSearch, not even an explicit nil
func (o *GetEmbeddingDocumentsBody) UnsetHybridSearch() {
	o.HybridSearch.Unset()
}

// GetHybridSearchTuningParameters returns the HybridSearchTuningParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetEmbeddingDocumentsBody) GetHybridSearchTuningParameters() HybridSearchTuningParamsNullable {
	if o == nil || isNil(o.HybridSearchTuningParameters.Get()) {
		var ret HybridSearchTuningParamsNullable
		return ret
	}
	return *o.HybridSearchTuningParameters.Get()
}

// GetHybridSearchTuningParametersOk returns a tuple with the HybridSearchTuningParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetEmbeddingDocumentsBody) GetHybridSearchTuningParametersOk() (*HybridSearchTuningParamsNullable, bool) {
	if o == nil {
    return nil, false
	}
	return o.HybridSearchTuningParameters.Get(), o.HybridSearchTuningParameters.IsSet()
}

// HasHybridSearchTuningParameters returns a boolean if a field has been set.
func (o *GetEmbeddingDocumentsBody) HasHybridSearchTuningParameters() bool {
	if o != nil && o.HybridSearchTuningParameters.IsSet() {
		return true
	}

	return false
}

// SetHybridSearchTuningParameters gets a reference to the given NullableHybridSearchTuningParamsNullable and assigns it to the HybridSearchTuningParameters field.
func (o *GetEmbeddingDocumentsBody) SetHybridSearchTuningParameters(v HybridSearchTuningParamsNullable) {
	o.HybridSearchTuningParameters.Set(&v)
}
// SetHybridSearchTuningParametersNil sets the value for HybridSearchTuningParameters to be an explicit nil
func (o *GetEmbeddingDocumentsBody) SetHybridSearchTuningParametersNil() {
	o.HybridSearchTuningParameters.Set(nil)
}

// UnsetHybridSearchTuningParameters ensures that no value is present for HybridSearchTuningParameters, not even an explicit nil
func (o *GetEmbeddingDocumentsBody) UnsetHybridSearchTuningParameters() {
	o.HybridSearchTuningParameters.Unset()
}

// GetMediaType returns the MediaType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetEmbeddingDocumentsBody) GetMediaType() FileContentTypesNullable {
	if o == nil || isNil(o.MediaType.Get()) {
		var ret FileContentTypesNullable
		return ret
	}
	return *o.MediaType.Get()
}

// GetMediaTypeOk returns a tuple with the MediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetEmbeddingDocumentsBody) GetMediaTypeOk() (*FileContentTypesNullable, bool) {
	if o == nil {
    return nil, false
	}
	return o.MediaType.Get(), o.MediaType.IsSet()
}

// HasMediaType returns a boolean if a field has been set.
func (o *GetEmbeddingDocumentsBody) HasMediaType() bool {
	if o != nil && o.MediaType.IsSet() {
		return true
	}

	return false
}

// SetMediaType gets a reference to the given NullableFileContentTypesNullable and assigns it to the MediaType field.
func (o *GetEmbeddingDocumentsBody) SetMediaType(v FileContentTypesNullable) {
	o.MediaType.Set(&v)
}
// SetMediaTypeNil sets the value for MediaType to be an explicit nil
func (o *GetEmbeddingDocumentsBody) SetMediaTypeNil() {
	o.MediaType.Set(nil)
}

// UnsetMediaType ensures that no value is present for MediaType, not even an explicit nil
func (o *GetEmbeddingDocumentsBody) UnsetMediaType() {
	o.MediaType.Unset()
}

// GetEmbeddingModel returns the EmbeddingModel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetEmbeddingDocumentsBody) GetEmbeddingModel() EmbeddingGeneratorsNullable {
	if o == nil || isNil(o.EmbeddingModel.Get()) {
		var ret EmbeddingGeneratorsNullable
		return ret
	}
	return *o.EmbeddingModel.Get()
}

// GetEmbeddingModelOk returns a tuple with the EmbeddingModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetEmbeddingDocumentsBody) GetEmbeddingModelOk() (*EmbeddingGeneratorsNullable, bool) {
	if o == nil {
    return nil, false
	}
	return o.EmbeddingModel.Get(), o.EmbeddingModel.IsSet()
}

// HasEmbeddingModel returns a boolean if a field has been set.
func (o *GetEmbeddingDocumentsBody) HasEmbeddingModel() bool {
	if o != nil && o.EmbeddingModel.IsSet() {
		return true
	}

	return false
}

// SetEmbeddingModel gets a reference to the given NullableEmbeddingGeneratorsNullable and assigns it to the EmbeddingModel field.
func (o *GetEmbeddingDocumentsBody) SetEmbeddingModel(v EmbeddingGeneratorsNullable) {
	o.EmbeddingModel.Set(&v)
}
// SetEmbeddingModelNil sets the value for EmbeddingModel to be an explicit nil
func (o *GetEmbeddingDocumentsBody) SetEmbeddingModelNil() {
	o.EmbeddingModel.Set(nil)
}

// UnsetEmbeddingModel ensures that no value is present for EmbeddingModel, not even an explicit nil
func (o *GetEmbeddingDocumentsBody) UnsetEmbeddingModel() {
	o.EmbeddingModel.Unset()
}

func (o GetEmbeddingDocumentsBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if true {
		toSerialize["query"] = o.Query
	}
	if o.QueryVector != nil {
		toSerialize["query_vector"] = o.QueryVector
	}
	if true {
		toSerialize["k"] = o.K
	}
	if o.FileIds != nil {
		toSerialize["file_ids"] = o.FileIds
	}
	if o.ParentFileIds != nil {
		toSerialize["parent_file_ids"] = o.ParentFileIds
	}
	if o.TagsV2 != nil {
		toSerialize["tags_v2"] = o.TagsV2
	}
	if o.IncludeTags.IsSet() {
		toSerialize["include_tags"] = o.IncludeTags.Get()
	}
	if o.IncludeVectors.IsSet() {
		toSerialize["include_vectors"] = o.IncludeVectors.Get()
	}
	if o.IncludeRawFile.IsSet() {
		toSerialize["include_raw_file"] = o.IncludeRawFile.Get()
	}
	if o.HybridSearch.IsSet() {
		toSerialize["hybrid_search"] = o.HybridSearch.Get()
	}
	if o.HybridSearchTuningParameters.IsSet() {
		toSerialize["hybrid_search_tuning_parameters"] = o.HybridSearchTuningParameters.Get()
	}
	if o.MediaType.IsSet() {
		toSerialize["media_type"] = o.MediaType.Get()
	}
	if o.EmbeddingModel.IsSet() {
		toSerialize["embedding_model"] = o.EmbeddingModel.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGetEmbeddingDocumentsBody struct {
	value *GetEmbeddingDocumentsBody
	isSet bool
}

func (v NullableGetEmbeddingDocumentsBody) Get() *GetEmbeddingDocumentsBody {
	return v.value
}

func (v *NullableGetEmbeddingDocumentsBody) Set(val *GetEmbeddingDocumentsBody) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEmbeddingDocumentsBody) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEmbeddingDocumentsBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEmbeddingDocumentsBody(val *GetEmbeddingDocumentsBody) *NullableGetEmbeddingDocumentsBody {
	return &NullableGetEmbeddingDocumentsBody{value: val, isSet: true}
}

func (v NullableGetEmbeddingDocumentsBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEmbeddingDocumentsBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


