/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
	"time"
)

// OrganizationUserDataSourceAPI struct for OrganizationUserDataSourceAPI
type OrganizationUserDataSourceAPI struct {
	Id int32 `json:"id"`
	DataSourceExternalId NullableString `json:"data_source_external_id"`
	DataSourceType DataSourceType `json:"data_source_type"`
	SyncStatus DataSourceSyncStatuses `json:"sync_status"`
	SourceItemsSyncedAt NullableTime `json:"source_items_synced_at"`
	OrganizationUserId int32 `json:"organization_user_id"`
	OrganizationId int32 `json:"organization_id"`
	OrganizationSuppliedUserId string `json:"organization_supplied_user_id"`
	RevokedAccess bool `json:"revoked_access"`
	LastSyncedAt time.Time `json:"last_synced_at"`
	LastSyncAction DataSourceLastSyncActions `json:"last_sync_action"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// NewOrganizationUserDataSourceAPI instantiates a new OrganizationUserDataSourceAPI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationUserDataSourceAPI(id int32, dataSourceExternalId NullableString, dataSourceType DataSourceType, syncStatus DataSourceSyncStatuses, sourceItemsSyncedAt NullableTime, organizationUserId int32, organizationId int32, organizationSuppliedUserId string, revokedAccess bool, lastSyncedAt time.Time, lastSyncAction DataSourceLastSyncActions, createdAt time.Time, updatedAt time.Time) *OrganizationUserDataSourceAPI {
	this := OrganizationUserDataSourceAPI{}
	this.Id = id
	this.DataSourceExternalId = dataSourceExternalId
	this.DataSourceType = dataSourceType
	this.SyncStatus = syncStatus
	this.SourceItemsSyncedAt = sourceItemsSyncedAt
	this.OrganizationUserId = organizationUserId
	this.OrganizationId = organizationId
	this.OrganizationSuppliedUserId = organizationSuppliedUserId
	this.RevokedAccess = revokedAccess
	this.LastSyncedAt = lastSyncedAt
	this.LastSyncAction = lastSyncAction
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewOrganizationUserDataSourceAPIWithDefaults instantiates a new OrganizationUserDataSourceAPI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationUserDataSourceAPIWithDefaults() *OrganizationUserDataSourceAPI {
	this := OrganizationUserDataSourceAPI{}
	return &this
}

// GetId returns the Id field value
func (o *OrganizationUserDataSourceAPI) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserDataSourceAPI) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrganizationUserDataSourceAPI) SetId(v int32) {
	o.Id = v
}

// GetDataSourceExternalId returns the DataSourceExternalId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *OrganizationUserDataSourceAPI) GetDataSourceExternalId() string {
	if o == nil || o.DataSourceExternalId.Get() == nil {
		var ret string
		return ret
	}

	return *o.DataSourceExternalId.Get()
}

// GetDataSourceExternalIdOk returns a tuple with the DataSourceExternalId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationUserDataSourceAPI) GetDataSourceExternalIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.DataSourceExternalId.Get(), o.DataSourceExternalId.IsSet()
}

// SetDataSourceExternalId sets field value
func (o *OrganizationUserDataSourceAPI) SetDataSourceExternalId(v string) {
	o.DataSourceExternalId.Set(&v)
}

// GetDataSourceType returns the DataSourceType field value
func (o *OrganizationUserDataSourceAPI) GetDataSourceType() DataSourceType {
	if o == nil {
		var ret DataSourceType
		return ret
	}

	return o.DataSourceType
}

// GetDataSourceTypeOk returns a tuple with the DataSourceType field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserDataSourceAPI) GetDataSourceTypeOk() (*DataSourceType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DataSourceType, true
}

// SetDataSourceType sets field value
func (o *OrganizationUserDataSourceAPI) SetDataSourceType(v DataSourceType) {
	o.DataSourceType = v
}

// GetSyncStatus returns the SyncStatus field value
func (o *OrganizationUserDataSourceAPI) GetSyncStatus() DataSourceSyncStatuses {
	if o == nil {
		var ret DataSourceSyncStatuses
		return ret
	}

	return o.SyncStatus
}

// GetSyncStatusOk returns a tuple with the SyncStatus field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserDataSourceAPI) GetSyncStatusOk() (*DataSourceSyncStatuses, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SyncStatus, true
}

// SetSyncStatus sets field value
func (o *OrganizationUserDataSourceAPI) SetSyncStatus(v DataSourceSyncStatuses) {
	o.SyncStatus = v
}

// GetSourceItemsSyncedAt returns the SourceItemsSyncedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *OrganizationUserDataSourceAPI) GetSourceItemsSyncedAt() time.Time {
	if o == nil || o.SourceItemsSyncedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.SourceItemsSyncedAt.Get()
}

// GetSourceItemsSyncedAtOk returns a tuple with the SourceItemsSyncedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationUserDataSourceAPI) GetSourceItemsSyncedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.SourceItemsSyncedAt.Get(), o.SourceItemsSyncedAt.IsSet()
}

// SetSourceItemsSyncedAt sets field value
func (o *OrganizationUserDataSourceAPI) SetSourceItemsSyncedAt(v time.Time) {
	o.SourceItemsSyncedAt.Set(&v)
}

// GetOrganizationUserId returns the OrganizationUserId field value
func (o *OrganizationUserDataSourceAPI) GetOrganizationUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrganizationUserId
}

// GetOrganizationUserIdOk returns a tuple with the OrganizationUserId field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserDataSourceAPI) GetOrganizationUserIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.OrganizationUserId, true
}

// SetOrganizationUserId sets field value
func (o *OrganizationUserDataSourceAPI) SetOrganizationUserId(v int32) {
	o.OrganizationUserId = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *OrganizationUserDataSourceAPI) GetOrganizationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserDataSourceAPI) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *OrganizationUserDataSourceAPI) SetOrganizationId(v int32) {
	o.OrganizationId = v
}

// GetOrganizationSuppliedUserId returns the OrganizationSuppliedUserId field value
func (o *OrganizationUserDataSourceAPI) GetOrganizationSuppliedUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationSuppliedUserId
}

// GetOrganizationSuppliedUserIdOk returns a tuple with the OrganizationSuppliedUserId field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserDataSourceAPI) GetOrganizationSuppliedUserIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.OrganizationSuppliedUserId, true
}

// SetOrganizationSuppliedUserId sets field value
func (o *OrganizationUserDataSourceAPI) SetOrganizationSuppliedUserId(v string) {
	o.OrganizationSuppliedUserId = v
}

// GetRevokedAccess returns the RevokedAccess field value
func (o *OrganizationUserDataSourceAPI) GetRevokedAccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RevokedAccess
}

// GetRevokedAccessOk returns a tuple with the RevokedAccess field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserDataSourceAPI) GetRevokedAccessOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RevokedAccess, true
}

// SetRevokedAccess sets field value
func (o *OrganizationUserDataSourceAPI) SetRevokedAccess(v bool) {
	o.RevokedAccess = v
}

// GetLastSyncedAt returns the LastSyncedAt field value
func (o *OrganizationUserDataSourceAPI) GetLastSyncedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastSyncedAt
}

// GetLastSyncedAtOk returns a tuple with the LastSyncedAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserDataSourceAPI) GetLastSyncedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LastSyncedAt, true
}

// SetLastSyncedAt sets field value
func (o *OrganizationUserDataSourceAPI) SetLastSyncedAt(v time.Time) {
	o.LastSyncedAt = v
}

// GetLastSyncAction returns the LastSyncAction field value
func (o *OrganizationUserDataSourceAPI) GetLastSyncAction() DataSourceLastSyncActions {
	if o == nil {
		var ret DataSourceLastSyncActions
		return ret
	}

	return o.LastSyncAction
}

// GetLastSyncActionOk returns a tuple with the LastSyncAction field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserDataSourceAPI) GetLastSyncActionOk() (*DataSourceLastSyncActions, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LastSyncAction, true
}

// SetLastSyncAction sets field value
func (o *OrganizationUserDataSourceAPI) SetLastSyncAction(v DataSourceLastSyncActions) {
	o.LastSyncAction = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *OrganizationUserDataSourceAPI) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserDataSourceAPI) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *OrganizationUserDataSourceAPI) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *OrganizationUserDataSourceAPI) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserDataSourceAPI) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *OrganizationUserDataSourceAPI) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o OrganizationUserDataSourceAPI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["data_source_external_id"] = o.DataSourceExternalId.Get()
	}
	if true {
		toSerialize["data_source_type"] = o.DataSourceType
	}
	if true {
		toSerialize["sync_status"] = o.SyncStatus
	}
	if true {
		toSerialize["source_items_synced_at"] = o.SourceItemsSyncedAt.Get()
	}
	if true {
		toSerialize["organization_user_id"] = o.OrganizationUserId
	}
	if true {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if true {
		toSerialize["organization_supplied_user_id"] = o.OrganizationSuppliedUserId
	}
	if true {
		toSerialize["revoked_access"] = o.RevokedAccess
	}
	if true {
		toSerialize["last_synced_at"] = o.LastSyncedAt
	}
	if true {
		toSerialize["last_sync_action"] = o.LastSyncAction
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationUserDataSourceAPI struct {
	value *OrganizationUserDataSourceAPI
	isSet bool
}

func (v NullableOrganizationUserDataSourceAPI) Get() *OrganizationUserDataSourceAPI {
	return v.value
}

func (v *NullableOrganizationUserDataSourceAPI) Set(val *OrganizationUserDataSourceAPI) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationUserDataSourceAPI) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationUserDataSourceAPI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationUserDataSourceAPI(val *OrganizationUserDataSourceAPI) *NullableOrganizationUserDataSourceAPI {
	return &NullableOrganizationUserDataSourceAPI{value: val, isSet: true}
}

func (v NullableOrganizationUserDataSourceAPI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationUserDataSourceAPI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


