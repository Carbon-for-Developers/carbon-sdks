/*
Carbon

Testing CRMApiService

*/

// Code generated by Konfig (https://konfigthis.com);

package carbon

import (
    "testing"
    // "github.com/stretchr/testify/assert"
    // "github.com/stretchr/testify/require"
    // carbon "github.com/Carbon-for-Developers/carbon-sdks/go"
)

func Test_carbon_CRMApiService(t *testing.T) {

    // configuration := carbon.NewConfiguration()
    // configuration.SetHost("http://127.0.0.1:4010")
    /* 
    configuration.SetAccessToken("AUTHORIZATION")
    configuration.SetApiKey("AUTHORIZATION")
    configuration.SetCustomerId("CUSTOMER_ID")
    client := carbon.NewAPIClient(configuration)
    */

    t.Run("Test CRMApiService GetAccount", func(t *testing.T) {
        /* TODO: ENG-1367 Fix parameter values for Go SDK generated tests
        request := client.CRMApi.GetAccount(
            "id_example",
            56,
        )
        request.IncludeRemoteData(false)
        request.Includes()
        
        resp, httpRes, err := request.Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)
        */
    })

    t.Run("Test CRMApiService GetAccounts", func(t *testing.T) {
        /* TODO: ENG-1367 Fix parameter values for Go SDK generated tests
        filters := *carbon.NewAccountFilters()
        
        accountsRequest := *carbon.NewAccountsRequest(
            null,
        )
        accountsRequest.SetIncludeRemoteData(false)
        accountsRequest.SetNextCursor("null")
        accountsRequest.SetPageSize(null)
        accountsRequest.SetOrderDir(null)
        accountsRequest.SetIncludes([])
        accountsRequest.SetFilters(filters)
        accountsRequest.SetOrderBy(null)
        
        request := client.CRMApi.GetAccounts(
            accountsRequest,
        )
        
        resp, httpRes, err := request.Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)
        */
    })

    t.Run("Test CRMApiService GetContact", func(t *testing.T) {
        /* TODO: ENG-1367 Fix parameter values for Go SDK generated tests
        request := client.CRMApi.GetContact(
            "id_example",
            56,
        )
        request.IncludeRemoteData(false)
        request.Includes()
        
        resp, httpRes, err := request.Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)
        */
    })

    t.Run("Test CRMApiService GetContacts", func(t *testing.T) {
        /* TODO: ENG-1367 Fix parameter values for Go SDK generated tests
        filters := *carbon.NewContactFilters()
        
        contactsRequest := *carbon.NewContactsRequest(
            null,
        )
        contactsRequest.SetIncludeRemoteData(false)
        contactsRequest.SetNextCursor("null")
        contactsRequest.SetPageSize(null)
        contactsRequest.SetOrderDir(null)
        contactsRequest.SetIncludes([])
        contactsRequest.SetFilters(filters)
        contactsRequest.SetOrderBy(null)
        
        request := client.CRMApi.GetContacts(
            contactsRequest,
        )
        
        resp, httpRes, err := request.Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)
        */
    })

    t.Run("Test CRMApiService GetLead", func(t *testing.T) {
        /* TODO: ENG-1367 Fix parameter values for Go SDK generated tests
        request := client.CRMApi.GetLead(
            "id_example",
            56,
        )
        request.IncludeRemoteData(false)
        request.Includes()
        
        resp, httpRes, err := request.Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)
        */
    })

    t.Run("Test CRMApiService GetLeads", func(t *testing.T) {
        /* TODO: ENG-1367 Fix parameter values for Go SDK generated tests
        filters := *carbon.NewLeadFilters()
        
        leadsRequest := *carbon.NewLeadsRequest(
            null,
        )
        leadsRequest.SetIncludeRemoteData(false)
        leadsRequest.SetNextCursor("null")
        leadsRequest.SetPageSize(null)
        leadsRequest.SetOrderDir(null)
        leadsRequest.SetIncludes([])
        leadsRequest.SetFilters(filters)
        leadsRequest.SetOrderBy(null)
        
        request := client.CRMApi.GetLeads(
            leadsRequest,
        )
        
        resp, httpRes, err := request.Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)
        */
    })

    t.Run("Test CRMApiService GetOpportunities", func(t *testing.T) {
        /* TODO: ENG-1367 Fix parameter values for Go SDK generated tests
        filters := *carbon.NewOpportunityFilters()
        
        opportunitiesRequest := *carbon.NewOpportunitiesRequest(
            null,
        )
        opportunitiesRequest.SetIncludeRemoteData(false)
        opportunitiesRequest.SetNextCursor("null")
        opportunitiesRequest.SetPageSize(null)
        opportunitiesRequest.SetOrderDir(null)
        opportunitiesRequest.SetIncludes([])
        opportunitiesRequest.SetFilters(filters)
        opportunitiesRequest.SetOrderBy(null)
        
        request := client.CRMApi.GetOpportunities(
            opportunitiesRequest,
        )
        
        resp, httpRes, err := request.Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)
        */
    })

    t.Run("Test CRMApiService GetOpportunity", func(t *testing.T) {
        /* TODO: ENG-1367 Fix parameter values for Go SDK generated tests
        request := client.CRMApi.GetOpportunity(
            "id_example",
            56,
        )
        request.IncludeRemoteData(false)
        request.Includes()
        
        resp, httpRes, err := request.Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)
        */
    })

}