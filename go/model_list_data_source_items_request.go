/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// ListDataSourceItemsRequest struct for ListDataSourceItemsRequest
type ListDataSourceItemsRequest struct {
	DataSourceId int32 `json:"data_source_id"`
	ParentId NullableString `json:"parent_id,omitempty"`
	Filters NullableListItemsFiltersNullable `json:"filters,omitempty"`
	Pagination *Pagination `json:"pagination,omitempty"`
	OrderBy *ExternalSourceItemsOrderBy `json:"order_by,omitempty"`
	OrderDir *OrderDirV2 `json:"order_dir,omitempty"`
}

// NewListDataSourceItemsRequest instantiates a new ListDataSourceItemsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDataSourceItemsRequest(dataSourceId int32) *ListDataSourceItemsRequest {
	this := ListDataSourceItemsRequest{}
	this.DataSourceId = dataSourceId
	return &this
}

// NewListDataSourceItemsRequestWithDefaults instantiates a new ListDataSourceItemsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDataSourceItemsRequestWithDefaults() *ListDataSourceItemsRequest {
	this := ListDataSourceItemsRequest{}
	return &this
}

// GetDataSourceId returns the DataSourceId field value
func (o *ListDataSourceItemsRequest) GetDataSourceId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DataSourceId
}

// GetDataSourceIdOk returns a tuple with the DataSourceId field value
// and a boolean to check if the value has been set.
func (o *ListDataSourceItemsRequest) GetDataSourceIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DataSourceId, true
}

// SetDataSourceId sets field value
func (o *ListDataSourceItemsRequest) SetDataSourceId(v int32) {
	o.DataSourceId = v
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListDataSourceItemsRequest) GetParentId() string {
	if o == nil || isNil(o.ParentId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListDataSourceItemsRequest) GetParentIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *ListDataSourceItemsRequest) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableString and assigns it to the ParentId field.
func (o *ListDataSourceItemsRequest) SetParentId(v string) {
	o.ParentId.Set(&v)
}
// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *ListDataSourceItemsRequest) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *ListDataSourceItemsRequest) UnsetParentId() {
	o.ParentId.Unset()
}

// GetFilters returns the Filters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListDataSourceItemsRequest) GetFilters() ListItemsFiltersNullable {
	if o == nil || isNil(o.Filters.Get()) {
		var ret ListItemsFiltersNullable
		return ret
	}
	return *o.Filters.Get()
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListDataSourceItemsRequest) GetFiltersOk() (*ListItemsFiltersNullable, bool) {
	if o == nil {
    return nil, false
	}
	return o.Filters.Get(), o.Filters.IsSet()
}

// HasFilters returns a boolean if a field has been set.
func (o *ListDataSourceItemsRequest) HasFilters() bool {
	if o != nil && o.Filters.IsSet() {
		return true
	}

	return false
}

// SetFilters gets a reference to the given NullableListItemsFiltersNullable and assigns it to the Filters field.
func (o *ListDataSourceItemsRequest) SetFilters(v ListItemsFiltersNullable) {
	o.Filters.Set(&v)
}
// SetFiltersNil sets the value for Filters to be an explicit nil
func (o *ListDataSourceItemsRequest) SetFiltersNil() {
	o.Filters.Set(nil)
}

// UnsetFilters ensures that no value is present for Filters, not even an explicit nil
func (o *ListDataSourceItemsRequest) UnsetFilters() {
	o.Filters.Unset()
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ListDataSourceItemsRequest) GetPagination() Pagination {
	if o == nil || isNil(o.Pagination) {
		var ret Pagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDataSourceItemsRequest) GetPaginationOk() (*Pagination, bool) {
	if o == nil || isNil(o.Pagination) {
    return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ListDataSourceItemsRequest) HasPagination() bool {
	if o != nil && !isNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given Pagination and assigns it to the Pagination field.
func (o *ListDataSourceItemsRequest) SetPagination(v Pagination) {
	o.Pagination = &v
}

// GetOrderBy returns the OrderBy field value if set, zero value otherwise.
func (o *ListDataSourceItemsRequest) GetOrderBy() ExternalSourceItemsOrderBy {
	if o == nil || isNil(o.OrderBy) {
		var ret ExternalSourceItemsOrderBy
		return ret
	}
	return *o.OrderBy
}

// GetOrderByOk returns a tuple with the OrderBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDataSourceItemsRequest) GetOrderByOk() (*ExternalSourceItemsOrderBy, bool) {
	if o == nil || isNil(o.OrderBy) {
    return nil, false
	}
	return o.OrderBy, true
}

// HasOrderBy returns a boolean if a field has been set.
func (o *ListDataSourceItemsRequest) HasOrderBy() bool {
	if o != nil && !isNil(o.OrderBy) {
		return true
	}

	return false
}

// SetOrderBy gets a reference to the given ExternalSourceItemsOrderBy and assigns it to the OrderBy field.
func (o *ListDataSourceItemsRequest) SetOrderBy(v ExternalSourceItemsOrderBy) {
	o.OrderBy = &v
}

// GetOrderDir returns the OrderDir field value if set, zero value otherwise.
func (o *ListDataSourceItemsRequest) GetOrderDir() OrderDirV2 {
	if o == nil || isNil(o.OrderDir) {
		var ret OrderDirV2
		return ret
	}
	return *o.OrderDir
}

// GetOrderDirOk returns a tuple with the OrderDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDataSourceItemsRequest) GetOrderDirOk() (*OrderDirV2, bool) {
	if o == nil || isNil(o.OrderDir) {
    return nil, false
	}
	return o.OrderDir, true
}

// HasOrderDir returns a boolean if a field has been set.
func (o *ListDataSourceItemsRequest) HasOrderDir() bool {
	if o != nil && !isNil(o.OrderDir) {
		return true
	}

	return false
}

// SetOrderDir gets a reference to the given OrderDirV2 and assigns it to the OrderDir field.
func (o *ListDataSourceItemsRequest) SetOrderDir(v OrderDirV2) {
	o.OrderDir = &v
}

func (o ListDataSourceItemsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data_source_id"] = o.DataSourceId
	}
	if o.ParentId.IsSet() {
		toSerialize["parent_id"] = o.ParentId.Get()
	}
	if o.Filters.IsSet() {
		toSerialize["filters"] = o.Filters.Get()
	}
	if !isNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if !isNil(o.OrderBy) {
		toSerialize["order_by"] = o.OrderBy
	}
	if !isNil(o.OrderDir) {
		toSerialize["order_dir"] = o.OrderDir
	}
	return json.Marshal(toSerialize)
}

type NullableListDataSourceItemsRequest struct {
	value *ListDataSourceItemsRequest
	isSet bool
}

func (v NullableListDataSourceItemsRequest) Get() *ListDataSourceItemsRequest {
	return v.value
}

func (v *NullableListDataSourceItemsRequest) Set(val *ListDataSourceItemsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListDataSourceItemsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListDataSourceItemsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDataSourceItemsRequest(val *ListDataSourceItemsRequest) *NullableListDataSourceItemsRequest {
	return &NullableListDataSourceItemsRequest{value: val, isSet: true}
}

func (v NullableListDataSourceItemsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDataSourceItemsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


