/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// HelpdeskFileSyncConfig struct for HelpdeskFileSyncConfig
type HelpdeskFileSyncConfig struct {
	FileTypes []HelpdeskFileTypes `json:"file_types,omitempty"`
	SyncAttachments *bool `json:"sync_attachments,omitempty"`
}

// NewHelpdeskFileSyncConfig instantiates a new HelpdeskFileSyncConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelpdeskFileSyncConfig() *HelpdeskFileSyncConfig {
	this := HelpdeskFileSyncConfig{}
	var syncAttachments bool = false
	this.SyncAttachments = &syncAttachments
	return &this
}

// NewHelpdeskFileSyncConfigWithDefaults instantiates a new HelpdeskFileSyncConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelpdeskFileSyncConfigWithDefaults() *HelpdeskFileSyncConfig {
	this := HelpdeskFileSyncConfig{}
	var syncAttachments bool = false
	this.SyncAttachments = &syncAttachments
	return &this
}

// GetFileTypes returns the FileTypes field value if set, zero value otherwise.
func (o *HelpdeskFileSyncConfig) GetFileTypes() []HelpdeskFileTypes {
	if o == nil || isNil(o.FileTypes) {
		var ret []HelpdeskFileTypes
		return ret
	}
	return o.FileTypes
}

// GetFileTypesOk returns a tuple with the FileTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelpdeskFileSyncConfig) GetFileTypesOk() ([]HelpdeskFileTypes, bool) {
	if o == nil || isNil(o.FileTypes) {
    return nil, false
	}
	return o.FileTypes, true
}

// HasFileTypes returns a boolean if a field has been set.
func (o *HelpdeskFileSyncConfig) HasFileTypes() bool {
	if o != nil && !isNil(o.FileTypes) {
		return true
	}

	return false
}

// SetFileTypes gets a reference to the given []HelpdeskFileTypes and assigns it to the FileTypes field.
func (o *HelpdeskFileSyncConfig) SetFileTypes(v []HelpdeskFileTypes) {
	o.FileTypes = v
}

// GetSyncAttachments returns the SyncAttachments field value if set, zero value otherwise.
func (o *HelpdeskFileSyncConfig) GetSyncAttachments() bool {
	if o == nil || isNil(o.SyncAttachments) {
		var ret bool
		return ret
	}
	return *o.SyncAttachments
}

// GetSyncAttachmentsOk returns a tuple with the SyncAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelpdeskFileSyncConfig) GetSyncAttachmentsOk() (*bool, bool) {
	if o == nil || isNil(o.SyncAttachments) {
    return nil, false
	}
	return o.SyncAttachments, true
}

// HasSyncAttachments returns a boolean if a field has been set.
func (o *HelpdeskFileSyncConfig) HasSyncAttachments() bool {
	if o != nil && !isNil(o.SyncAttachments) {
		return true
	}

	return false
}

// SetSyncAttachments gets a reference to the given bool and assigns it to the SyncAttachments field.
func (o *HelpdeskFileSyncConfig) SetSyncAttachments(v bool) {
	o.SyncAttachments = &v
}

func (o HelpdeskFileSyncConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FileTypes) {
		toSerialize["file_types"] = o.FileTypes
	}
	if !isNil(o.SyncAttachments) {
		toSerialize["sync_attachments"] = o.SyncAttachments
	}
	return json.Marshal(toSerialize)
}

type NullableHelpdeskFileSyncConfig struct {
	value *HelpdeskFileSyncConfig
	isSet bool
}

func (v NullableHelpdeskFileSyncConfig) Get() *HelpdeskFileSyncConfig {
	return v.value
}

func (v *NullableHelpdeskFileSyncConfig) Set(val *HelpdeskFileSyncConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableHelpdeskFileSyncConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableHelpdeskFileSyncConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelpdeskFileSyncConfig(val *HelpdeskFileSyncConfig) *NullableHelpdeskFileSyncConfig {
	return &NullableHelpdeskFileSyncConfig{value: val, isSet: true}
}

func (v NullableHelpdeskFileSyncConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelpdeskFileSyncConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


