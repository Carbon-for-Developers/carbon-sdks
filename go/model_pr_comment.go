/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// PRComment struct for PRComment
type PRComment struct {
	Id int32 `json:"id"`
	PullRequestReviewId NullableInt32 `json:"pull_request_review_id"`
	Url string `json:"url"`
	DiffHunk string `json:"diff_hunk"`
	Path string `json:"path"`
	User User `json:"user"`
	Body string `json:"body"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	StartLine NullableInt32 `json:"start_line"`
	Line NullableInt32 `json:"line"`
	RemoteData map[string]interface{} `json:"remote_data"`
}

// NewPRComment instantiates a new PRComment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPRComment(id int32, pullRequestReviewId NullableInt32, url string, diffHunk string, path string, user User, body string, createdAt string, updatedAt string, startLine NullableInt32, line NullableInt32, remoteData map[string]interface{}) *PRComment {
	this := PRComment{}
	this.Id = id
	this.PullRequestReviewId = pullRequestReviewId
	this.Url = url
	this.DiffHunk = diffHunk
	this.Path = path
	this.User = user
	this.Body = body
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.StartLine = startLine
	this.Line = line
	this.RemoteData = remoteData
	return &this
}

// NewPRCommentWithDefaults instantiates a new PRComment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPRCommentWithDefaults() *PRComment {
	this := PRComment{}
	return &this
}

// GetId returns the Id field value
func (o *PRComment) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PRComment) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PRComment) SetId(v int32) {
	o.Id = v
}

// GetPullRequestReviewId returns the PullRequestReviewId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *PRComment) GetPullRequestReviewId() int32 {
	if o == nil || o.PullRequestReviewId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.PullRequestReviewId.Get()
}

// GetPullRequestReviewIdOk returns a tuple with the PullRequestReviewId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRComment) GetPullRequestReviewIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.PullRequestReviewId.Get(), o.PullRequestReviewId.IsSet()
}

// SetPullRequestReviewId sets field value
func (o *PRComment) SetPullRequestReviewId(v int32) {
	o.PullRequestReviewId.Set(&v)
}

// GetUrl returns the Url field value
func (o *PRComment) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *PRComment) GetUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *PRComment) SetUrl(v string) {
	o.Url = v
}

// GetDiffHunk returns the DiffHunk field value
func (o *PRComment) GetDiffHunk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DiffHunk
}

// GetDiffHunkOk returns a tuple with the DiffHunk field value
// and a boolean to check if the value has been set.
func (o *PRComment) GetDiffHunkOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DiffHunk, true
}

// SetDiffHunk sets field value
func (o *PRComment) SetDiffHunk(v string) {
	o.DiffHunk = v
}

// GetPath returns the Path field value
func (o *PRComment) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *PRComment) GetPathOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *PRComment) SetPath(v string) {
	o.Path = v
}

// GetUser returns the User field value
func (o *PRComment) GetUser() User {
	if o == nil {
		var ret User
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *PRComment) GetUserOk() (*User, bool) {
	if o == nil {
    return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *PRComment) SetUser(v User) {
	o.User = v
}

// GetBody returns the Body field value
func (o *PRComment) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *PRComment) GetBodyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *PRComment) SetBody(v string) {
	o.Body = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PRComment) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PRComment) GetCreatedAtOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PRComment) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PRComment) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PRComment) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PRComment) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetStartLine returns the StartLine field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *PRComment) GetStartLine() int32 {
	if o == nil || o.StartLine.Get() == nil {
		var ret int32
		return ret
	}

	return *o.StartLine.Get()
}

// GetStartLineOk returns a tuple with the StartLine field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRComment) GetStartLineOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.StartLine.Get(), o.StartLine.IsSet()
}

// SetStartLine sets field value
func (o *PRComment) SetStartLine(v int32) {
	o.StartLine.Set(&v)
}

// GetLine returns the Line field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *PRComment) GetLine() int32 {
	if o == nil || o.Line.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Line.Get()
}

// GetLineOk returns a tuple with the Line field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRComment) GetLineOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.Line.Get(), o.Line.IsSet()
}

// SetLine sets field value
func (o *PRComment) SetLine(v int32) {
	o.Line.Set(&v)
}

// GetRemoteData returns the RemoteData field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *PRComment) GetRemoteData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.RemoteData
}

// GetRemoteDataOk returns a tuple with the RemoteData field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PRComment) GetRemoteDataOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.RemoteData) {
    return map[string]interface{}{}, false
	}
	return o.RemoteData, true
}

// SetRemoteData sets field value
func (o *PRComment) SetRemoteData(v map[string]interface{}) {
	o.RemoteData = v
}

func (o PRComment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["pull_request_review_id"] = o.PullRequestReviewId.Get()
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["diff_hunk"] = o.DiffHunk
	}
	if true {
		toSerialize["path"] = o.Path
	}
	if true {
		toSerialize["user"] = o.User
	}
	if true {
		toSerialize["body"] = o.Body
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["start_line"] = o.StartLine.Get()
	}
	if true {
		toSerialize["line"] = o.Line.Get()
	}
	if o.RemoteData != nil {
		toSerialize["remote_data"] = o.RemoteData
	}
	return json.Marshal(toSerialize)
}

type NullablePRComment struct {
	value *PRComment
	isSet bool
}

func (v NullablePRComment) Get() *PRComment {
	return v.value
}

func (v *NullablePRComment) Set(val *PRComment) {
	v.value = val
	v.isSet = true
}

func (v NullablePRComment) IsSet() bool {
	return v.isSet
}

func (v *NullablePRComment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePRComment(val *PRComment) *NullablePRComment {
	return &NullablePRComment{value: val, isSet: true}
}

func (v NullablePRComment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePRComment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


