/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// S3AuthRequest struct for S3AuthRequest
type S3AuthRequest struct {
	AccessKey string `json:"access_key"`
	AccessKeySecret string `json:"access_key_secret"`
}

// NewS3AuthRequest instantiates a new S3AuthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3AuthRequest(accessKey string, accessKeySecret string) *S3AuthRequest {
	this := S3AuthRequest{}
	this.AccessKey = accessKey
	this.AccessKeySecret = accessKeySecret
	return &this
}

// NewS3AuthRequestWithDefaults instantiates a new S3AuthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3AuthRequestWithDefaults() *S3AuthRequest {
	this := S3AuthRequest{}
	return &this
}

// GetAccessKey returns the AccessKey field value
func (o *S3AuthRequest) GetAccessKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value
// and a boolean to check if the value has been set.
func (o *S3AuthRequest) GetAccessKeyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AccessKey, true
}

// SetAccessKey sets field value
func (o *S3AuthRequest) SetAccessKey(v string) {
	o.AccessKey = v
}

// GetAccessKeySecret returns the AccessKeySecret field value
func (o *S3AuthRequest) GetAccessKeySecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessKeySecret
}

// GetAccessKeySecretOk returns a tuple with the AccessKeySecret field value
// and a boolean to check if the value has been set.
func (o *S3AuthRequest) GetAccessKeySecretOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AccessKeySecret, true
}

// SetAccessKeySecret sets field value
func (o *S3AuthRequest) SetAccessKeySecret(v string) {
	o.AccessKeySecret = v
}

func (o S3AuthRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["access_key"] = o.AccessKey
	}
	if true {
		toSerialize["access_key_secret"] = o.AccessKeySecret
	}
	return json.Marshal(toSerialize)
}

type NullableS3AuthRequest struct {
	value *S3AuthRequest
	isSet bool
}

func (v NullableS3AuthRequest) Get() *S3AuthRequest {
	return v.value
}

func (v *NullableS3AuthRequest) Set(val *S3AuthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableS3AuthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableS3AuthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3AuthRequest(val *S3AuthRequest) *NullableS3AuthRequest {
	return &NullableS3AuthRequest{value: val, isSet: true}
}

func (v NullableS3AuthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3AuthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


