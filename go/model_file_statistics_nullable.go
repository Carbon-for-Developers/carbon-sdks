/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// FileStatisticsNullable struct for FileStatisticsNullable
type FileStatisticsNullable struct {
	FileFormat NullableFileFormatsNullable `json:"file_format"`
	FileSize NullableInt32 `json:"file_size"`
	NumCharacters NullableInt32 `json:"num_characters"`
	NumTokens NullableInt32 `json:"num_tokens"`
	NumEmbeddings NullableInt32 `json:"num_embeddings"`
}

// NewFileStatisticsNullable instantiates a new FileStatisticsNullable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileStatisticsNullable(fileFormat NullableFileFormatsNullable, fileSize NullableInt32, numCharacters NullableInt32, numTokens NullableInt32, numEmbeddings NullableInt32) *FileStatisticsNullable {
	this := FileStatisticsNullable{}
	this.FileFormat = fileFormat
	this.FileSize = fileSize
	this.NumCharacters = numCharacters
	this.NumTokens = numTokens
	this.NumEmbeddings = numEmbeddings
	return &this
}

// NewFileStatisticsNullableWithDefaults instantiates a new FileStatisticsNullable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileStatisticsNullableWithDefaults() *FileStatisticsNullable {
	this := FileStatisticsNullable{}
	return &this
}

// GetFileFormat returns the FileFormat field value
// If the value is explicit nil, the zero value for FileFormatsNullable will be returned
func (o *FileStatisticsNullable) GetFileFormat() FileFormatsNullable {
	if o == nil || o.FileFormat.Get() == nil {
		var ret FileFormatsNullable
		return ret
	}

	return *o.FileFormat.Get()
}

// GetFileFormatOk returns a tuple with the FileFormat field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileStatisticsNullable) GetFileFormatOk() (*FileFormatsNullable, bool) {
	if o == nil {
    return nil, false
	}
	return o.FileFormat.Get(), o.FileFormat.IsSet()
}

// SetFileFormat sets field value
func (o *FileStatisticsNullable) SetFileFormat(v FileFormatsNullable) {
	o.FileFormat.Set(&v)
}

// GetFileSize returns the FileSize field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *FileStatisticsNullable) GetFileSize() int32 {
	if o == nil || o.FileSize.Get() == nil {
		var ret int32
		return ret
	}

	return *o.FileSize.Get()
}

// GetFileSizeOk returns a tuple with the FileSize field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileStatisticsNullable) GetFileSizeOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.FileSize.Get(), o.FileSize.IsSet()
}

// SetFileSize sets field value
func (o *FileStatisticsNullable) SetFileSize(v int32) {
	o.FileSize.Set(&v)
}

// GetNumCharacters returns the NumCharacters field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *FileStatisticsNullable) GetNumCharacters() int32 {
	if o == nil || o.NumCharacters.Get() == nil {
		var ret int32
		return ret
	}

	return *o.NumCharacters.Get()
}

// GetNumCharactersOk returns a tuple with the NumCharacters field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileStatisticsNullable) GetNumCharactersOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.NumCharacters.Get(), o.NumCharacters.IsSet()
}

// SetNumCharacters sets field value
func (o *FileStatisticsNullable) SetNumCharacters(v int32) {
	o.NumCharacters.Set(&v)
}

// GetNumTokens returns the NumTokens field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *FileStatisticsNullable) GetNumTokens() int32 {
	if o == nil || o.NumTokens.Get() == nil {
		var ret int32
		return ret
	}

	return *o.NumTokens.Get()
}

// GetNumTokensOk returns a tuple with the NumTokens field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileStatisticsNullable) GetNumTokensOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.NumTokens.Get(), o.NumTokens.IsSet()
}

// SetNumTokens sets field value
func (o *FileStatisticsNullable) SetNumTokens(v int32) {
	o.NumTokens.Set(&v)
}

// GetNumEmbeddings returns the NumEmbeddings field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *FileStatisticsNullable) GetNumEmbeddings() int32 {
	if o == nil || o.NumEmbeddings.Get() == nil {
		var ret int32
		return ret
	}

	return *o.NumEmbeddings.Get()
}

// GetNumEmbeddingsOk returns a tuple with the NumEmbeddings field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileStatisticsNullable) GetNumEmbeddingsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.NumEmbeddings.Get(), o.NumEmbeddings.IsSet()
}

// SetNumEmbeddings sets field value
func (o *FileStatisticsNullable) SetNumEmbeddings(v int32) {
	o.NumEmbeddings.Set(&v)
}

func (o FileStatisticsNullable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["file_format"] = o.FileFormat.Get()
	}
	if true {
		toSerialize["file_size"] = o.FileSize.Get()
	}
	if true {
		toSerialize["num_characters"] = o.NumCharacters.Get()
	}
	if true {
		toSerialize["num_tokens"] = o.NumTokens.Get()
	}
	if true {
		toSerialize["num_embeddings"] = o.NumEmbeddings.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableFileStatisticsNullable struct {
	value *FileStatisticsNullable
	isSet bool
}

func (v NullableFileStatisticsNullable) Get() *FileStatisticsNullable {
	return v.value
}

func (v *NullableFileStatisticsNullable) Set(val *FileStatisticsNullable) {
	v.value = val
	v.isSet = true
}

func (v NullableFileStatisticsNullable) IsSet() bool {
	return v.isSet
}

func (v *NullableFileStatisticsNullable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileStatisticsNullable(val *FileStatisticsNullable) *NullableFileStatisticsNullable {
	return &NullableFileStatisticsNullable{value: val, isSet: true}
}

func (v NullableFileStatisticsNullable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileStatisticsNullable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


