/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// DeleteFilesQueryInput struct for DeleteFilesQueryInput
type DeleteFilesQueryInput struct {
	FileIds []int32 `json:"file_ids,omitempty"`
	SyncStatuses []ExternalFileSyncStatuses `json:"sync_statuses,omitempty"`
	DeleteNonSyncedOnly *bool `json:"delete_non_synced_only,omitempty"`
	SendWebhook *bool `json:"send_webhook,omitempty"`
}

// NewDeleteFilesQueryInput instantiates a new DeleteFilesQueryInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteFilesQueryInput() *DeleteFilesQueryInput {
	this := DeleteFilesQueryInput{}
	var deleteNonSyncedOnly bool = false
	this.DeleteNonSyncedOnly = &deleteNonSyncedOnly
	var sendWebhook bool = false
	this.SendWebhook = &sendWebhook
	return &this
}

// NewDeleteFilesQueryInputWithDefaults instantiates a new DeleteFilesQueryInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteFilesQueryInputWithDefaults() *DeleteFilesQueryInput {
	this := DeleteFilesQueryInput{}
	var deleteNonSyncedOnly bool = false
	this.DeleteNonSyncedOnly = &deleteNonSyncedOnly
	var sendWebhook bool = false
	this.SendWebhook = &sendWebhook
	return &this
}

// GetFileIds returns the FileIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeleteFilesQueryInput) GetFileIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}
	return o.FileIds
}

// GetFileIdsOk returns a tuple with the FileIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeleteFilesQueryInput) GetFileIdsOk() ([]int32, bool) {
	if o == nil || isNil(o.FileIds) {
    return nil, false
	}
	return o.FileIds, true
}

// HasFileIds returns a boolean if a field has been set.
func (o *DeleteFilesQueryInput) HasFileIds() bool {
	if o != nil && isNil(o.FileIds) {
		return true
	}

	return false
}

// SetFileIds gets a reference to the given []int32 and assigns it to the FileIds field.
func (o *DeleteFilesQueryInput) SetFileIds(v []int32) {
	o.FileIds = v
}

// GetSyncStatuses returns the SyncStatuses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeleteFilesQueryInput) GetSyncStatuses() []ExternalFileSyncStatuses {
	if o == nil {
		var ret []ExternalFileSyncStatuses
		return ret
	}
	return o.SyncStatuses
}

// GetSyncStatusesOk returns a tuple with the SyncStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeleteFilesQueryInput) GetSyncStatusesOk() ([]ExternalFileSyncStatuses, bool) {
	if o == nil || isNil(o.SyncStatuses) {
    return nil, false
	}
	return o.SyncStatuses, true
}

// HasSyncStatuses returns a boolean if a field has been set.
func (o *DeleteFilesQueryInput) HasSyncStatuses() bool {
	if o != nil && isNil(o.SyncStatuses) {
		return true
	}

	return false
}

// SetSyncStatuses gets a reference to the given []ExternalFileSyncStatuses and assigns it to the SyncStatuses field.
func (o *DeleteFilesQueryInput) SetSyncStatuses(v []ExternalFileSyncStatuses) {
	o.SyncStatuses = v
}

// GetDeleteNonSyncedOnly returns the DeleteNonSyncedOnly field value if set, zero value otherwise.
func (o *DeleteFilesQueryInput) GetDeleteNonSyncedOnly() bool {
	if o == nil || isNil(o.DeleteNonSyncedOnly) {
		var ret bool
		return ret
	}
	return *o.DeleteNonSyncedOnly
}

// GetDeleteNonSyncedOnlyOk returns a tuple with the DeleteNonSyncedOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteFilesQueryInput) GetDeleteNonSyncedOnlyOk() (*bool, bool) {
	if o == nil || isNil(o.DeleteNonSyncedOnly) {
    return nil, false
	}
	return o.DeleteNonSyncedOnly, true
}

// HasDeleteNonSyncedOnly returns a boolean if a field has been set.
func (o *DeleteFilesQueryInput) HasDeleteNonSyncedOnly() bool {
	if o != nil && !isNil(o.DeleteNonSyncedOnly) {
		return true
	}

	return false
}

// SetDeleteNonSyncedOnly gets a reference to the given bool and assigns it to the DeleteNonSyncedOnly field.
func (o *DeleteFilesQueryInput) SetDeleteNonSyncedOnly(v bool) {
	o.DeleteNonSyncedOnly = &v
}

// GetSendWebhook returns the SendWebhook field value if set, zero value otherwise.
func (o *DeleteFilesQueryInput) GetSendWebhook() bool {
	if o == nil || isNil(o.SendWebhook) {
		var ret bool
		return ret
	}
	return *o.SendWebhook
}

// GetSendWebhookOk returns a tuple with the SendWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteFilesQueryInput) GetSendWebhookOk() (*bool, bool) {
	if o == nil || isNil(o.SendWebhook) {
    return nil, false
	}
	return o.SendWebhook, true
}

// HasSendWebhook returns a boolean if a field has been set.
func (o *DeleteFilesQueryInput) HasSendWebhook() bool {
	if o != nil && !isNil(o.SendWebhook) {
		return true
	}

	return false
}

// SetSendWebhook gets a reference to the given bool and assigns it to the SendWebhook field.
func (o *DeleteFilesQueryInput) SetSendWebhook(v bool) {
	o.SendWebhook = &v
}

func (o DeleteFilesQueryInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FileIds != nil {
		toSerialize["file_ids"] = o.FileIds
	}
	if o.SyncStatuses != nil {
		toSerialize["sync_statuses"] = o.SyncStatuses
	}
	if !isNil(o.DeleteNonSyncedOnly) {
		toSerialize["delete_non_synced_only"] = o.DeleteNonSyncedOnly
	}
	if !isNil(o.SendWebhook) {
		toSerialize["send_webhook"] = o.SendWebhook
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteFilesQueryInput struct {
	value *DeleteFilesQueryInput
	isSet bool
}

func (v NullableDeleteFilesQueryInput) Get() *DeleteFilesQueryInput {
	return v.value
}

func (v *NullableDeleteFilesQueryInput) Set(val *DeleteFilesQueryInput) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteFilesQueryInput) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteFilesQueryInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteFilesQueryInput(val *DeleteFilesQueryInput) *NullableDeleteFilesQueryInput {
	return &NullableDeleteFilesQueryInput{value: val, isSet: true}
}

func (v NullableDeleteFilesQueryInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteFilesQueryInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


