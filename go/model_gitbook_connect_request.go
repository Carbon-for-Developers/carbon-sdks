/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// GitbookConnectRequest struct for GitbookConnectRequest
type GitbookConnectRequest struct {
	Organization string `json:"organization"`
	AccessToken string `json:"access_token"`
}

// NewGitbookConnectRequest instantiates a new GitbookConnectRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGitbookConnectRequest(organization string, accessToken string) *GitbookConnectRequest {
	this := GitbookConnectRequest{}
	this.Organization = organization
	this.AccessToken = accessToken
	return &this
}

// NewGitbookConnectRequestWithDefaults instantiates a new GitbookConnectRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGitbookConnectRequestWithDefaults() *GitbookConnectRequest {
	this := GitbookConnectRequest{}
	return &this
}

// GetOrganization returns the Organization field value
func (o *GitbookConnectRequest) GetOrganization() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *GitbookConnectRequest) GetOrganizationOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *GitbookConnectRequest) SetOrganization(v string) {
	o.Organization = v
}

// GetAccessToken returns the AccessToken field value
func (o *GitbookConnectRequest) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *GitbookConnectRequest) GetAccessTokenOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *GitbookConnectRequest) SetAccessToken(v string) {
	o.AccessToken = v
}

func (o GitbookConnectRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["organization"] = o.Organization
	}
	if true {
		toSerialize["access_token"] = o.AccessToken
	}
	return json.Marshal(toSerialize)
}

type NullableGitbookConnectRequest struct {
	value *GitbookConnectRequest
	isSet bool
}

func (v NullableGitbookConnectRequest) Get() *GitbookConnectRequest {
	return v.value
}

func (v *NullableGitbookConnectRequest) Set(val *GitbookConnectRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGitbookConnectRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGitbookConnectRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGitbookConnectRequest(val *GitbookConnectRequest) *NullableGitbookConnectRequest {
	return &NullableGitbookConnectRequest{value: val, isSet: true}
}

func (v NullableGitbookConnectRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGitbookConnectRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


