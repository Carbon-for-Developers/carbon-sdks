/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// EmbeddingsAndChunksFilters struct for EmbeddingsAndChunksFilters
type EmbeddingsAndChunksFilters struct {
	UserFileId int32 `json:"user_file_id"`
	EmbeddingModel NullableEmbeddingGeneratorsNullable `json:"embedding_model,omitempty"`
}

// NewEmbeddingsAndChunksFilters instantiates a new EmbeddingsAndChunksFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbeddingsAndChunksFilters(userFileId int32) *EmbeddingsAndChunksFilters {
	this := EmbeddingsAndChunksFilters{}
	this.UserFileId = userFileId
	var embeddingModel EmbeddingGeneratorsNullable = EMBEDDINGGENERATORSNULLABLE_OPENAI
	this.EmbeddingModel = *NewNullableEmbeddingGeneratorsNullable(&embeddingModel)
	return &this
}

// NewEmbeddingsAndChunksFiltersWithDefaults instantiates a new EmbeddingsAndChunksFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbeddingsAndChunksFiltersWithDefaults() *EmbeddingsAndChunksFilters {
	this := EmbeddingsAndChunksFilters{}
	var embeddingModel EmbeddingGeneratorsNullable = EMBEDDINGGENERATORSNULLABLE_OPENAI
	this.EmbeddingModel = *NewNullableEmbeddingGeneratorsNullable(&embeddingModel)
	return &this
}

// GetUserFileId returns the UserFileId field value
func (o *EmbeddingsAndChunksFilters) GetUserFileId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserFileId
}

// GetUserFileIdOk returns a tuple with the UserFileId field value
// and a boolean to check if the value has been set.
func (o *EmbeddingsAndChunksFilters) GetUserFileIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UserFileId, true
}

// SetUserFileId sets field value
func (o *EmbeddingsAndChunksFilters) SetUserFileId(v int32) {
	o.UserFileId = v
}

// GetEmbeddingModel returns the EmbeddingModel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmbeddingsAndChunksFilters) GetEmbeddingModel() EmbeddingGeneratorsNullable {
	if o == nil || isNil(o.EmbeddingModel.Get()) {
		var ret EmbeddingGeneratorsNullable
		return ret
	}
	return *o.EmbeddingModel.Get()
}

// GetEmbeddingModelOk returns a tuple with the EmbeddingModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmbeddingsAndChunksFilters) GetEmbeddingModelOk() (*EmbeddingGeneratorsNullable, bool) {
	if o == nil {
    return nil, false
	}
	return o.EmbeddingModel.Get(), o.EmbeddingModel.IsSet()
}

// HasEmbeddingModel returns a boolean if a field has been set.
func (o *EmbeddingsAndChunksFilters) HasEmbeddingModel() bool {
	if o != nil && o.EmbeddingModel.IsSet() {
		return true
	}

	return false
}

// SetEmbeddingModel gets a reference to the given NullableEmbeddingGeneratorsNullable and assigns it to the EmbeddingModel field.
func (o *EmbeddingsAndChunksFilters) SetEmbeddingModel(v EmbeddingGeneratorsNullable) {
	o.EmbeddingModel.Set(&v)
}
// SetEmbeddingModelNil sets the value for EmbeddingModel to be an explicit nil
func (o *EmbeddingsAndChunksFilters) SetEmbeddingModelNil() {
	o.EmbeddingModel.Set(nil)
}

// UnsetEmbeddingModel ensures that no value is present for EmbeddingModel, not even an explicit nil
func (o *EmbeddingsAndChunksFilters) UnsetEmbeddingModel() {
	o.EmbeddingModel.Unset()
}

func (o EmbeddingsAndChunksFilters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["user_file_id"] = o.UserFileId
	}
	if o.EmbeddingModel.IsSet() {
		toSerialize["embedding_model"] = o.EmbeddingModel.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableEmbeddingsAndChunksFilters struct {
	value *EmbeddingsAndChunksFilters
	isSet bool
}

func (v NullableEmbeddingsAndChunksFilters) Get() *EmbeddingsAndChunksFilters {
	return v.value
}

func (v *NullableEmbeddingsAndChunksFilters) Set(val *EmbeddingsAndChunksFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbeddingsAndChunksFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbeddingsAndChunksFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbeddingsAndChunksFilters(val *EmbeddingsAndChunksFilters) *NullableEmbeddingsAndChunksFilters {
	return &NullableEmbeddingsAndChunksFilters{value: val, isSet: true}
}

func (v NullableEmbeddingsAndChunksFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbeddingsAndChunksFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


