/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// GDOSWhiteLabelInput struct for GDOSWhiteLabelInput
type GDOSWhiteLabelInput struct {
	DataSourceType GoogleDriveWhiteLabelInputDataSourceType `json:"data_source_type"`
	Credentials GoogleDriveCredentialsProperty `json:"credentials"`
}

// NewGDOSWhiteLabelInput instantiates a new GDOSWhiteLabelInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGDOSWhiteLabelInput(dataSourceType GoogleDriveWhiteLabelInputDataSourceType, credentials GoogleDriveCredentialsProperty) *GDOSWhiteLabelInput {
	this := GDOSWhiteLabelInput{}
	this.DataSourceType = dataSourceType
	this.Credentials = credentials
	return &this
}

// NewGDOSWhiteLabelInputWithDefaults instantiates a new GDOSWhiteLabelInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGDOSWhiteLabelInputWithDefaults() *GDOSWhiteLabelInput {
	this := GDOSWhiteLabelInput{}
	return &this
}

// GetDataSourceType returns the DataSourceType field value
func (o *GDOSWhiteLabelInput) GetDataSourceType() GoogleDriveWhiteLabelInputDataSourceType {
	if o == nil {
		var ret GoogleDriveWhiteLabelInputDataSourceType
		return ret
	}

	return o.DataSourceType
}

// GetDataSourceTypeOk returns a tuple with the DataSourceType field value
// and a boolean to check if the value has been set.
func (o *GDOSWhiteLabelInput) GetDataSourceTypeOk() (*GoogleDriveWhiteLabelInputDataSourceType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DataSourceType, true
}

// SetDataSourceType sets field value
func (o *GDOSWhiteLabelInput) SetDataSourceType(v GoogleDriveWhiteLabelInputDataSourceType) {
	o.DataSourceType = v
}

// GetCredentials returns the Credentials field value
func (o *GDOSWhiteLabelInput) GetCredentials() GoogleDriveCredentialsProperty {
	if o == nil {
		var ret GoogleDriveCredentialsProperty
		return ret
	}

	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value
// and a boolean to check if the value has been set.
func (o *GDOSWhiteLabelInput) GetCredentialsOk() (*GoogleDriveCredentialsProperty, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Credentials, true
}

// SetCredentials sets field value
func (o *GDOSWhiteLabelInput) SetCredentials(v GoogleDriveCredentialsProperty) {
	o.Credentials = v
}

func (o GDOSWhiteLabelInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data_source_type"] = o.DataSourceType
	}
	if true {
		toSerialize["credentials"] = o.Credentials
	}
	return json.Marshal(toSerialize)
}

type NullableGDOSWhiteLabelInput struct {
	value *GDOSWhiteLabelInput
	isSet bool
}

func (v NullableGDOSWhiteLabelInput) Get() *GDOSWhiteLabelInput {
	return v.value
}

func (v *NullableGDOSWhiteLabelInput) Set(val *GDOSWhiteLabelInput) {
	v.value = val
	v.isSet = true
}

func (v NullableGDOSWhiteLabelInput) IsSet() bool {
	return v.isSet
}

func (v *NullableGDOSWhiteLabelInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGDOSWhiteLabelInput(val *GDOSWhiteLabelInput) *NullableGDOSWhiteLabelInput {
	return &NullableGDOSWhiteLabelInput{value: val, isSet: true}
}

func (v NullableGDOSWhiteLabelInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGDOSWhiteLabelInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


