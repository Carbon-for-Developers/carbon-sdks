/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// OANSCZGF struct for OANSCZGF
type OANSCZGF struct {
	Source OAuthAuthenticationSource `json:"source"`
	AccessToken *string `json:"access_token,omitempty"`
	RefreshToken NullableString `json:"refresh_token,omitempty"`
	WorkspaceId *string `json:"workspace_id,omitempty"`
	TenantName *string `json:"tenant_name,omitempty"`
	SiteName *string `json:"site_name,omitempty"`
	Subdomain *string `json:"subdomain,omitempty"`
	AccessTokenSecret *string `json:"access_token_secret,omitempty"`
	Username *string `json:"username,omitempty"`
	ZoteroId *string `json:"zotero_id,omitempty"`
	OrganizationName *string `json:"organization_name,omitempty"`
	Domain *string `json:"domain,omitempty"`
	ApiKey *string `json:"api_key,omitempty"`
	AccessKey *string `json:"access_key,omitempty"`
	AccessKeySecret *string `json:"access_key_secret,omitempty"`
}

// NewOANSCZGF instantiates a new OANSCZGF object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOANSCZGF(source OAuthAuthenticationSource) *OANSCZGF {
	this := OANSCZGF{}
	this.Source = source
	return &this
}

// NewOANSCZGFWithDefaults instantiates a new OANSCZGF object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOANSCZGFWithDefaults() *OANSCZGF {
	this := OANSCZGF{}
	return &this
}

// GetSource returns the Source field value
func (o *OANSCZGF) GetSource() OAuthAuthenticationSource {
	if o == nil {
		var ret OAuthAuthenticationSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *OANSCZGF) GetSourceOk() (*OAuthAuthenticationSource, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *OANSCZGF) SetSource(v OAuthAuthenticationSource) {
	o.Source = v
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *OANSCZGF) GetAccessToken() string {
	if o == nil || isNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OANSCZGF) GetAccessTokenOk() (*string, bool) {
	if o == nil || isNil(o.AccessToken) {
    return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *OANSCZGF) HasAccessToken() bool {
	if o != nil && !isNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *OANSCZGF) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OANSCZGF) GetRefreshToken() string {
	if o == nil || isNil(o.RefreshToken.Get()) {
		var ret string
		return ret
	}
	return *o.RefreshToken.Get()
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OANSCZGF) GetRefreshTokenOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.RefreshToken.Get(), o.RefreshToken.IsSet()
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *OANSCZGF) HasRefreshToken() bool {
	if o != nil && o.RefreshToken.IsSet() {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given NullableString and assigns it to the RefreshToken field.
func (o *OANSCZGF) SetRefreshToken(v string) {
	o.RefreshToken.Set(&v)
}
// SetRefreshTokenNil sets the value for RefreshToken to be an explicit nil
func (o *OANSCZGF) SetRefreshTokenNil() {
	o.RefreshToken.Set(nil)
}

// UnsetRefreshToken ensures that no value is present for RefreshToken, not even an explicit nil
func (o *OANSCZGF) UnsetRefreshToken() {
	o.RefreshToken.Unset()
}

// GetWorkspaceId returns the WorkspaceId field value if set, zero value otherwise.
func (o *OANSCZGF) GetWorkspaceId() string {
	if o == nil || isNil(o.WorkspaceId) {
		var ret string
		return ret
	}
	return *o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OANSCZGF) GetWorkspaceIdOk() (*string, bool) {
	if o == nil || isNil(o.WorkspaceId) {
    return nil, false
	}
	return o.WorkspaceId, true
}

// HasWorkspaceId returns a boolean if a field has been set.
func (o *OANSCZGF) HasWorkspaceId() bool {
	if o != nil && !isNil(o.WorkspaceId) {
		return true
	}

	return false
}

// SetWorkspaceId gets a reference to the given string and assigns it to the WorkspaceId field.
func (o *OANSCZGF) SetWorkspaceId(v string) {
	o.WorkspaceId = &v
}

// GetTenantName returns the TenantName field value if set, zero value otherwise.
func (o *OANSCZGF) GetTenantName() string {
	if o == nil || isNil(o.TenantName) {
		var ret string
		return ret
	}
	return *o.TenantName
}

// GetTenantNameOk returns a tuple with the TenantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OANSCZGF) GetTenantNameOk() (*string, bool) {
	if o == nil || isNil(o.TenantName) {
    return nil, false
	}
	return o.TenantName, true
}

// HasTenantName returns a boolean if a field has been set.
func (o *OANSCZGF) HasTenantName() bool {
	if o != nil && !isNil(o.TenantName) {
		return true
	}

	return false
}

// SetTenantName gets a reference to the given string and assigns it to the TenantName field.
func (o *OANSCZGF) SetTenantName(v string) {
	o.TenantName = &v
}

// GetSiteName returns the SiteName field value if set, zero value otherwise.
func (o *OANSCZGF) GetSiteName() string {
	if o == nil || isNil(o.SiteName) {
		var ret string
		return ret
	}
	return *o.SiteName
}

// GetSiteNameOk returns a tuple with the SiteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OANSCZGF) GetSiteNameOk() (*string, bool) {
	if o == nil || isNil(o.SiteName) {
    return nil, false
	}
	return o.SiteName, true
}

// HasSiteName returns a boolean if a field has been set.
func (o *OANSCZGF) HasSiteName() bool {
	if o != nil && !isNil(o.SiteName) {
		return true
	}

	return false
}

// SetSiteName gets a reference to the given string and assigns it to the SiteName field.
func (o *OANSCZGF) SetSiteName(v string) {
	o.SiteName = &v
}

// GetSubdomain returns the Subdomain field value if set, zero value otherwise.
func (o *OANSCZGF) GetSubdomain() string {
	if o == nil || isNil(o.Subdomain) {
		var ret string
		return ret
	}
	return *o.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OANSCZGF) GetSubdomainOk() (*string, bool) {
	if o == nil || isNil(o.Subdomain) {
    return nil, false
	}
	return o.Subdomain, true
}

// HasSubdomain returns a boolean if a field has been set.
func (o *OANSCZGF) HasSubdomain() bool {
	if o != nil && !isNil(o.Subdomain) {
		return true
	}

	return false
}

// SetSubdomain gets a reference to the given string and assigns it to the Subdomain field.
func (o *OANSCZGF) SetSubdomain(v string) {
	o.Subdomain = &v
}

// GetAccessTokenSecret returns the AccessTokenSecret field value if set, zero value otherwise.
func (o *OANSCZGF) GetAccessTokenSecret() string {
	if o == nil || isNil(o.AccessTokenSecret) {
		var ret string
		return ret
	}
	return *o.AccessTokenSecret
}

// GetAccessTokenSecretOk returns a tuple with the AccessTokenSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OANSCZGF) GetAccessTokenSecretOk() (*string, bool) {
	if o == nil || isNil(o.AccessTokenSecret) {
    return nil, false
	}
	return o.AccessTokenSecret, true
}

// HasAccessTokenSecret returns a boolean if a field has been set.
func (o *OANSCZGF) HasAccessTokenSecret() bool {
	if o != nil && !isNil(o.AccessTokenSecret) {
		return true
	}

	return false
}

// SetAccessTokenSecret gets a reference to the given string and assigns it to the AccessTokenSecret field.
func (o *OANSCZGF) SetAccessTokenSecret(v string) {
	o.AccessTokenSecret = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *OANSCZGF) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OANSCZGF) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
    return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *OANSCZGF) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *OANSCZGF) SetUsername(v string) {
	o.Username = &v
}

// GetZoteroId returns the ZoteroId field value if set, zero value otherwise.
func (o *OANSCZGF) GetZoteroId() string {
	if o == nil || isNil(o.ZoteroId) {
		var ret string
		return ret
	}
	return *o.ZoteroId
}

// GetZoteroIdOk returns a tuple with the ZoteroId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OANSCZGF) GetZoteroIdOk() (*string, bool) {
	if o == nil || isNil(o.ZoteroId) {
    return nil, false
	}
	return o.ZoteroId, true
}

// HasZoteroId returns a boolean if a field has been set.
func (o *OANSCZGF) HasZoteroId() bool {
	if o != nil && !isNil(o.ZoteroId) {
		return true
	}

	return false
}

// SetZoteroId gets a reference to the given string and assigns it to the ZoteroId field.
func (o *OANSCZGF) SetZoteroId(v string) {
	o.ZoteroId = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *OANSCZGF) GetOrganizationName() string {
	if o == nil || isNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OANSCZGF) GetOrganizationNameOk() (*string, bool) {
	if o == nil || isNil(o.OrganizationName) {
    return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *OANSCZGF) HasOrganizationName() bool {
	if o != nil && !isNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *OANSCZGF) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *OANSCZGF) GetDomain() string {
	if o == nil || isNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OANSCZGF) GetDomainOk() (*string, bool) {
	if o == nil || isNil(o.Domain) {
    return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *OANSCZGF) HasDomain() bool {
	if o != nil && !isNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *OANSCZGF) SetDomain(v string) {
	o.Domain = &v
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *OANSCZGF) GetApiKey() string {
	if o == nil || isNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OANSCZGF) GetApiKeyOk() (*string, bool) {
	if o == nil || isNil(o.ApiKey) {
    return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *OANSCZGF) HasApiKey() bool {
	if o != nil && !isNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *OANSCZGF) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *OANSCZGF) GetAccessKey() string {
	if o == nil || isNil(o.AccessKey) {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OANSCZGF) GetAccessKeyOk() (*string, bool) {
	if o == nil || isNil(o.AccessKey) {
    return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *OANSCZGF) HasAccessKey() bool {
	if o != nil && !isNil(o.AccessKey) {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *OANSCZGF) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetAccessKeySecret returns the AccessKeySecret field value if set, zero value otherwise.
func (o *OANSCZGF) GetAccessKeySecret() string {
	if o == nil || isNil(o.AccessKeySecret) {
		var ret string
		return ret
	}
	return *o.AccessKeySecret
}

// GetAccessKeySecretOk returns a tuple with the AccessKeySecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OANSCZGF) GetAccessKeySecretOk() (*string, bool) {
	if o == nil || isNil(o.AccessKeySecret) {
    return nil, false
	}
	return o.AccessKeySecret, true
}

// HasAccessKeySecret returns a boolean if a field has been set.
func (o *OANSCZGF) HasAccessKeySecret() bool {
	if o != nil && !isNil(o.AccessKeySecret) {
		return true
	}

	return false
}

// SetAccessKeySecret gets a reference to the given string and assigns it to the AccessKeySecret field.
func (o *OANSCZGF) SetAccessKeySecret(v string) {
	o.AccessKeySecret = &v
}

func (o OANSCZGF) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["source"] = o.Source
	}
	if !isNil(o.AccessToken) {
		toSerialize["access_token"] = o.AccessToken
	}
	if o.RefreshToken.IsSet() {
		toSerialize["refresh_token"] = o.RefreshToken.Get()
	}
	if !isNil(o.WorkspaceId) {
		toSerialize["workspace_id"] = o.WorkspaceId
	}
	if !isNil(o.TenantName) {
		toSerialize["tenant_name"] = o.TenantName
	}
	if !isNil(o.SiteName) {
		toSerialize["site_name"] = o.SiteName
	}
	if !isNil(o.Subdomain) {
		toSerialize["subdomain"] = o.Subdomain
	}
	if !isNil(o.AccessTokenSecret) {
		toSerialize["access_token_secret"] = o.AccessTokenSecret
	}
	if !isNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !isNil(o.ZoteroId) {
		toSerialize["zotero_id"] = o.ZoteroId
	}
	if !isNil(o.OrganizationName) {
		toSerialize["organization_name"] = o.OrganizationName
	}
	if !isNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !isNil(o.ApiKey) {
		toSerialize["api_key"] = o.ApiKey
	}
	if !isNil(o.AccessKey) {
		toSerialize["access_key"] = o.AccessKey
	}
	if !isNil(o.AccessKeySecret) {
		toSerialize["access_key_secret"] = o.AccessKeySecret
	}
	return json.Marshal(toSerialize)
}

type NullableOANSCZGF struct {
	value *OANSCZGF
	isSet bool
}

func (v NullableOANSCZGF) Get() *OANSCZGF {
	return v.value
}

func (v *NullableOANSCZGF) Set(val *OANSCZGF) {
	v.value = val
	v.isSet = true
}

func (v NullableOANSCZGF) IsSet() bool {
	return v.isSet
}

func (v *NullableOANSCZGF) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOANSCZGF(val *OANSCZGF) *NullableOANSCZGF {
	return &NullableOANSCZGF{value: val, isSet: true}
}

func (v NullableOANSCZGF) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOANSCZGF) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


