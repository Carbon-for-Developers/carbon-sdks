/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// HelpdeskGlobalFileSyncConfigNullable Used to configure file syncing for certain connectors, for example including attachments
type HelpdeskGlobalFileSyncConfigNullable struct {
	SyncAttachments *bool `json:"sync_attachments,omitempty"`
}

// NewHelpdeskGlobalFileSyncConfigNullable instantiates a new HelpdeskGlobalFileSyncConfigNullable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelpdeskGlobalFileSyncConfigNullable() *HelpdeskGlobalFileSyncConfigNullable {
	this := HelpdeskGlobalFileSyncConfigNullable{}
	var syncAttachments bool = false
	this.SyncAttachments = &syncAttachments
	return &this
}

// NewHelpdeskGlobalFileSyncConfigNullableWithDefaults instantiates a new HelpdeskGlobalFileSyncConfigNullable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelpdeskGlobalFileSyncConfigNullableWithDefaults() *HelpdeskGlobalFileSyncConfigNullable {
	this := HelpdeskGlobalFileSyncConfigNullable{}
	var syncAttachments bool = false
	this.SyncAttachments = &syncAttachments
	return &this
}

// GetSyncAttachments returns the SyncAttachments field value if set, zero value otherwise.
func (o *HelpdeskGlobalFileSyncConfigNullable) GetSyncAttachments() bool {
	if o == nil || isNil(o.SyncAttachments) {
		var ret bool
		return ret
	}
	return *o.SyncAttachments
}

// GetSyncAttachmentsOk returns a tuple with the SyncAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelpdeskGlobalFileSyncConfigNullable) GetSyncAttachmentsOk() (*bool, bool) {
	if o == nil || isNil(o.SyncAttachments) {
    return nil, false
	}
	return o.SyncAttachments, true
}

// HasSyncAttachments returns a boolean if a field has been set.
func (o *HelpdeskGlobalFileSyncConfigNullable) HasSyncAttachments() bool {
	if o != nil && !isNil(o.SyncAttachments) {
		return true
	}

	return false
}

// SetSyncAttachments gets a reference to the given bool and assigns it to the SyncAttachments field.
func (o *HelpdeskGlobalFileSyncConfigNullable) SetSyncAttachments(v bool) {
	o.SyncAttachments = &v
}

func (o HelpdeskGlobalFileSyncConfigNullable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SyncAttachments) {
		toSerialize["sync_attachments"] = o.SyncAttachments
	}
	return json.Marshal(toSerialize)
}

type NullableHelpdeskGlobalFileSyncConfigNullable struct {
	value *HelpdeskGlobalFileSyncConfigNullable
	isSet bool
}

func (v NullableHelpdeskGlobalFileSyncConfigNullable) Get() *HelpdeskGlobalFileSyncConfigNullable {
	return v.value
}

func (v *NullableHelpdeskGlobalFileSyncConfigNullable) Set(val *HelpdeskGlobalFileSyncConfigNullable) {
	v.value = val
	v.isSet = true
}

func (v NullableHelpdeskGlobalFileSyncConfigNullable) IsSet() bool {
	return v.isSet
}

func (v *NullableHelpdeskGlobalFileSyncConfigNullable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelpdeskGlobalFileSyncConfigNullable(val *HelpdeskGlobalFileSyncConfigNullable) *NullableHelpdeskGlobalFileSyncConfigNullable {
	return &NullableHelpdeskGlobalFileSyncConfigNullable{value: val, isSet: true}
}

func (v NullableHelpdeskGlobalFileSyncConfigNullable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelpdeskGlobalFileSyncConfigNullable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


