/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// HybridSearchTuningParams struct for HybridSearchTuningParams
type HybridSearchTuningParams struct {
	WeightA float32 `json:"weight_a"`
	WeightB float32 `json:"weight_b"`
}

// NewHybridSearchTuningParams instantiates a new HybridSearchTuningParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHybridSearchTuningParams(weightA float32, weightB float32) *HybridSearchTuningParams {
	this := HybridSearchTuningParams{}
	this.WeightA = weightA
	this.WeightB = weightB
	return &this
}

// NewHybridSearchTuningParamsWithDefaults instantiates a new HybridSearchTuningParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHybridSearchTuningParamsWithDefaults() *HybridSearchTuningParams {
	this := HybridSearchTuningParams{}
	return &this
}

// GetWeightA returns the WeightA field value
func (o *HybridSearchTuningParams) GetWeightA() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.WeightA
}

// GetWeightAOk returns a tuple with the WeightA field value
// and a boolean to check if the value has been set.
func (o *HybridSearchTuningParams) GetWeightAOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.WeightA, true
}

// SetWeightA sets field value
func (o *HybridSearchTuningParams) SetWeightA(v float32) {
	o.WeightA = v
}

// GetWeightB returns the WeightB field value
func (o *HybridSearchTuningParams) GetWeightB() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.WeightB
}

// GetWeightBOk returns a tuple with the WeightB field value
// and a boolean to check if the value has been set.
func (o *HybridSearchTuningParams) GetWeightBOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.WeightB, true
}

// SetWeightB sets field value
func (o *HybridSearchTuningParams) SetWeightB(v float32) {
	o.WeightB = v
}

func (o HybridSearchTuningParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["weight_a"] = o.WeightA
	}
	if true {
		toSerialize["weight_b"] = o.WeightB
	}
	return json.Marshal(toSerialize)
}

type NullableHybridSearchTuningParams struct {
	value *HybridSearchTuningParams
	isSet bool
}

func (v NullableHybridSearchTuningParams) Get() *HybridSearchTuningParams {
	return v.value
}

func (v *NullableHybridSearchTuningParams) Set(val *HybridSearchTuningParams) {
	v.value = val
	v.isSet = true
}

func (v NullableHybridSearchTuningParams) IsSet() bool {
	return v.isSet
}

func (v *NullableHybridSearchTuningParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHybridSearchTuningParams(val *HybridSearchTuningParams) *NullableHybridSearchTuningParams {
	return &NullableHybridSearchTuningParams{value: val, isSet: true}
}

func (v NullableHybridSearchTuningParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHybridSearchTuningParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


