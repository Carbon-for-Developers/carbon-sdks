/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// GithubAuthentication struct for GithubAuthentication
type GithubAuthentication struct {
	Source string `json:"source"`
	AccessToken string `json:"access_token"`
	Username string `json:"username"`
}

// NewGithubAuthentication instantiates a new GithubAuthentication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubAuthentication(source string, accessToken string, username string) *GithubAuthentication {
	this := GithubAuthentication{}
	this.Source = source
	this.AccessToken = accessToken
	this.Username = username
	return &this
}

// NewGithubAuthenticationWithDefaults instantiates a new GithubAuthentication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubAuthenticationWithDefaults() *GithubAuthentication {
	this := GithubAuthentication{}
	return &this
}

// GetSource returns the Source field value
func (o *GithubAuthentication) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *GithubAuthentication) GetSourceOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *GithubAuthentication) SetSource(v string) {
	o.Source = v
}

// GetAccessToken returns the AccessToken field value
func (o *GithubAuthentication) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *GithubAuthentication) GetAccessTokenOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *GithubAuthentication) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetUsername returns the Username field value
func (o *GithubAuthentication) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *GithubAuthentication) GetUsernameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *GithubAuthentication) SetUsername(v string) {
	o.Username = v
}

func (o GithubAuthentication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["source"] = o.Source
	}
	if true {
		toSerialize["access_token"] = o.AccessToken
	}
	if true {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableGithubAuthentication struct {
	value *GithubAuthentication
	isSet bool
}

func (v NullableGithubAuthentication) Get() *GithubAuthentication {
	return v.value
}

func (v *NullableGithubAuthentication) Set(val *GithubAuthentication) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubAuthentication) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubAuthentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubAuthentication(val *GithubAuthentication) *NullableGithubAuthentication {
	return &NullableGithubAuthentication{value: val, isSet: true}
}

func (v NullableGithubAuthentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubAuthentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


