/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// UpdateUsersInput struct for UpdateUsersInput
type UpdateUsersInput struct {
	// List of organization supplied user IDs
	CustomerIds []string `json:"customer_ids"`
	AutoSyncEnabledSources NullableAutoSyncEnabledSourcesProperty `json:"auto_sync_enabled_sources,omitempty"`
	// Custom file upload limit for the user over *all* user's files across all uploads.          If set, then the user will not be allowed to upload more files than this limit. If not set, or if set to -1,         then the user will have no limit.
	MaxFiles NullableInt32 `json:"max_files,omitempty"`
	// Custom file upload limit for the user across a single upload.         If set, then the user will not be allowed to upload more files than this limit in a single upload. If not set,         or if set to -1, then the user will have no limit.
	MaxFilesPerUpload NullableInt32 `json:"max_files_per_upload,omitempty"`
}

// NewUpdateUsersInput instantiates a new UpdateUsersInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUsersInput(customerIds []string) *UpdateUsersInput {
	this := UpdateUsersInput{}
	this.CustomerIds = customerIds
	return &this
}

// NewUpdateUsersInputWithDefaults instantiates a new UpdateUsersInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUsersInputWithDefaults() *UpdateUsersInput {
	this := UpdateUsersInput{}
	return &this
}

// GetCustomerIds returns the CustomerIds field value
func (o *UpdateUsersInput) GetCustomerIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.CustomerIds
}

// GetCustomerIdsOk returns a tuple with the CustomerIds field value
// and a boolean to check if the value has been set.
func (o *UpdateUsersInput) GetCustomerIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.CustomerIds, true
}

// SetCustomerIds sets field value
func (o *UpdateUsersInput) SetCustomerIds(v []string) {
	o.CustomerIds = v
}

// GetAutoSyncEnabledSources returns the AutoSyncEnabledSources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateUsersInput) GetAutoSyncEnabledSources() AutoSyncEnabledSourcesProperty {
	if o == nil || isNil(o.AutoSyncEnabledSources.Get()) {
		var ret AutoSyncEnabledSourcesProperty
		return ret
	}
	return *o.AutoSyncEnabledSources.Get()
}

// GetAutoSyncEnabledSourcesOk returns a tuple with the AutoSyncEnabledSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateUsersInput) GetAutoSyncEnabledSourcesOk() (*AutoSyncEnabledSourcesProperty, bool) {
	if o == nil {
    return nil, false
	}
	return o.AutoSyncEnabledSources.Get(), o.AutoSyncEnabledSources.IsSet()
}

// HasAutoSyncEnabledSources returns a boolean if a field has been set.
func (o *UpdateUsersInput) HasAutoSyncEnabledSources() bool {
	if o != nil && o.AutoSyncEnabledSources.IsSet() {
		return true
	}

	return false
}

// SetAutoSyncEnabledSources gets a reference to the given NullableAutoSyncEnabledSourcesProperty and assigns it to the AutoSyncEnabledSources field.
func (o *UpdateUsersInput) SetAutoSyncEnabledSources(v AutoSyncEnabledSourcesProperty) {
	o.AutoSyncEnabledSources.Set(&v)
}
// SetAutoSyncEnabledSourcesNil sets the value for AutoSyncEnabledSources to be an explicit nil
func (o *UpdateUsersInput) SetAutoSyncEnabledSourcesNil() {
	o.AutoSyncEnabledSources.Set(nil)
}

// UnsetAutoSyncEnabledSources ensures that no value is present for AutoSyncEnabledSources, not even an explicit nil
func (o *UpdateUsersInput) UnsetAutoSyncEnabledSources() {
	o.AutoSyncEnabledSources.Unset()
}

// GetMaxFiles returns the MaxFiles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateUsersInput) GetMaxFiles() int32 {
	if o == nil || isNil(o.MaxFiles.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxFiles.Get()
}

// GetMaxFilesOk returns a tuple with the MaxFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateUsersInput) GetMaxFilesOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.MaxFiles.Get(), o.MaxFiles.IsSet()
}

// HasMaxFiles returns a boolean if a field has been set.
func (o *UpdateUsersInput) HasMaxFiles() bool {
	if o != nil && o.MaxFiles.IsSet() {
		return true
	}

	return false
}

// SetMaxFiles gets a reference to the given NullableInt32 and assigns it to the MaxFiles field.
func (o *UpdateUsersInput) SetMaxFiles(v int32) {
	o.MaxFiles.Set(&v)
}
// SetMaxFilesNil sets the value for MaxFiles to be an explicit nil
func (o *UpdateUsersInput) SetMaxFilesNil() {
	o.MaxFiles.Set(nil)
}

// UnsetMaxFiles ensures that no value is present for MaxFiles, not even an explicit nil
func (o *UpdateUsersInput) UnsetMaxFiles() {
	o.MaxFiles.Unset()
}

// GetMaxFilesPerUpload returns the MaxFilesPerUpload field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateUsersInput) GetMaxFilesPerUpload() int32 {
	if o == nil || isNil(o.MaxFilesPerUpload.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxFilesPerUpload.Get()
}

// GetMaxFilesPerUploadOk returns a tuple with the MaxFilesPerUpload field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateUsersInput) GetMaxFilesPerUploadOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.MaxFilesPerUpload.Get(), o.MaxFilesPerUpload.IsSet()
}

// HasMaxFilesPerUpload returns a boolean if a field has been set.
func (o *UpdateUsersInput) HasMaxFilesPerUpload() bool {
	if o != nil && o.MaxFilesPerUpload.IsSet() {
		return true
	}

	return false
}

// SetMaxFilesPerUpload gets a reference to the given NullableInt32 and assigns it to the MaxFilesPerUpload field.
func (o *UpdateUsersInput) SetMaxFilesPerUpload(v int32) {
	o.MaxFilesPerUpload.Set(&v)
}
// SetMaxFilesPerUploadNil sets the value for MaxFilesPerUpload to be an explicit nil
func (o *UpdateUsersInput) SetMaxFilesPerUploadNil() {
	o.MaxFilesPerUpload.Set(nil)
}

// UnsetMaxFilesPerUpload ensures that no value is present for MaxFilesPerUpload, not even an explicit nil
func (o *UpdateUsersInput) UnsetMaxFilesPerUpload() {
	o.MaxFilesPerUpload.Unset()
}

func (o UpdateUsersInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["customer_ids"] = o.CustomerIds
	}
	if o.AutoSyncEnabledSources.IsSet() {
		toSerialize["auto_sync_enabled_sources"] = o.AutoSyncEnabledSources.Get()
	}
	if o.MaxFiles.IsSet() {
		toSerialize["max_files"] = o.MaxFiles.Get()
	}
	if o.MaxFilesPerUpload.IsSet() {
		toSerialize["max_files_per_upload"] = o.MaxFilesPerUpload.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateUsersInput struct {
	value *UpdateUsersInput
	isSet bool
}

func (v NullableUpdateUsersInput) Get() *UpdateUsersInput {
	return v.value
}

func (v *NullableUpdateUsersInput) Set(val *UpdateUsersInput) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUsersInput) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUsersInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUsersInput(val *UpdateUsersInput) *NullableUpdateUsersInput {
	return &NullableUpdateUsersInput{value: val, isSet: true}
}

func (v NullableUpdateUsersInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUsersInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


