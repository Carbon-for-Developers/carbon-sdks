/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
	"fmt"
)

// CustomCredentialsType the model 'CustomCredentialsType'
type CustomCredentialsType string

// List of CustomCredentialsType
const (
	CUSTOMCREDENTIALSTYPE_OPENAI CustomCredentialsType = "OPENAI"
	CUSTOMCREDENTIALSTYPE_COHERE CustomCredentialsType = "COHERE"
	CUSTOMCREDENTIALSTYPE_AZURE_OPENAI CustomCredentialsType = "AZURE_OPENAI"
	CUSTOMCREDENTIALSTYPE_AZURE_OPENAI_V3 CustomCredentialsType = "AZURE_OPENAI_V3"
	CUSTOMCREDENTIALSTYPE_UPSTAGE CustomCredentialsType = "UPSTAGE"
)

// All allowed values of CustomCredentialsType enum
var AllowedCustomCredentialsTypeEnumValues = []CustomCredentialsType{
	"OPENAI",
	"COHERE",
	"AZURE_OPENAI",
	"AZURE_OPENAI_V3",
	"UPSTAGE",
}

func (v *CustomCredentialsType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CustomCredentialsType(value)
	for _, existing := range AllowedCustomCredentialsTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CustomCredentialsType", value)
}

// NewCustomCredentialsTypeFromValue returns a pointer to a valid CustomCredentialsType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCustomCredentialsTypeFromValue(v string) (*CustomCredentialsType, error) {
	ev := CustomCredentialsType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CustomCredentialsType: valid values are %v", v, AllowedCustomCredentialsTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CustomCredentialsType) IsValid() bool {
	for _, existing := range AllowedCustomCredentialsTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CustomCredentialsType value
func (v CustomCredentialsType) Ptr() *CustomCredentialsType {
	return &v
}

type NullableCustomCredentialsType struct {
	value *CustomCredentialsType
	isSet bool
}

func (v NullableCustomCredentialsType) Get() *CustomCredentialsType {
	return v.value
}

func (v *NullableCustomCredentialsType) Set(val *CustomCredentialsType) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomCredentialsType) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomCredentialsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomCredentialsType(val *CustomCredentialsType) *NullableCustomCredentialsType {
	return &NullableCustomCredentialsType{value: val, isSet: true}
}

func (v NullableCustomCredentialsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomCredentialsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

