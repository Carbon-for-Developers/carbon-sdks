/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// FreskdeskAuthentication struct for FreskdeskAuthentication
type FreskdeskAuthentication struct {
	Source interface{} `json:"source"`
	Domain string `json:"domain"`
	ApiKey string `json:"api_key"`
}

// NewFreskdeskAuthentication instantiates a new FreskdeskAuthentication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFreskdeskAuthentication(source interface{}, domain string, apiKey string) *FreskdeskAuthentication {
	this := FreskdeskAuthentication{}
	this.Source = source
	this.Domain = domain
	this.ApiKey = apiKey
	return &this
}

// NewFreskdeskAuthenticationWithDefaults instantiates a new FreskdeskAuthentication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFreskdeskAuthenticationWithDefaults() *FreskdeskAuthentication {
	this := FreskdeskAuthentication{}
	return &this
}

// GetSource returns the Source field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *FreskdeskAuthentication) GetSource() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FreskdeskAuthentication) GetSourceOk() (*interface{}, bool) {
	if o == nil || isNil(o.Source) {
    return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *FreskdeskAuthentication) SetSource(v interface{}) {
	o.Source = v
}

// GetDomain returns the Domain field value
func (o *FreskdeskAuthentication) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *FreskdeskAuthentication) GetDomainOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *FreskdeskAuthentication) SetDomain(v string) {
	o.Domain = v
}

// GetApiKey returns the ApiKey field value
func (o *FreskdeskAuthentication) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *FreskdeskAuthentication) GetApiKeyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *FreskdeskAuthentication) SetApiKey(v string) {
	o.ApiKey = v
}

func (o FreskdeskAuthentication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if true {
		toSerialize["domain"] = o.Domain
	}
	if true {
		toSerialize["api_key"] = o.ApiKey
	}
	return json.Marshal(toSerialize)
}

type NullableFreskdeskAuthentication struct {
	value *FreskdeskAuthentication
	isSet bool
}

func (v NullableFreskdeskAuthentication) Get() *FreskdeskAuthentication {
	return v.value
}

func (v *NullableFreskdeskAuthentication) Set(val *FreskdeskAuthentication) {
	v.value = val
	v.isSet = true
}

func (v NullableFreskdeskAuthentication) IsSet() bool {
	return v.isSet
}

func (v *NullableFreskdeskAuthentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFreskdeskAuthentication(val *FreskdeskAuthentication) *NullableFreskdeskAuthentication {
	return &NullableFreskdeskAuthentication{value: val, isSet: true}
}

func (v NullableFreskdeskAuthentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFreskdeskAuthentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


