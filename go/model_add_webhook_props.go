/*
Carbon

Connect external data to LLMs, no matter the source.

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package carbon

import (
	"encoding/json"
)

// AddWebhookProps struct for AddWebhookProps
type AddWebhookProps struct {
	Url string `json:"url"`
}

// NewAddWebhookProps instantiates a new AddWebhookProps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddWebhookProps(url string) *AddWebhookProps {
	this := AddWebhookProps{}
	this.Url = url
	return &this
}

// NewAddWebhookPropsWithDefaults instantiates a new AddWebhookProps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddWebhookPropsWithDefaults() *AddWebhookProps {
	this := AddWebhookProps{}
	return &this
}

// GetUrl returns the Url field value
func (o *AddWebhookProps) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *AddWebhookProps) GetUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *AddWebhookProps) SetUrl(v string) {
	o.Url = v
}

func (o AddWebhookProps) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableAddWebhookProps struct {
	value *AddWebhookProps
	isSet bool
}

func (v NullableAddWebhookProps) Get() *AddWebhookProps {
	return v.value
}

func (v *NullableAddWebhookProps) Set(val *AddWebhookProps) {
	v.value = val
	v.isSet = true
}

func (v NullableAddWebhookProps) IsSet() bool {
	return v.isSet
}

func (v *NullableAddWebhookProps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddWebhookProps(val *AddWebhookProps) *NullableAddWebhookProps {
	return &NullableAddWebhookProps{value: val, isSet: true}
}

func (v NullableAddWebhookProps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddWebhookProps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


