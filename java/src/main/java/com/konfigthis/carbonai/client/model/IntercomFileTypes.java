/*
 * Carbon
 * Connect external data to LLMs, no matter the source.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.carbonai.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets IntercomFileTypes
 */
@JsonAdapter(IntercomFileTypes.Adapter.class)public enum IntercomFileTypes {
  
  ARTICLE("ARTICLE"),
  
  COLLECTION("COLLECTION"),
  
  HELP_CENTER("HELP_CENTER"),
  
  TICKET("TICKET"),
  
  TICKET_ATTACHMENT("TICKET_ATTACHMENT"),
  
  CONTACT("CONTACT"),
  
  ADMIN("ADMIN"),
  
  TEAM("TEAM"),
  
  CONVERSATION("CONVERSATION");

  private String value;

  IntercomFileTypes(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static IntercomFileTypes fromValue(String value) {
    for (IntercomFileTypes b : IntercomFileTypes.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<IntercomFileTypes> {
    @Override
    public void write(final JsonWriter jsonWriter, final IntercomFileTypes enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public IntercomFileTypes read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return IntercomFileTypes.fromValue(value);
    }
  }
}

