/*
 * Carbon
 * Connect external data to LLMs, no matter the source.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.carbonai.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The format in which the text content of the file should be parsed. Notion files are the only files         that support this feature. The default parsed text format is plain text.
 */
@JsonAdapter(ParsedTextFormatsNullable.Adapter.class)public enum ParsedTextFormatsNullable {
  
  PLAIN_TEXT("PLAIN_TEXT"),
  
  MARKDOWN("MARKDOWN");

  private String value;

  ParsedTextFormatsNullable(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ParsedTextFormatsNullable fromValue(String value) {
    for (ParsedTextFormatsNullable b : ParsedTextFormatsNullable.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<ParsedTextFormatsNullable> {
    @Override
    public void write(final JsonWriter jsonWriter, final ParsedTextFormatsNullable enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ParsedTextFormatsNullable read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ParsedTextFormatsNullable.fromValue(value);
    }
  }
}

