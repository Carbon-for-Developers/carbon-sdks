/*
 * Carbon
 * Connect external data to LLMs, no matter the source.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.carbonai.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.carbonai.client.JSON;

/**
 * UserResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class UserResponse {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_ORGANIZATION_ID = "organization_id";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ID)
  private Integer organizationId;

  public static final String SERIALIZED_NAME_ORGANIZATION_SUPPLIED_USER_ID = "organization_supplied_user_id";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_SUPPLIED_USER_ID)
  private String organizationSuppliedUserId;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_DELETED_AT = "deleted_at";
  @SerializedName(SERIALIZED_NAME_DELETED_AT)
  private OffsetDateTime deletedAt;

  public static final String SERIALIZED_NAME_NUM_FILES_SYNCED = "num_files_synced";
  @SerializedName(SERIALIZED_NAME_NUM_FILES_SYNCED)
  private Integer numFilesSynced;

  public static final String SERIALIZED_NAME_NUM_CHARACTERS_SYNCED = "num_characters_synced";
  @SerializedName(SERIALIZED_NAME_NUM_CHARACTERS_SYNCED)
  private Integer numCharactersSynced;

  public static final String SERIALIZED_NAME_NUM_TOKENS_SYNCED = "num_tokens_synced";
  @SerializedName(SERIALIZED_NAME_NUM_TOKENS_SYNCED)
  private Integer numTokensSynced;

  public static final String SERIALIZED_NAME_AGGREGATE_FILE_SIZE = "aggregate_file_size";
  @SerializedName(SERIALIZED_NAME_AGGREGATE_FILE_SIZE)
  private Object aggregateFileSize;

  public static final String SERIALIZED_NAME_AGGREGATE_NUM_CHARACTERS = "aggregate_num_characters";
  @SerializedName(SERIALIZED_NAME_AGGREGATE_NUM_CHARACTERS)
  private Object aggregateNumCharacters;

  public static final String SERIALIZED_NAME_AGGREGATE_NUM_TOKENS = "aggregate_num_tokens";
  @SerializedName(SERIALIZED_NAME_AGGREGATE_NUM_TOKENS)
  private Object aggregateNumTokens;

  public static final String SERIALIZED_NAME_AGGREGATE_NUM_EMBEDDINGS = "aggregate_num_embeddings";
  @SerializedName(SERIALIZED_NAME_AGGREGATE_NUM_EMBEDDINGS)
  private Object aggregateNumEmbeddings;

  public static final String SERIALIZED_NAME_AGGREGATE_NUM_FILES_BY_SOURCE = "aggregate_num_files_by_source";
  @SerializedName(SERIALIZED_NAME_AGGREGATE_NUM_FILES_BY_SOURCE)
  private Object aggregateNumFilesBySource;

  public static final String SERIALIZED_NAME_AGGREGATE_NUM_FILES_BY_FILE_FORMAT = "aggregate_num_files_by_file_format";
  @SerializedName(SERIALIZED_NAME_AGGREGATE_NUM_FILES_BY_FILE_FORMAT)
  private Object aggregateNumFilesByFileFormat;

  public static final String SERIALIZED_NAME_UNIQUE_FILE_TAGS = "unique_file_tags";
  @SerializedName(SERIALIZED_NAME_UNIQUE_FILE_TAGS)
  private List<Object> uniqueFileTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLED_FEATURES = "enabled_features";
  @SerializedName(SERIALIZED_NAME_ENABLED_FEATURES)
  private Object enabledFeatures;

  public static final String SERIALIZED_NAME_CUSTOM_LIMITS = "custom_limits";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LIMITS)
  private Object customLimits;

  public static final String SERIALIZED_NAME_AUTO_SYNC_ENABLED_SOURCES = "auto_sync_enabled_sources";
  @SerializedName(SERIALIZED_NAME_AUTO_SYNC_ENABLED_SOURCES)
  private List<Object> autoSyncEnabledSources = new ArrayList<>();

  public UserResponse() {
  }

  public UserResponse id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public UserResponse organizationId(Integer organizationId) {
    
    
    
    
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Get organizationId
   * @return organizationId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getOrganizationId() {
    return organizationId;
  }


  public void setOrganizationId(Integer organizationId) {
    
    
    
    this.organizationId = organizationId;
  }


  public UserResponse organizationSuppliedUserId(String organizationSuppliedUserId) {
    
    
    
    
    this.organizationSuppliedUserId = organizationSuppliedUserId;
    return this;
  }

   /**
   * Get organizationSuppliedUserId
   * @return organizationSuppliedUserId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getOrganizationSuppliedUserId() {
    return organizationSuppliedUserId;
  }


  public void setOrganizationSuppliedUserId(String organizationSuppliedUserId) {
    
    
    
    this.organizationSuppliedUserId = organizationSuppliedUserId;
  }


  public UserResponse createdAt(OffsetDateTime createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public UserResponse updatedAt(OffsetDateTime updatedAt) {
    
    
    
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    
    
    
    this.updatedAt = updatedAt;
  }


  public UserResponse deletedAt(OffsetDateTime deletedAt) {
    
    
    
    
    this.deletedAt = deletedAt;
    return this;
  }

   /**
   * Get deletedAt
   * @return deletedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getDeletedAt() {
    return deletedAt;
  }


  public void setDeletedAt(OffsetDateTime deletedAt) {
    
    
    
    this.deletedAt = deletedAt;
  }


  public UserResponse numFilesSynced(Integer numFilesSynced) {
    
    
    
    
    this.numFilesSynced = numFilesSynced;
    return this;
  }

   /**
   * Get numFilesSynced
   * @return numFilesSynced
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getNumFilesSynced() {
    return numFilesSynced;
  }


  public void setNumFilesSynced(Integer numFilesSynced) {
    
    
    
    this.numFilesSynced = numFilesSynced;
  }


  public UserResponse numCharactersSynced(Integer numCharactersSynced) {
    
    
    
    
    this.numCharactersSynced = numCharactersSynced;
    return this;
  }

   /**
   * Get numCharactersSynced
   * @return numCharactersSynced
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getNumCharactersSynced() {
    return numCharactersSynced;
  }


  public void setNumCharactersSynced(Integer numCharactersSynced) {
    
    
    
    this.numCharactersSynced = numCharactersSynced;
  }


  public UserResponse numTokensSynced(Integer numTokensSynced) {
    
    
    
    
    this.numTokensSynced = numTokensSynced;
    return this;
  }

   /**
   * Get numTokensSynced
   * @return numTokensSynced
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getNumTokensSynced() {
    return numTokensSynced;
  }


  public void setNumTokensSynced(Integer numTokensSynced) {
    
    
    
    this.numTokensSynced = numTokensSynced;
  }


  public UserResponse aggregateFileSize(Object aggregateFileSize) {
    
    
    
    
    this.aggregateFileSize = aggregateFileSize;
    return this;
  }

   /**
   * Get aggregateFileSize
   * @return aggregateFileSize
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Object getAggregateFileSize() {
    return aggregateFileSize;
  }


  public void setAggregateFileSize(Object aggregateFileSize) {
    
    
    
    this.aggregateFileSize = aggregateFileSize;
  }


  public UserResponse aggregateNumCharacters(Object aggregateNumCharacters) {
    
    
    
    
    this.aggregateNumCharacters = aggregateNumCharacters;
    return this;
  }

   /**
   * Get aggregateNumCharacters
   * @return aggregateNumCharacters
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Object getAggregateNumCharacters() {
    return aggregateNumCharacters;
  }


  public void setAggregateNumCharacters(Object aggregateNumCharacters) {
    
    
    
    this.aggregateNumCharacters = aggregateNumCharacters;
  }


  public UserResponse aggregateNumTokens(Object aggregateNumTokens) {
    
    
    
    
    this.aggregateNumTokens = aggregateNumTokens;
    return this;
  }

   /**
   * Get aggregateNumTokens
   * @return aggregateNumTokens
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Object getAggregateNumTokens() {
    return aggregateNumTokens;
  }


  public void setAggregateNumTokens(Object aggregateNumTokens) {
    
    
    
    this.aggregateNumTokens = aggregateNumTokens;
  }


  public UserResponse aggregateNumEmbeddings(Object aggregateNumEmbeddings) {
    
    
    
    
    this.aggregateNumEmbeddings = aggregateNumEmbeddings;
    return this;
  }

   /**
   * Get aggregateNumEmbeddings
   * @return aggregateNumEmbeddings
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Object getAggregateNumEmbeddings() {
    return aggregateNumEmbeddings;
  }


  public void setAggregateNumEmbeddings(Object aggregateNumEmbeddings) {
    
    
    
    this.aggregateNumEmbeddings = aggregateNumEmbeddings;
  }


  public UserResponse aggregateNumFilesBySource(Object aggregateNumFilesBySource) {
    
    
    
    
    this.aggregateNumFilesBySource = aggregateNumFilesBySource;
    return this;
  }

   /**
   * Get aggregateNumFilesBySource
   * @return aggregateNumFilesBySource
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Object getAggregateNumFilesBySource() {
    return aggregateNumFilesBySource;
  }


  public void setAggregateNumFilesBySource(Object aggregateNumFilesBySource) {
    
    
    
    this.aggregateNumFilesBySource = aggregateNumFilesBySource;
  }


  public UserResponse aggregateNumFilesByFileFormat(Object aggregateNumFilesByFileFormat) {
    
    
    
    
    this.aggregateNumFilesByFileFormat = aggregateNumFilesByFileFormat;
    return this;
  }

   /**
   * Get aggregateNumFilesByFileFormat
   * @return aggregateNumFilesByFileFormat
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Object getAggregateNumFilesByFileFormat() {
    return aggregateNumFilesByFileFormat;
  }


  public void setAggregateNumFilesByFileFormat(Object aggregateNumFilesByFileFormat) {
    
    
    
    this.aggregateNumFilesByFileFormat = aggregateNumFilesByFileFormat;
  }


  public UserResponse uniqueFileTags(List<Object> uniqueFileTags) {
    
    
    
    
    this.uniqueFileTags = uniqueFileTags;
    return this;
  }

  public UserResponse addUniqueFileTagsItem(Object uniqueFileTagsItem) {
    this.uniqueFileTags.add(uniqueFileTagsItem);
    return this;
  }

   /**
   * Get uniqueFileTags
   * @return uniqueFileTags
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getUniqueFileTags() {
    return uniqueFileTags;
  }


  public void setUniqueFileTags(List<Object> uniqueFileTags) {
    
    
    
    this.uniqueFileTags = uniqueFileTags;
  }


  public UserResponse enabledFeatures(Object enabledFeatures) {
    
    
    
    
    this.enabledFeatures = enabledFeatures;
    return this;
  }

   /**
   * Get enabledFeatures
   * @return enabledFeatures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getEnabledFeatures() {
    return enabledFeatures;
  }


  public void setEnabledFeatures(Object enabledFeatures) {
    
    
    
    this.enabledFeatures = enabledFeatures;
  }


  public UserResponse customLimits(Object customLimits) {
    
    
    
    
    this.customLimits = customLimits;
    return this;
  }

   /**
   * Get customLimits
   * @return customLimits
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "{}", required = true, value = "")

  public Object getCustomLimits() {
    return customLimits;
  }


  public void setCustomLimits(Object customLimits) {
    
    
    
    this.customLimits = customLimits;
  }


  public UserResponse autoSyncEnabledSources(List<Object> autoSyncEnabledSources) {
    
    
    
    
    this.autoSyncEnabledSources = autoSyncEnabledSources;
    return this;
  }

  public UserResponse addAutoSyncEnabledSourcesItem(Object autoSyncEnabledSourcesItem) {
    this.autoSyncEnabledSources.add(autoSyncEnabledSourcesItem);
    return this;
  }

   /**
   * Get autoSyncEnabledSources
   * @return autoSyncEnabledSources
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "[]", required = true, value = "")

  public List<Object> getAutoSyncEnabledSources() {
    return autoSyncEnabledSources;
  }


  public void setAutoSyncEnabledSources(List<Object> autoSyncEnabledSources) {
    
    
    
    this.autoSyncEnabledSources = autoSyncEnabledSources;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UserResponse instance itself
   */
  public UserResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserResponse userResponse = (UserResponse) o;
    return Objects.equals(this.id, userResponse.id) &&
        Objects.equals(this.organizationId, userResponse.organizationId) &&
        Objects.equals(this.organizationSuppliedUserId, userResponse.organizationSuppliedUserId) &&
        Objects.equals(this.createdAt, userResponse.createdAt) &&
        Objects.equals(this.updatedAt, userResponse.updatedAt) &&
        Objects.equals(this.deletedAt, userResponse.deletedAt) &&
        Objects.equals(this.numFilesSynced, userResponse.numFilesSynced) &&
        Objects.equals(this.numCharactersSynced, userResponse.numCharactersSynced) &&
        Objects.equals(this.numTokensSynced, userResponse.numTokensSynced) &&
        Objects.equals(this.aggregateFileSize, userResponse.aggregateFileSize) &&
        Objects.equals(this.aggregateNumCharacters, userResponse.aggregateNumCharacters) &&
        Objects.equals(this.aggregateNumTokens, userResponse.aggregateNumTokens) &&
        Objects.equals(this.aggregateNumEmbeddings, userResponse.aggregateNumEmbeddings) &&
        Objects.equals(this.aggregateNumFilesBySource, userResponse.aggregateNumFilesBySource) &&
        Objects.equals(this.aggregateNumFilesByFileFormat, userResponse.aggregateNumFilesByFileFormat) &&
        Objects.equals(this.uniqueFileTags, userResponse.uniqueFileTags) &&
        Objects.equals(this.enabledFeatures, userResponse.enabledFeatures) &&
        Objects.equals(this.customLimits, userResponse.customLimits) &&
        Objects.equals(this.autoSyncEnabledSources, userResponse.autoSyncEnabledSources)&&
        Objects.equals(this.additionalProperties, userResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, organizationId, organizationSuppliedUserId, createdAt, updatedAt, deletedAt, numFilesSynced, numCharactersSynced, numTokensSynced, aggregateFileSize, aggregateNumCharacters, aggregateNumTokens, aggregateNumEmbeddings, aggregateNumFilesBySource, aggregateNumFilesByFileFormat, uniqueFileTags, enabledFeatures, customLimits, autoSyncEnabledSources, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    organizationSuppliedUserId: ").append(toIndentedString(organizationSuppliedUserId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    numFilesSynced: ").append(toIndentedString(numFilesSynced)).append("\n");
    sb.append("    numCharactersSynced: ").append(toIndentedString(numCharactersSynced)).append("\n");
    sb.append("    numTokensSynced: ").append(toIndentedString(numTokensSynced)).append("\n");
    sb.append("    aggregateFileSize: ").append(toIndentedString(aggregateFileSize)).append("\n");
    sb.append("    aggregateNumCharacters: ").append(toIndentedString(aggregateNumCharacters)).append("\n");
    sb.append("    aggregateNumTokens: ").append(toIndentedString(aggregateNumTokens)).append("\n");
    sb.append("    aggregateNumEmbeddings: ").append(toIndentedString(aggregateNumEmbeddings)).append("\n");
    sb.append("    aggregateNumFilesBySource: ").append(toIndentedString(aggregateNumFilesBySource)).append("\n");
    sb.append("    aggregateNumFilesByFileFormat: ").append(toIndentedString(aggregateNumFilesByFileFormat)).append("\n");
    sb.append("    uniqueFileTags: ").append(toIndentedString(uniqueFileTags)).append("\n");
    sb.append("    enabledFeatures: ").append(toIndentedString(enabledFeatures)).append("\n");
    sb.append("    customLimits: ").append(toIndentedString(customLimits)).append("\n");
    sb.append("    autoSyncEnabledSources: ").append(toIndentedString(autoSyncEnabledSources)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("organization_id");
    openapiFields.add("organization_supplied_user_id");
    openapiFields.add("created_at");
    openapiFields.add("updated_at");
    openapiFields.add("deleted_at");
    openapiFields.add("num_files_synced");
    openapiFields.add("num_characters_synced");
    openapiFields.add("num_tokens_synced");
    openapiFields.add("aggregate_file_size");
    openapiFields.add("aggregate_num_characters");
    openapiFields.add("aggregate_num_tokens");
    openapiFields.add("aggregate_num_embeddings");
    openapiFields.add("aggregate_num_files_by_source");
    openapiFields.add("aggregate_num_files_by_file_format");
    openapiFields.add("unique_file_tags");
    openapiFields.add("enabled_features");
    openapiFields.add("custom_limits");
    openapiFields.add("auto_sync_enabled_sources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("organization_id");
    openapiRequiredFields.add("organization_supplied_user_id");
    openapiRequiredFields.add("created_at");
    openapiRequiredFields.add("updated_at");
    openapiRequiredFields.add("deleted_at");
    openapiRequiredFields.add("num_files_synced");
    openapiRequiredFields.add("num_characters_synced");
    openapiRequiredFields.add("num_tokens_synced");
    openapiRequiredFields.add("aggregate_file_size");
    openapiRequiredFields.add("aggregate_num_characters");
    openapiRequiredFields.add("aggregate_num_tokens");
    openapiRequiredFields.add("aggregate_num_embeddings");
    openapiRequiredFields.add("aggregate_num_files_by_source");
    openapiRequiredFields.add("aggregate_num_files_by_file_format");
    openapiRequiredFields.add("unique_file_tags");
    openapiRequiredFields.add("enabled_features");
    openapiRequiredFields.add("custom_limits");
    openapiRequiredFields.add("auto_sync_enabled_sources");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UserResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UserResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserResponse is not found in the empty JSON string", UserResponse.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UserResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("organization_supplied_user_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organization_supplied_user_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organization_supplied_user_id").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("unique_file_tags") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("unique_file_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `unique_file_tags` to be an array in the JSON string but got `%s`", jsonObj.get("unique_file_tags").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("auto_sync_enabled_sources") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("auto_sync_enabled_sources").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `auto_sync_enabled_sources` to be an array in the JSON string but got `%s`", jsonObj.get("auto_sync_enabled_sources").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<UserResponse>() {
           @Override
           public void write(JsonWriter out, UserResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else if (entry.getValue() == null) {
                   obj.addProperty(entry.getKey(), (String) null);
                 } else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UserResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             UserResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UserResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UserResponse
  * @throws IOException if the JSON string is invalid with respect to UserResponse
  */
  public static UserResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserResponse.class);
  }

 /**
  * Convert an instance of UserResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

