/*
 * Carbon
 * Connect external data to LLMs, no matter the source.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.carbonai.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.carbonai.client.model.EmbeddingGeneratorsNullable;
import com.konfigthis.carbonai.client.model.FileSyncConfigNullable;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for FreshDeskConnectRequest
 */
public class FreshDeskConnectRequestTest {
    private final FreshDeskConnectRequest model = new FreshDeskConnectRequest();

    /**
     * Model tests for FreshDeskConnectRequest
     */
    @Test
    public void testFreshDeskConnectRequest() {
        // TODO: test FreshDeskConnectRequest
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'domain'
     */
    @Test
    public void domainTest() {
        // TODO: test domain
    }

    /**
     * Test the property 'apiKey'
     */
    @Test
    public void apiKeyTest() {
        // TODO: test apiKey
    }

    /**
     * Test the property 'chunkSize'
     */
    @Test
    public void chunkSizeTest() {
        // TODO: test chunkSize
    }

    /**
     * Test the property 'chunkOverlap'
     */
    @Test
    public void chunkOverlapTest() {
        // TODO: test chunkOverlap
    }

    /**
     * Test the property 'skipEmbeddingGeneration'
     */
    @Test
    public void skipEmbeddingGenerationTest() {
        // TODO: test skipEmbeddingGeneration
    }

    /**
     * Test the property 'embeddingModel'
     */
    @Test
    public void embeddingModelTest() {
        // TODO: test embeddingModel
    }

    /**
     * Test the property 'generateSparseVectors'
     */
    @Test
    public void generateSparseVectorsTest() {
        // TODO: test generateSparseVectors
    }

    /**
     * Test the property 'prependFilenameToChunks'
     */
    @Test
    public void prependFilenameToChunksTest() {
        // TODO: test prependFilenameToChunks
    }

    /**
     * Test the property 'syncFilesOnConnection'
     */
    @Test
    public void syncFilesOnConnectionTest() {
        // TODO: test syncFilesOnConnection
    }

    /**
     * Test the property 'requestId'
     */
    @Test
    public void requestIdTest() {
        // TODO: test requestId
    }

    /**
     * Test the property 'syncSourceItems'
     */
    @Test
    public void syncSourceItemsTest() {
        // TODO: test syncSourceItems
    }

    /**
     * Test the property 'fileSyncConfig'
     */
    @Test
    public void fileSyncConfigTest() {
        // TODO: test fileSyncConfig
    }

}
