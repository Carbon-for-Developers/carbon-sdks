//
// EmbeddingAndChunk.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct EmbeddingAndChunk: Codable, JSONEncodable, Hashable {

    public var userFileId: Int
    public var chunkIndex: Int?
    public var sourceContent: String
    public var embedding: [Double]?
    public var contentMetadata: AnyCodable?

    public init(userFileId: Int, chunkIndex: Int?, sourceContent: String, embedding: [Double]?, contentMetadata: AnyCodable?) {
        self.userFileId = userFileId
        self.chunkIndex = chunkIndex
        self.sourceContent = sourceContent
        self.embedding = embedding
        self.contentMetadata = contentMetadata
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case userFileId = "user_file_id"
        case chunkIndex = "chunk_index"
        case sourceContent = "source_content"
        case embedding
        case contentMetadata = "content_metadata"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(userFileId, forKey: .userFileId)
        try container.encode(chunkIndex, forKey: .chunkIndex)
        try container.encode(sourceContent, forKey: .sourceContent)
        try container.encode(embedding, forKey: .embedding)
        try container.encode(contentMetadata, forKey: .contentMetadata)
    }
}

