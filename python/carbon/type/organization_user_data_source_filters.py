# coding: utf-8

"""
    Carbon

    Connect external data to LLMs, no matter the source.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from carbon.type.data_source_type_nullable import DataSourceTypeNullable
from carbon.type.organization_user_data_source_filters_ids import OrganizationUserDataSourceFiltersIds

class RequiredOrganizationUserDataSourceFilters(TypedDict):
    pass

class OptionalOrganizationUserDataSourceFilters(TypedDict, total=False):
    #          Tags to filter by. Supports logical AND and OR operations. Input should be like below:         {             \"OR\": [                 {                 \"key\": \"subject\",                 \"value\": \"holy-bible\",                 \"negate\": false                 },                 {                     \"key\": \"person-of-interest\",                     \"value\": \"jesus christ\",                     \"negate\": false                 },                 {                     \"key\": \"genre\",                     \"value\": \"fiction\",                     \"negate\": true                 }                 {                     \"AND\": [                         {                             \"key\": \"subject\",                             \"value\": \"tao-te-ching\",                             \"negate\": true                         },                         {                             \"key\": \"author\",                             \"value\": \"lao-tzu\",                             \"negate\": false                         }                     ]                 }             ]         }         For a single filter, the filter block can be placed within either an \"AND\" or \"OR\" block.         
    tags: typing.Optional[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]]

    source: typing.Optional[DataSourceTypeNullable]

    ids: typing.Optional[OrganizationUserDataSourceFiltersIds]

    revoked_access: typing.Optional[bool]

class OrganizationUserDataSourceFilters(RequiredOrganizationUserDataSourceFilters, OptionalOrganizationUserDataSourceFilters):
    pass
