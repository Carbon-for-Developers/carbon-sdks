# coding: utf-8

"""
    Carbon

    Connect external data to LLMs, no matter the source.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from carbon import schemas  # noqa: F401


class FileStatisticsNullable(
    schemas.DictBase,
    schemas.NoneBase,
    schemas.Schema,
    schemas.NoneFrozenDictMixin
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "num_tokens",
            "num_embeddings",
            "file_format",
            "file_size",
            "num_characters",
        }
        
        class properties:
        
            @staticmethod
            def file_format() -> typing.Type['FileFormatsNullable']:
                return FileFormatsNullable
            
            
            class file_size(
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'file_size':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class num_characters(
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'num_characters':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class num_tokens(
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'num_tokens':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class num_embeddings(
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'num_embeddings':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            __annotations__ = {
                "file_format": file_format,
                "file_size": file_size,
                "num_characters": num_characters,
                "num_tokens": num_tokens,
                "num_embeddings": num_embeddings,
            }

    
    num_tokens: MetaOapg.properties.num_tokens
    num_embeddings: MetaOapg.properties.num_embeddings
    file_format: 'FileFormatsNullable'
    file_size: MetaOapg.properties.file_size
    num_characters: MetaOapg.properties.num_characters
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["file_format"]) -> 'FileFormatsNullable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["file_size"]) -> MetaOapg.properties.file_size: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["num_characters"]) -> MetaOapg.properties.num_characters: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["num_tokens"]) -> MetaOapg.properties.num_tokens: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["num_embeddings"]) -> MetaOapg.properties.num_embeddings: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["file_format", "file_size", "num_characters", "num_tokens", "num_embeddings", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["file_format"]) -> 'FileFormatsNullable': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["file_size"]) -> MetaOapg.properties.file_size: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["num_characters"]) -> MetaOapg.properties.num_characters: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["num_tokens"]) -> MetaOapg.properties.num_tokens: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["num_embeddings"]) -> MetaOapg.properties.num_embeddings: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["file_format", "file_size", "num_characters", "num_tokens", "num_embeddings", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, None, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'FileStatisticsNullable':
        return super().__new__(
            cls,
            *args,
            _configuration=_configuration,
            **kwargs,
        )

from carbon.model.file_formats_nullable import FileFormatsNullable
