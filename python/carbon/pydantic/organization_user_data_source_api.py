# coding: utf-8

"""
    Carbon

    Connect external data to LLMs, no matter the source.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from carbon.pydantic.data_source_last_sync_actions import DataSourceLastSyncActions
from carbon.pydantic.data_source_sync_statuses import DataSourceSyncStatuses
from carbon.pydantic.data_source_type import DataSourceType

class OrganizationUserDataSourceAPI(BaseModel):
    id: int = Field(alias='id')

    data_source_external_id: typing.Optional[str] = Field(alias='data_source_external_id')

    data_source_type: DataSourceType = Field(alias='data_source_type')

    token: typing.Optional[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]] = Field(alias='token')

    sync_status: DataSourceSyncStatuses = Field(alias='sync_status')

    source_items_synced_at: typing.Optional[datetime] = Field(alias='source_items_synced_at')

    organization_user_id: int = Field(alias='organization_user_id')

    organization_id: int = Field(alias='organization_id')

    organization_supplied_user_id: str = Field(alias='organization_supplied_user_id')

    revoked_access: bool = Field(alias='revoked_access')

    last_synced_at: datetime = Field(alias='last_synced_at')

    last_sync_action: DataSourceLastSyncActions = Field(alias='last_sync_action')

    created_at: datetime = Field(alias='created_at')

    updated_at: datetime = Field(alias='updated_at')
    class Config:
        arbitrary_types_allowed = True
