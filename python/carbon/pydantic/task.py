# coding: utf-8

"""
    Carbon

    Connect external data to LLMs, no matter the source.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from carbon.pydantic.partial_account_nullable import PartialAccountNullable
from carbon.pydantic.partial_contact_nullable import PartialContactNullable
from carbon.pydantic.partial_owner import PartialOwner

class Task(BaseModel):
    description: typing.Optional[str] = Field(alias='description')

    id: str = Field(alias='id')

    owner: PartialOwner = Field(alias='owner')

    subject: typing.Optional[str] = Field(alias='subject')

    status: typing.Optional[str] = Field(alias='status')

    priority: typing.Optional[str] = Field(alias='priority')

    account: PartialAccountNullable = Field(alias='account')

    contact: PartialContactNullable = Field(alias='contact')

    created_at: str = Field(alias='created_at')

    updated_at: str = Field(alias='updated_at')

    is_deleted: bool = Field(alias='is_deleted')

    remote_data: typing.Optional[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]] = Field(alias='remote_data')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
